[simplemethods:3268]    classlist:   1,441.99 ms,  0.96 GB
[simplemethods:3268]        (cap):     477.64 ms,  0.96 GB
Point to add NativeImageInlineDuringParsingPlugin true true
NativeImageInlineDuringParsingPlugin added
No inline info
[simplemethods:3268]        setup:   1,636.57 ms,  0.96 GB
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getComponentHub, java.lang.Class, caller: newMultiArrayRecursion, com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getComponentHub, java.lang.Class, caller: newMultiArrayRecursion, com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets
Method to inline: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getCollectOnAllocationPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getAllocationBeforePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy, caller: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: safeToInt, org.graalvm.compiler.core.common.NumUtil, caller: pointerTo, com.oracle.svm.core.util.NonmovableByteArrayReader
Method to inline: support, com.oracle.svm.core.heap.PhysicalMemory, caller: size, com.oracle.svm.core.heap.PhysicalMemory
Method to inline: isEnabled, com.oracle.svm.core.log.RealLog, caller: logException, com.oracle.svm.core.graal.snippets.CEntryPointSnippets
Method to inline: autoflush, com.oracle.svm.core.log.RealLog, caller: doShutdown, com.oracle.svm.core.jdk.VMErrorSubstitutions
Method to inline: <init>, java.io.StringWriter, caller: logException, com.oracle.svm.core.graal.snippets.CEntryPointSnippets
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getInstanceSize, com.oracle.svm.core.hub.LayoutEncoding, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: fromTarget, com.oracle.svm.core.thread.JavaThreads, caller: ensureJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.io.Writer, caller: <init>, java.io.StringWriter
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: getCollectOnAllocationPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getThreadGroup, java.lang.Thread, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: toTarget, com.oracle.svm.core.thread.JavaThreads, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: toTarget, com.oracle.svm.core.thread.JavaThreads, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: isDaemon, java.lang.Thread, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: DetachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: attachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface$Support
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: getAddress, com.oracle.svm.jni.JNIThreadLocalEnvironment
Method to inline: support, com.oracle.svm.core.heap.PhysicalMemory, caller: hasSize, com.oracle.svm.core.heap.PhysicalMemory
Method to inline: getGlobalFunctionTable, com.oracle.svm.jni.functions.JNIFunctionTables, caller: getAddress, com.oracle.svm.jni.JNIThreadLocalEnvironment
Method to inline: hasSize, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl, caller: hasSize, com.oracle.svm.core.heap.PhysicalMemory
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXmx, com.oracle.svm.core.option.XOptions
Method to inline: decodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: deleteLocalRef, com.oracle.svm.jni.JNIObjectHandles
Method to inline: <init>, com.oracle.svm.core.handles.ThreadLocalHandles, caller: getLocals, com.oracle.svm.jni.JNIObjectHandles
Method to inline: encodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: newLocalRef, com.oracle.svm.jni.JNIObjectHandles
Method to inline: getInstanceSize, com.oracle.svm.core.hub.LayoutEncoding, caller: getSizeFromObject, com.oracle.svm.core.hub.LayoutEncoding
Method to inline: decodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: getObject, com.oracle.svm.jni.JNIObjectHandles
Method to inline: hasRemaining, java.nio.Buffer, caller: utf8ToString, com.oracle.svm.core.util.Utf8
Method to inline: encodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: createLocal, com.oracle.svm.jni.JNIObjectHandles
Method to inline: initialSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: popFrame, com.oracle.svm.core.handles.ThreadLocalHandles, caller: popLocalFrame, com.oracle.svm.jni.JNIObjectHandles
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: getObject, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: getSuperclass, java.lang.Class, caller: GetSuperclass, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: toRange, com.oracle.svm.jni.JNIImageHeapHandles, caller: toLocal, com.oracle.svm.jni.JNIImageHeapHandles
Method to inline: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadEntryOffset, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: destroy, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: destroyWeak, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: extractEX, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadExceptionOffset, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: encode, com.oracle.svm.jni.JNIGlobalHandles, caller: createWeak, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: releaseCurrentThreadOwnedMonitors, com.oracle.svm.jni.functions.JNIInvocationInterface$Support, caller: DetachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: FindClass, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: encode, com.oracle.svm.jni.JNIGlobalHandles, caller: create, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: toRange, com.oracle.svm.jni.JNIImageHeapHandles, caller: toWeakGlobal, com.oracle.svm.jni.JNIImageHeapHandles
Method to inline: toRange, com.oracle.svm.jni.JNIImageHeapHandles, caller: toGlobal, com.oracle.svm.jni.JNIImageHeapHandles
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getMethodID, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getMethodID, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: readOffset, org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader, caller: getU1, org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getFieldID, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: toUnsignedInt, java.lang.Short, caller: NewString, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: extractRM, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadReferenceMapIndex, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: getHandleType, com.oracle.svm.jni.JNIImageHeapHandles, caller: getHandleType, com.oracle.svm.jni.JNIObjectHandles
Method to inline: offsetIP, com.oracle.svm.core.code.CodeInfoDecoder, caller: advanceIP, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: getHandleType, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupEntryIP, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupEntryIP, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: extractFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: <init>, SimpleMethods, caller: main, SimpleMethods
Method to inline: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: getX, SimpleMethods, caller: main, SimpleMethods
Method to inline: setX, SimpleMethods, caller: main, SimpleMethods
Method to inline: getY, SimpleMethods, caller: main, SimpleMethods
Method to inline: setY, SimpleMethods, caller: main, SimpleMethods
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: UnregisterNatives, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getX, SimpleMethods, caller: main, SimpleMethods
Method to inline: two, SimpleMethods, caller: main, SimpleMethods
Method to inline: getNumber, SimpleMethods, caller: main, SimpleMethods
Method to inline: empty, SimpleMethods, caller: main, SimpleMethods
Method to inline: sumOfTwo, SimpleMethods, caller: main, SimpleMethods
Method to inline: getY, SimpleMethods, caller: main, SimpleMethods
Method to inline: setY, SimpleMethods, caller: main, SimpleMethods
Method to inline: sumOfTen, SimpleMethods, caller: main, SimpleMethods
Method to inline: getChars, java.lang.String, caller: getNulTerminatedStringCharsAndPin, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: sumOfTenWithLocal, SimpleMethods, caller: main, SimpleMethods
Method to inline: replace, java.lang.String, caller: toInternalName, jdk.vm.ci.meta.MetaUtil
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: RegisterNatives, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: setEntryPoint, com.oracle.svm.jni.access.JNINativeLinkage, caller: RegisterNatives, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.nio.HeapByteBuffer, caller: allocate, java.nio.ByteBuffer
Method to inline: <init>, java.nio.DirectByteBuffer, caller: NewDirectByteBuffer, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.nio.ByteBuffer, caller: <init>, java.nio.HeapByteBuffer
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: dumpVMThreads, com.oracle.svm.core.SubstrateUtil
Method to inline: <init>, java.nio.MappedByteBuffer, caller: <init>, java.nio.DirectByteBuffer
Method to inline: capacity, java.nio.Buffer, caller: GetDirectBufferCapacity, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: maxUtf8ByteLength, com.oracle.svm.core.util.Utf8, caller: GetStringUTFRegion, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: nativeOrder, java.nio.ByteOrder, caller: <init>, java.nio.ByteBuffer
Method to inline: <init>, com.oracle.svm.jni.JNIThreadLocalPinnedObjects$PinnedObjectListNode, caller: pinArrayAndGetAddress, com.oracle.svm.jni.JNIThreadLocalPinnedObjects
Method to inline: replace, java.lang.String, caller: toInternalName, jdk.vm.ci.meta.MetaUtil
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: ExceptionOccurred, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: ExceptionDescribe, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: autoflush, com.oracle.svm.core.log.RealLog, caller: FatalError, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: GetJavaVM, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.core.option.RuntimeOptionParser, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: isLatin1, java.lang.String, caller: replace, java.lang.String
Method to inline: getModifiers, java.lang.reflect.Field, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: ToReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: isStatic, java.lang.reflect.Modifier, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: isLatin1, java.lang.String, caller: getChars, java.lang.String
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getName, java.lang.reflect.Field, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringUTF16
Method to inline: singleton, com.oracle.svm.core.option.RuntimeOptionParser, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringUTF16
Method to inline: isStatic, java.lang.reflect.Modifier, caller: FromReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getSourcePC, com.oracle.svm.core.deopt.DeoptimizedFrame, caller: dumpTopFrame, com.oracle.svm.core.SubstrateUtil
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: FromReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, caller: ToReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: ExceptionCheck, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringUTF16
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringUTF16
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: getOffsetFromId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getFieldOffsetFromId, com.oracle.svm.jni.JNIGeneratedMethodSupport
Method to inline: add, java.util.ArrayList, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringLatin1
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringLatin1
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringLatin1
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: singleton, com.oracle.svm.core.option.RuntimeOptionParser, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: getName, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, caller: ToReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getName, java.lang.reflect.Method, caller: ToReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: logRecentEvents, com.oracle.svm.core.thread.VMOperationControl
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringLatin1
Method to inline: <init>, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports$1, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: addTearDownHook, com.oracle.svm.core.jdk.RuntimeSupport, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: getReturnType, java.lang.reflect.Method, caller: of, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor
Method to inline: <init>, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, caller: of, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor
Method to inline: <init>, java.lang.Throwable$WrappedPrintWriter, caller: printStackTrace, java.lang.Throwable
Method to inline: getComponentType, java.lang.Class, caller: getTypeName, java.lang.Class
Method to inline: <init>, java.lang.Throwable$WrappedPrintStream, caller: printStackTrace, java.lang.Throwable
Method to inline: coder, java.lang.String, caller: length, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: charAt, java.lang.String
Method to inline: getReflectionFactory, jdk.internal.reflect.ReflectionFactory, caller: getReflectionFactory, java.lang.Class
Method to inline: getOurStackTrace, java.lang.Throwable, caller: printStackTrace, java.lang.Throwable
Method to inline: getName, java.lang.reflect.Field, caller: searchFields, java.lang.Class
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: get, java.lang.ref.Reference, caller: get, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: getTypeID, java.lang.Class, caller: isAssignableFromHub, java.lang.Class
Method to inline: getValue, com.oracle.svm.core.hub.HubType, caller: isArray, com.oracle.svm.core.hub.HubType
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: doGet, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: appendNull, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: appendNull, java.lang.AbstractStringBuilder
Method to inline: isInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: ensureInitialized, java.lang.Class
Method to inline: getInstanceIdentityHashCodeOffset, com.oracle.svm.core.config.ObjectLayout, caller: identityHashCode, java.lang.System
Method to inline: getHashCodeOffset, java.lang.Class, caller: identityHashCode, java.lang.System
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Exception
Method to inline: getCoder, java.lang.AbstractStringBuilder, caller: putStringAt, java.lang.AbstractStringBuilder
Method to inline: coder, java.lang.String, caller: putStringAt, java.lang.AbstractStringBuilder
Method to inline: coder, java.lang.String, caller: startsWith, java.lang.String
Method to inline: coder, java.lang.String, caller: startsWith, java.lang.String
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: putStringAt, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.String, caller: startsWith, java.lang.String
Method to inline: getUnsafe, org.graalvm.compiler.serviceprovider.GraalUnsafeAccess, caller: generateIdentityHashCode, com.oracle.svm.core.jdk.IdentityHashCodeSupport
Method to inline: getMonitorOffset, java.lang.Class, caller: getMonitorOffset, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport
Method to inline: isLatin1, java.lang.String, caller: startsWith, java.lang.String
Method to inline: <init>, java.util.concurrent.locks.ReentrantLock, caller: newMonitorLock, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport
Method to inline: <init>, java.lang.Throwable$PrintStreamOrWriter, caller: <init>, java.lang.Throwable$WrappedPrintWriter
Method to inline: <init>, java.util.SplittableRandom, caller: generateHashCode, com.oracle.svm.core.jdk.IdentityHashCodeSupport
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: toString, java.lang.StringBuilder
Method to inline: isLatin1, java.lang.String, caller: substring, java.lang.String
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: inflate, java.lang.AbstractStringBuilder
Method to inline: bitCount, java.lang.Long, caller: mixGamma, java.util.SplittableRandom
Method to inline: isLatin1, java.lang.String, caller: hashCode, java.lang.String
Method to inline: getOurStackTrace, java.lang.Throwable, caller: printEnclosedStackTrace, java.lang.Throwable
Method to inline: <init>, com.oracle.svm.core.jdk.BuildStackTraceVisitor, caller: getStackTrace, com.oracle.svm.core.jdk.StackTraceUtils
Method to inline: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getClassObjectByName, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, java.lang.String, caller: newString, java.lang.StringUTF16
Method to inline: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, caller: getClassObjectByName, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, java.lang.String, caller: newString, java.lang.StringUTF16
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList
Method to inline: mix64, java.util.SplittableRandom, caller: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors
Method to inline: mix64, java.util.SplittableRandom, caller: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors
Method to inline: <init>, java.util.concurrent.atomic.AtomicLong, caller: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors
Method to inline: <init>, java.lang.Throwable$PrintStreamOrWriter, caller: <init>, java.lang.Throwable$WrappedPrintStream
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: <init>, java.lang.String, caller: newString, java.lang.StringLatin1
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.IdentityHashMap
Method to inline: init, java.util.IdentityHashMap, caller: <init>, java.util.IdentityHashMap
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.AbstractList
Method to inline: <init>, com.oracle.svm.core.stack.JavaStackFrameVisitor, caller: <init>, com.oracle.svm.core.jdk.BuildStackTraceVisitor
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuilder
Method to inline: <init>, java.util.ArrayList, caller: <init>, com.oracle.svm.core.jdk.BuildStackTraceVisitor
Method to inline: <init>, java.lang.Number, caller: <init>, java.util.concurrent.atomic.AtomicLong
Method to inline: getDefaultGen, com.oracle.svm.core.jdk.SplittableRandomAccessors, caller: <init>, java.util.SplittableRandom
Method to inline: mix64, java.util.SplittableRandom, caller: <init>, java.util.SplittableRandom
Method to inline: getClassName, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: getMethodName, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: getFileName, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: getLineNumber, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: getOutputFile, com.oracle.svm.core.posix.PosixLogHandler, caller: log, com.oracle.svm.core.posix.PosixLogHandler
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getOutputFile, com.oracle.svm.core.posix.PosixLogHandler, caller: flush, com.oracle.svm.core.posix.PosixLogHandler
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, com.oracle.svm.jni.access.JNINativeLinkage, caller: getLinkage, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Error
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: <init>, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, caller: getMethodID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: canEncode, java.lang.StringLatin1, caller: append, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuilder
Method to inline: <init>, java.nio.DirectByteBuffer, caller: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl
Method to inline: getDeclaringClassName, com.oracle.svm.jni.access.JNINativeLinkage, caller: unsetEntryPoints, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getByteOrder, jdk.vm.ci.code.Architecture, caller: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl
Method to inline: order, java.nio.ByteBuffer, caller: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: maybeCauseCollection, com.oracle.svm.core.genscavenge.HeapPolicy$CollectOnAllocationPolicy$Sometimes
Method to inline: reset, com.oracle.svm.core.code.ReusableTypeReader, caller: logFrame, com.oracle.svm.core.stack.ThreadStackPrinter$AllocationFreeStackFrameVisitor
Method to inline: unsetEntryPoint, com.oracle.svm.jni.access.JNINativeLinkage, caller: unsetEntryPoints, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: ix, java.nio.DirectByteBuffer, caller: get, java.nio.DirectByteBuffer
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: setMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getSuperclass, java.lang.Class, caller: findMethod, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isDaemon, java.lang.Thread, caller: joinAllNonDaemons, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: noteFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: getSuperclass, java.lang.Class, caller: findMethod, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: create, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, caller: nextFrameInfo, com.oracle.svm.core.code.CodeInfoAccess
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getDeclaredMethod, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: flush, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList
Method to inline: ix, java.nio.DirectByteBuffer, caller: put, java.nio.DirectByteBuffer
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: create, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: <init>, java.util.ArrayList, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: put, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: put, java.nio.DirectByteBuffer
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: create, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: <init>, java.nio.ByteBuffer, caller: <init>, java.nio.ByteBuffer
Method to inline: tableOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, caller: cleanTableToPointer, com.oracle.svm.core.genscavenge.CardTable
Method to inline: <init>, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, caller: cleanEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: flush, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: toHandle, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: getAlignment, com.oracle.svm.core.config.ObjectLayout, caller: getChunkSizeForObject, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: trackVirtualMemory, com.oracle.svm.core.os.OSCommittedMemoryProvider, caller: allocate, com.oracle.svm.core.os.OSCommittedMemoryProvider
Method to inline: encodeDebugNames, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeFrameInfo, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: encodeSourceReferences, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeFrameInfo, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: <init>, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation, caller: enqueueBlockingSafepoint, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: name, java.nio.charset.Charset, caller: decode, java.lang.StringCoding
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: name, java.nio.charset.Charset, caller: decode, java.lang.StringCoding
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: name, java.nio.charset.Charset, caller: decode, java.lang.StringCoding
Method to inline: k, com.oracle.svm.core.genscavenge.HeapPolicy, caller: m, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: k, com.oracle.svm.core.genscavenge.HeapPolicy, caller: m, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXmn, com.oracle.svm.core.option.XOptions
Method to inline: noteFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getFieldID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: flush, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: getComponentType, java.lang.Class, caller: getCanonicalName0, java.lang.Class
Method to inline: trackVirtualMemory, com.oracle.svm.core.os.OSCommittedMemoryProvider, caller: allocate, com.oracle.svm.core.os.OSCommittedMemoryProvider
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: getSuperclass, java.lang.Class, caller: findField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: getSuperclass, java.lang.Class, caller: findField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getEnclosingClass, java.lang.Class, caller: getCanonicalName0, java.lang.Class
Method to inline: <init>, java.util.concurrent.atomic.AtomicBoolean, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: isReadyForTearDown, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getDeclaredField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isStatic, com.oracle.svm.jni.access.JNIAccessibleField, caller: getDeclaredField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: nativeOrder, java.nio.ByteOrder, caller: order, java.nio.ByteBuffer
Method to inline: set, java.util.concurrent.atomic.AtomicBoolean, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: logStream, com.oracle.svm.core.log.Log, caller: parse, com.oracle.svm.core.option.XOptions
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isLocalClass, java.lang.Class, caller: isLocalOrAnonymousClass, java.lang.Class
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuffer
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: doNotLoopTooLong, com.oracle.svm.core.util.TimeUtils
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: toString, java.lang.StringBuffer
Method to inline: getComponentType, java.lang.Class, caller: getSimpleName0, java.lang.Class
Method to inline: extractKind, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: extractIsCompressedReference, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: extractIsEliminatedMonitor, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: ordinal, java.lang.Enum, caller: convertJavaToCLong, com.oracle.svm.core.c.enums.EnumRuntimeData
Method to inline: <init>, java.lang.String, caller: <init>, java.lang.String
Method to inline: isFirstIsolate, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: initializeBuiltinLibraries, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: maybeFatallyTooLong, com.oracle.svm.core.util.TimeUtils
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: destroy, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, caller: <init>, java.lang.Thread
Method to inline: isNotContinuation, java.lang.StringCoding, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, caller: <init>, java.lang.Thread
Method to inline: <init>, java.util.ArrayList$Itr, caller: iterator, java.util.ArrayList
Method to inline: isNotContinuation, java.lang.StringCoding, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: getId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getFieldNameByID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: tableOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: initializeTableToPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: initializeTableToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: initializeTableToPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: isLatin1, java.lang.String, caller: substring, java.lang.String
Method to inline: setByteIndex, com.oracle.svm.core.code.ReusableTypeReader, caller: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: setData, com.oracle.svm.core.code.ReusableTypeReader, caller: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, caller: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: loadZipLibrary, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport, caller: initializeBuiltinLibraries, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: highSurrogate, java.lang.Character, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: lowSurrogate, java.lang.Character, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: currentJavaThreadInitialized, com.oracle.svm.core.thread.JavaThreads, caller: size, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl
Method to inline: <init>, java.util.ArrayList, caller: verifyHostSupportsArchitecture, com.oracle.svm.core.amd64.AMD64CPUFeatureAccess
Method to inline: add, java.util.ArrayList, caller: verifyHostSupportsArchitecture, com.oracle.svm.core.amd64.AMD64CPUFeatureAccess
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: isMalformed4_3, java.lang.StringCoding, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: <init>, com.oracle.svm.core.genscavenge.PinnedObjectImpl, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: <init>, java.io.PrintWriter, caller: <init>, java.io.PrintWriter
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: getPinHead, com.oracle.svm.core.genscavenge.HeapImpl, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: <init>, java.io.Writer, caller: <init>, java.io.PrintWriter
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: getSingleton, com.oracle.svm.core.thread.ParkEventList, caller: release, com.oracle.svm.core.thread.ParkEvent
Method to inline: isFirstIsolate, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: loadNetLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuilder
Method to inline: getRuntime, java.lang.Runtime, caller: exit, java.lang.System
Method to inline: getId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getDeclaredFieldID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, java.nio.charset.MalformedInputException, caller: throwMalformed, java.lang.StringCoding
Method to inline: <init>, java.lang.ref.SoftReference, caller: set, java.lang.StringCoding
Method to inline: isLatin1, java.lang.String, caller: lastIndexOf, java.lang.String
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Exception
Method to inline: canEncode, java.lang.StringLatin1, caller: lastIndexOf, java.lang.StringLatin1
Method to inline: isNotContinuation, java.lang.StringCoding, caller: malformedN, java.lang.StringCoding
Method to inline: isNotContinuation, java.lang.StringCoding, caller: malformedN, java.lang.StringCoding
Method to inline: <init>, java.util.RegularEnumSet, caller: noneOf, java.util.EnumSet
Method to inline: isNotContinuation, java.lang.StringCoding, caller: malformedN, java.lang.StringCoding
Method to inline: <init>, java.util.JumboEnumSet, caller: noneOf, java.util.EnumSet
Method to inline: checkAccess, java.lang.Thread, caller: interrupt, java.lang.Thread
Method to inline: singleton, com.oracle.svm.core.jdk.NativeLibrarySupport, caller: loadNetLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: isValidCodePoint, java.lang.Character, caller: lastIndexOfSupplementary, java.lang.StringUTF16
Method to inline: highSurrogate, java.lang.Character, caller: lastIndexOfSupplementary, java.lang.StringUTF16
Method to inline: lowSurrogate, java.lang.Character, caller: lastIndexOfSupplementary, java.lang.StringUTF16
Method to inline: interrupt0, java.lang.Thread, caller: interrupt, java.lang.Thread
Method to inline: getJavaLangAccess, jdk.internal.misc.SharedSecrets, caller: getUniverse, java.util.EnumSet
Method to inline: interrupt0, java.lang.Thread, caller: interrupt, java.lang.Thread
Method to inline: getRuntime, java.lang.Runtime, caller: loadLibrary, java.lang.System
Method to inline: fromTarget, com.oracle.svm.core.thread.JavaThreads, caller: interrupt0, java.lang.Thread
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: wakeUpVMConditionWaiters, com.oracle.svm.core.thread.JavaThreads, caller: interrupt0, java.lang.Thread
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: isInterface, com.oracle.svm.core.hub.LayoutEncoding, caller: isInterface, java.lang.Class
Method to inline: isPrimitive, com.oracle.svm.core.hub.LayoutEncoding, caller: isPrimitive, java.lang.Class
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.util.EnumSet, caller: <init>, java.util.JumboEnumSet
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: getAndClearPendingException, com.oracle.svm.jni.JNIGeneratedMethodSupport
Method to inline: <init>, java.util.EnumSet, caller: <init>, java.util.RegularEnumSet
Method to inline: addSuppressed, java.lang.Throwable, caller: initializeEncoding, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport
Method to inline: <init>, com.oracle.svm.core.thread.ParkEventConsCell, caller: initializeOnce, com.oracle.svm.core.thread.ParkEvent
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getSingleton, com.oracle.svm.core.thread.ParkEventList, caller: acquire, com.oracle.svm.core.thread.ParkEvent
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isLatin1, java.lang.String, caller: indexOf, java.lang.String
Method to inline: exit, java.lang.Thread, caller: cleanupBeforeDetach, com.oracle.svm.core.thread.JavaThreads
Method to inline: logStream, com.oracle.svm.core.log.Log, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: getAllocationSpace, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: isLatin1, java.lang.String, caller: trim, java.lang.String
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl, caller: create, org.graalvm.collections.EconomicMapImpl
Method to inline: intercept, org.graalvm.collections.EconomicMapImpl, caller: create, org.graalvm.collections.EconomicMapImpl
Method to inline: isValidCodePoint, java.lang.Character, caller: indexOfSupplementary, java.lang.StringUTF16
Method to inline: highSurrogate, java.lang.Character, caller: indexOfSupplementary, java.lang.StringUTF16
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: lowSurrogate, java.lang.Character, caller: indexOfSupplementary, java.lang.StringUTF16
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isLatin1, java.lang.String, caller: toLowerCase, java.lang.String
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.lang.String, caller: trim, java.lang.StringUTF16
Method to inline: getZapConsumedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: cleanAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: logStream, com.oracle.svm.core.log.Log, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getError, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getError, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: canEncode, java.lang.StringLatin1, caller: toLowerCase, java.lang.StringLatin1
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: setMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getHelp, org.graalvm.compiler.options.OptionDescriptor, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getDefaultValue, org.graalvm.compiler.options.OptionKey, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.util.ArrayList, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.util.ArrayList, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: add, java.util.ArrayList, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXms, com.oracle.svm.core.option.XOptions
Method to inline: <init>, java.lang.String, caller: toLowerCase, java.lang.StringLatin1
Method to inline: isEmpty, java.util.ArrayList, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: isBmpCodePoint, java.lang.Character, caller: toLowerCase, java.lang.StringUTF16
Method to inline: isEmpty, java.util.ArrayList, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: getName, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: getOptionValueType, org.graalvm.compiler.options.OptionDescriptor, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: isBmpCodePoint, java.lang.Character, caller: toLowerCaseEx, java.lang.StringLatin1
Method to inline: <init>, java.lang.String, caller: toLowerCase, java.lang.StringUTF16
Method to inline: of, java.lang.CharacterData, caller: toLowerCase, java.lang.Character
Method to inline: of, java.lang.CharacterData, caller: getType, java.lang.Character
Method to inline: of, java.lang.CharacterData, caller: digit, java.lang.Character
Method to inline: getOptionValueType, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: isBmpCodePoint, java.lang.Character, caller: toChars, java.lang.Character
Method to inline: isValidCodePoint, java.lang.Character, caller: toChars, java.lang.Character
Method to inline: charCount, java.lang.Character, caller: toLowerCaseEx, java.lang.StringUTF16
Method to inline: isBmpCodePoint, java.lang.Character, caller: toLowerCaseEx, java.lang.StringUTF16
Method to inline: lowSurrogate, java.lang.Character, caller: toSurrogates, java.lang.Character
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: highSurrogate, java.lang.Character, caller: toSurrogates, java.lang.Character
Method to inline: getComponentType, java.lang.Class, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: isLatin1, java.lang.String, caller: codePointAt, java.lang.String
Method to inline: toCodePoint, java.lang.Character, caller: codePointAt, java.lang.StringUTF16
Method to inline: charCount, java.lang.Character, caller: isMoreAbove, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isBeforeDot, java.lang.ConditionalSpecialCasing
Method to inline: isSoftDotted, java.lang.ConditionalSpecialCasing, caller: isAfterSoftDotted, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isAfterI, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isAfterSoftDotted, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isMoreAbove, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isBeforeDot, java.lang.ConditionalSpecialCasing
Method to inline: isLatin1, java.lang.String, caller: codePointBefore, java.lang.String
Method to inline: charCount, java.lang.Character, caller: isFinalCased, java.lang.ConditionalSpecialCasing
Method to inline: getComponentType, java.lang.Class, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: lineSeparator, java.lang.System, caller: printOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: toCodePoint, java.lang.Character, caller: codePointBefore, java.lang.StringUTF16
Method to inline: charCount, java.lang.Character, caller: isFinalCased, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isFinalCased, java.lang.ConditionalSpecialCasing
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: replace, java.lang.String, caller: spaces, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: <init>, java.util.ArrayList, caller: split, com.oracle.svm.core.SubstrateUtil
Method to inline: lineSeparator, java.lang.System, caller: wrap, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: name, java.lang.Enum, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: length, java.lang.AbstractStringBuilder, caller: length, java.lang.StringBuilder
Method to inline: replace, java.lang.AbstractStringBuilder, caller: replace, java.lang.StringBuilder
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: replace, java.lang.AbstractStringBuilder
Method to inline: coder, java.lang.String, caller: lastIndexOf, java.lang.String
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: shift, java.lang.AbstractStringBuilder, caller: replace, java.lang.AbstractStringBuilder
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: getName, org.graalvm.compiler.options.OptionDescriptor, caller: collectFuzzyMatches, org.graalvm.compiler.options.OptionsParser
Method to inline: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: error, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: correct, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: name, java.lang.Enum, caller: valueOf, java.lang.Enum
Method to inline: get, com.oracle.svm.core.util.LazyFinalReference, caller: getEnumConstantsShared, java.lang.Class
Method to inline: <init>, java.lang.String, caller: toString, java.lang.Integer
Method to inline: currentJavaThreadInitialized, com.oracle.svm.core.thread.JavaThreads, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSign, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, caller: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation, caller: enqueueBlockingNoSafepoint, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: getFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: close, com.oracle.svm.core.genscavenge.GCImpl$Timer
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: processCleaners, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: isEmpty, org.graalvm.collections.EconomicMapImpl
Method to inline: release, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: unlock, java.util.concurrent.locks.ReentrantLock
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: find, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Error
Method to inline: <init>, com.oracle.svm.core.thread.VMOperation, caller: <init>, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: getDefaultGen, com.oracle.svm.core.jdk.SplittableRandomAccessors, caller: <init>, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: checkAccess, java.lang.ThreadGroup, caller: destroy, java.lang.ThreadGroup
Method to inline: log, com.oracle.svm.core.thread.VMOperationControl, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: <init>, com.oracle.svm.core.posix.thread.PosixParkEvent, caller: create, com.oracle.svm.core.posix.thread.PosixParkEventFactory
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: <init>, com.oracle.svm.core.thread.ParkEvent, caller: <init>, com.oracle.svm.core.posix.thread.PosixParkEvent
Method to inline: <init>, java.util.Formatter, caller: <init>, java.util.Formatter
Method to inline: log, com.oracle.svm.core.thread.VMOperationControl, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: <init>, java.util.MissingFormatArgumentException, caller: format, java.util.Formatter
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$2, caller: getEntries, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.util.MissingFormatArgumentException, caller: format, java.util.Formatter
Method to inline: <init>, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, caller: initialValue, jdk.internal.math.FloatingDecimal$1
Method to inline: <init>, java.util.MissingFormatArgumentException, caller: format, java.util.Formatter
Method to inline: <init>, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: <init>, java.lang.StringCoding$Result, caller: initialValue, java.lang.StringCoding$1
Method to inline: beforeHalt, java.lang.Shutdown, caller: exit, java.lang.Shutdown
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: matchesFlagsRuntime, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: <init>, java.io.File, caller: <init>, java.io.FileInputStream
Method to inline: getOptionType, org.graalvm.compiler.options.OptionDescriptor, caller: matchesFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: isHeldExclusively, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: <init>, java.io.FileInputStream$1, caller: close, java.io.FileInputStream
Method to inline: intercept, org.graalvm.collections.EconomicMapImpl, caller: create, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.io.InputStream, caller: <init>, java.io.FileInputStream
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: removeKey, org.graalvm.collections.EconomicMapImpl
Method to inline: isInvalid, java.io.File, caller: <init>, java.io.FileInputStream
Method to inline: <init>, java.io.FileDescriptor, caller: <init>, java.io.FileInputStream
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: tryRelease, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: setExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: tryRelease, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: setState, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: tryRelease, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: <init>, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: remove, org.graalvm.collections.EconomicMapImpl, caller: removeKey, org.graalvm.collections.EconomicMapImpl
Method to inline: checkNativeAddress, jdk.internal.misc.Unsafe, caller: checkPointer, jdk.internal.misc.Unsafe
Method to inline: singleton, com.oracle.svm.core.jdk.NativeLibrarySupport, caller: loadLibrary, java.lang.ClassLoader
Method to inline: getComponentType, java.lang.Class, caller: checkPrimitiveArray, jdk.internal.misc.Unsafe
Method to inline: <init>, java.util.Formatter$FixedString, caller: parse, java.util.Formatter
Method to inline: add, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: <init>, java.lang.String, caller: <init>, java.lang.String
Method to inline: getNext, com.oracle.svm.core.thread.ParkEventConsCell, caller: pop, com.oracle.svm.core.thread.ParkEventList
Method to inline: getElement, com.oracle.svm.core.thread.ParkEventConsCell, caller: pop, com.oracle.svm.core.thread.ParkEventList
Method to inline: addSuppressed, java.lang.Throwable, caller: closeAll, java.io.FileDescriptor
Method to inline: getDefaultValue, org.graalvm.compiler.options.OptionKey, caller: get, org.graalvm.compiler.options.OptionValues
Method to inline: addSuppressed, java.lang.Throwable, caller: closeAll, java.io.FileDescriptor
Method to inline: setNext, com.oracle.svm.core.thread.ParkEventConsCell, caller: push, com.oracle.svm.core.thread.ParkEventList
Method to inline: addSuppressed, java.lang.Throwable, caller: closeAll, java.io.FileDescriptor
Method to inline: <init>, java.io.File, caller: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: init, org.graalvm.compiler.options.OptionKey$Lazy, caller: getName, org.graalvm.compiler.options.OptionKey
Method to inline: onMalformedInput, java.nio.charset.CharsetDecoder, caller: <init>, java.lang.StringCoding$StringDecoder
Method to inline: getName, org.graalvm.compiler.options.OptionDescriptor, caller: getName, org.graalvm.compiler.options.OptionKey
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetDecoder, caller: <init>, java.lang.StringCoding$StringDecoder
Method to inline: <init>, java.lang.StringCoding$Result, caller: <init>, java.lang.StringCoding$StringDecoder
Method to inline: <init>, java.util.ArrayList, caller: attach, java.io.FileDescriptor
Method to inline: <init>, java.io.File, caller: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: register, java.io.FileCleanable
Method to inline: <init>, java.io.FileCleanable, caller: register, java.io.FileCleanable
Method to inline: maxCharsPerByte, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: scale, java.lang.StringCoding, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: <init>, java.io.FileInputStream$AltFinalizer, caller: getFinalizer, java.io.FileInputStream
Method to inline: getSuperclass, java.lang.Class, caller: getFinalizer, java.io.FileInputStream
Method to inline: mapAlternativeName, java.lang.ClassLoaderHelper, caller: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: findAndRemoveWithCollision, org.graalvm.collections.EconomicMapImpl
Method to inline: add, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.util.Formatter$FixedString, caller: parse, java.util.Formatter
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.lang.String, caller: toUnsignedString0, java.lang.Long
Method to inline: add, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: getHashThreshold, org.graalvm.collections.EconomicMapImpl, caller: compressLarge, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfPow2, jdk.internal.math.FDBigInteger
Method to inline: <init>, com.oracle.svm.core.code.CodeInfoQueryResult, caller: lookupCodeInfoQueryResult, com.oracle.svm.core.code.CodeInfoTable
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: createHash, org.graalvm.collections.EconomicMapImpl
Method to inline: getHashThreshold, org.graalvm.collections.EconomicMapImpl, caller: createHash, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: checkText, java.util.Formatter
Method to inline: canEncode, java.lang.StringLatin1, caller: valueOf, java.lang.String
Method to inline: initialSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: <init>, java.lang.String, caller: valueOf, java.lang.String
Method to inline: <init>, java.lang.String, caller: valueOf, java.lang.String
Method to inline: flush, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: position, java.nio.Buffer, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: toString, java.lang.Enum, caller: forType, sun.util.locale.provider.LocaleProviderAdapter
Method to inline: ordinal, java.lang.Enum, caller: getDefault, java.util.Locale
Method to inline: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadFrameInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: mix32, java.util.SplittableRandom, caller: nextInt, java.util.SplittableRandom
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: mix32, java.util.SplittableRandom, caller: nextInt, java.util.SplittableRandom
Method to inline: toCodePoint, java.lang.Character, caller: getPrevious, sun.text.RuleBasedBreakIterator
Method to inline: <init>, com.oracle.svm.core.code.ReusableTypeReader, caller: loadFrameInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.nio.HeapCharBuffer, caller: wrap, java.nio.CharBuffer
Method to inline: toCodePoint, java.lang.Character, caller: getCurrent, sun.text.RuleBasedBreakIterator
Method to inline: <init>, java.nio.CharBuffer, caller: <init>, java.nio.HeapCharBuffer
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.AbstractSet
Method to inline: addWaiter, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: acquire, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: addLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: <init>, java.nio.HeapByteBuffer, caller: wrap, java.nio.ByteBuffer
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: asS4, org.graalvm.compiler.core.common.util.TypeConversion, caller: getSVInt, org.graalvm.compiler.core.common.util.TypeReader
Method to inline: <init>, java.nio.ByteBuffer, caller: <init>, java.nio.HeapByteBuffer
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.IdentityHashMap
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: putHashEntry, org.graalvm.collections.EconomicMapImpl
Method to inline: init, java.util.IdentityHashMap, caller: <init>, java.util.IdentityHashMap
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: putHashEntry, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Error
Method to inline: getName, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: hashCode, java.lang.Byte, caller: hashCode, java.lang.Byte
Method to inline: <init>, java.util.IdentityHashMap$KeySet, caller: keySet, java.util.IdentityHashMap
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: getSV, org.graalvm.compiler.core.common.util.AbstractTypeReader
Method to inline: hashCode, java.lang.Character, caller: hashCode, java.lang.Character
Method to inline: hashCode, java.lang.Short, caller: hashCode, java.lang.Short
Method to inline: hashCode, java.lang.Integer, caller: hashCode, java.lang.Integer
Method to inline: hashCode, java.lang.Long, caller: hashCode, java.lang.Long
Method to inline: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, caller: initializeSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: getChars, java.lang.String, caller: getChars, java.util.StringJoiner
Method to inline: hashCode, java.lang.Float, caller: hashCode, java.lang.Float
Method to inline: ordinal, java.lang.Enum, caller: add, java.util.JumboEnumSet
Method to inline: ordinal, java.lang.Enum, caller: add, java.util.RegularEnumSet
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: hashCode, java.lang.Double, caller: hashCode, java.lang.Double
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: getSuperclass, java.lang.Class, caller: typeCheck, java.util.EnumSet
Method to inline: asS4, org.graalvm.compiler.core.common.util.TypeConversion, caller: getUVInt, org.graalvm.compiler.core.common.util.TypeReader
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: <init>, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: <init>, com.oracle.svm.core.code.ReusableTypeReader
Method to inline: position, java.nio.Buffer, caller: hashCode, java.nio.ByteBuffer
Method to inline: limit, java.nio.Buffer, caller: hashCode, java.nio.ByteBuffer
Method to inline: setExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, caller: newCondition, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: setState, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: addSuppressed, java.lang.Throwable, caller: close, java.io.BufferedWriter
Method to inline: <init>, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary, caller: createLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, caller: addWaiter, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: <init>, java.io.FileOutputStream$1, caller: close, java.io.FileOutputStream
Method to inline: isInterrupted, java.lang.Thread, caller: interrupted, java.lang.Thread
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: park, java.util.concurrent.locks.LockSupport
Method to inline: addSuppressed, java.lang.Throwable, caller: close, java.io.FilterOutputStream
Method to inline: addSuppressed, java.lang.Throwable, caller: close, java.io.FilterOutputStream
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: park, java.util.concurrent.locks.LockSupport
Method to inline: initializeSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: addWaiter, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: initializeSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: enq, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: flushBuffer, java.io.BufferedOutputStream, caller: flush, java.io.BufferedOutputStream
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: getSuperclass, java.lang.Class, caller: contains, java.util.RegularEnumSet
Method to inline: ordinal, java.lang.Enum, caller: contains, java.util.RegularEnumSet
Method to inline: canEncode, java.lang.StringLatin1, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: getSuperclass, java.lang.Class, caller: contains, java.util.JumboEnumSet
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl, caller: <init>, org.graalvm.collections.EconomicMapImpl
Method to inline: ordinal, java.lang.Enum, caller: contains, java.util.JumboEnumSet
Method to inline: name, java.nio.charset.Charset, caller: hashCode, java.nio.charset.Charset
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: init, org.graalvm.collections.EconomicMapImpl, caller: <init>, org.graalvm.collections.EconomicMapImpl
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: lineSeparator, java.lang.System, caller: newLine, java.io.PrintWriter
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: bitCount, java.lang.Long, caller: size, java.util.RegularEnumSet
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.TreeMap$EntrySet, caller: entrySet, java.util.TreeMap
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: remove, org.graalvm.collections.EconomicMapImpl
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.util.HashMap$EntrySet, caller: entrySet, java.util.HashMap
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.util.RegularEnumSet$EnumSetIterator, caller: iterator, java.util.RegularEnumSet
Method to inline: maybeCompress, org.graalvm.collections.EconomicMapImpl, caller: remove, org.graalvm.collections.EconomicMapImpl
Method to inline: getHashThreshold, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: getOwner, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: ix, java.nio.DirectByteBuffer, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: <init>, java.lang.String, caller: toString, java.lang.Long
Method to inline: setSign, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, caller: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: setValue, org.graalvm.collections.EconomicMapImpl
Method to inline: position, java.nio.Buffer, caller: toString, java.nio.ByteBuffer
Method to inline: limit, java.nio.Buffer, caller: toString, java.nio.ByteBuffer
Method to inline: capacity, java.nio.Buffer, caller: toString, java.nio.ByteBuffer
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: internalNameToJava, jdk.vm.ci.meta.MetaUtil
Method to inline: <init>, java.util.Hashtable$EntrySet, caller: entrySet, java.util.Hashtable
Method to inline: getThreadGroup, java.lang.Thread, caller: toString, java.lang.Thread
Method to inline: getPriority, java.lang.Thread, caller: toString, java.lang.Thread
Method to inline: getName, java.lang.ThreadGroup, caller: toString, java.lang.Thread
Method to inline: <init>, java.lang.String, caller: toUnsignedString0, java.lang.Integer
Method to inline: getPriority, java.lang.Thread, caller: toString, java.lang.Thread
Method to inline: getName, java.lang.ThreadGroup, caller: toString, java.lang.ThreadGroup
Method to inline: of, java.lang.CharacterData, caller: isJavaIdentifierStart, java.lang.Character
Method to inline: <init>, org.graalvm.compiler.options.OptionValues$1, caller: toString, org.graalvm.compiler.options.OptionValues
Method to inline: <init>, java.util.TreeMap, caller: toString, org.graalvm.compiler.options.OptionValues
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.TreeMap
Method to inline: <init>, java.util.IdentityHashMap$EntrySet, caller: entrySet, java.util.IdentityHashMap
Method to inline: <init>, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: emptyIterator, java.util.Collections, caller: iterator, java.util.Collections$EmptyList
Method to inline: setValue, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: name, java.nio.charset.Charset, caller: toString, java.nio.charset.Charset
Method to inline: <init>, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getScript, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: setValue, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getScript, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: toString, org.graalvm.collections.EconomicMapImpl
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: getLanguage, java.util.Locale
Method to inline: isPublic, java.lang.reflect.Modifier, caller: langReflectAccess, jdk.internal.reflect.ReflectionFactory
Method to inline: lineSeparator, java.lang.System, caller: newLine, java.io.BufferedWriter
Method to inline: min, java.io.BufferedWriter, caller: write, java.io.BufferedWriter
Method to inline: getChars, java.lang.String, caller: write, java.io.BufferedWriter
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: getEdenChunkUsedBytes, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: coder, java.lang.String, caller: compareTo, java.lang.String
Method to inline: coder, java.lang.String, caller: compareTo, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: compareTo, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: compareTo, java.lang.String
Method to inline: <init>, java.util.TreeMap$Values, caller: values, java.util.TreeMap
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.TreeMap$Values
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: get, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: get, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: eq, com.oracle.svm.core.WeakIdentityHashMap, caller: get, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: getCC, sun.text.normalizer.NormalizerImpl, caller: getCombiningClass, sun.text.normalizer.Norm2AllModes$Normalizer2WithImpl
Method to inline: <init>, java.util.HashMap$Node, caller: newNode, java.util.HashMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: ordinal, java.lang.Enum, caller: getPlatformKind, jdk.vm.ci.amd64.AMD64
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: getCC, sun.text.normalizer.NormalizerImpl
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: expungeStaleEntries, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: coder, java.lang.String, caller: equals, java.lang.String
Method to inline: coder, java.lang.String, caller: equals, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: equals, java.lang.String
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: report, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getUnalignedHeapOverhead, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: getUnalignedChunkBytes, com.oracle.svm.core.genscavenge.Space
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: report, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: <init>, java.util.HashMap$KeySet, caller: keySet, java.util.HashMap
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: eq, com.oracle.svm.core.WeakIdentityHashMap, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, com.oracle.svm.core.WeakIdentityHashMap$Entry, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: resize, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: newTable, com.oracle.svm.core.WeakIdentityHashMap, caller: resize, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: report, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: zapValuesToLog, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getZapConsumedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: zapValuesToLog, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: transfer, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, caller: <init>, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: root, java.util.HashMap$TreeNode, caller: putTreeVal, java.util.HashMap$TreeNode
Method to inline: setThreshold, java.lang.ThreadLocal$ThreadLocalMap, caller: <init>, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: hashCode, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: toString, java.util.concurrent.ConcurrentHashMap
Method to inline: current, sun.text.RuleBasedBreakIterator$SafeCharIterator, caller: setIndex, sun.text.RuleBasedBreakIterator$SafeCharIterator
Method to inline: eraseThreadLocals, jdk.internal.misc.InnocuousThread, caller: run, jdk.internal.ref.CleanerImpl
Method to inline: <init>, java.util.TreeMap$ValueIterator, caller: iterator, java.util.TreeMap$Values
Method to inline: <init>, java.util.TreeMap$PrivateEntryIterator, caller: <init>, java.util.TreeMap$ValueIterator
Method to inline: <init>, java.util.HashMap$Node, caller: <init>, java.util.LinkedHashMap$Entry
Method to inline: <init>, java.nio.charset.UnmappableCharacterException, caller: throwException, java.nio.charset.CoderResult
Method to inline: size, jdk.internal.math.FDBigInteger, caller: addAndCmp, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, caller: set, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: <init>, java.nio.charset.MalformedInputException, caller: throwException, java.nio.charset.CoderResult
Method to inline: size, jdk.internal.math.FDBigInteger, caller: addAndCmp, jdk.internal.math.FDBigInteger
Method to inline: root, java.util.HashMap$TreeNode, caller: getTreeNode, java.util.HashMap$TreeNode
Method to inline: size, jdk.internal.math.FDBigInteger, caller: addAndCmp, jdk.internal.math.FDBigInteger
Method to inline: rehash, java.lang.ThreadLocal$ThreadLocalMap, caller: set, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: of, java.lang.CharacterData, caller: toUpperCase, java.lang.Character
Method to inline: position, java.nio.Buffer, caller: hashCode, java.nio.CharBuffer
Method to inline: limit, java.nio.Buffer, caller: hashCode, java.nio.CharBuffer
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forDouble, jdk.vm.ci.meta.JavaConstant
Method to inline: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, caller: replaceStaleEntry, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: index, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forFloat, jdk.vm.ci.meta.JavaConstant
Method to inline: size, jdk.internal.math.FDBigInteger, caller: add, jdk.internal.math.FDBigInteger
Method to inline: size, jdk.internal.math.FDBigInteger, caller: add, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.util.IdentityHashMap$KeyIterator, caller: iterator, java.util.IdentityHashMap$KeySet
Method to inline: flags, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: add, jdk.internal.math.FDBigInteger
Method to inline: ordinal, java.lang.Enum, caller: defaultForKind, jdk.vm.ci.meta.JavaConstant
Method to inline: toString, jdk.vm.ci.meta.JavaKind, caller: defaultForKind, jdk.vm.ci.meta.JavaConstant
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: leftShift, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forChar, jdk.vm.ci.meta.JavaConstant
Method to inline: <init>, java.util.TreeMap$EntryIterator, caller: iterator, java.util.TreeMap$EntrySet
Method to inline: setThreshold, java.lang.ThreadLocal$ThreadLocalMap, caller: resize, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: leftShift, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forShort, jdk.vm.ci.meta.JavaConstant
Method to inline: add, java.util.Formatter$Flags, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.HashMap$EntryIterator, caller: iterator, java.util.HashMap$EntrySet
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forByte, jdk.vm.ci.meta.JavaConstant
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXss, com.oracle.svm.core.option.XOptions
Method to inline: <init>, java.util.IdentityHashMap$EntryIterator, caller: iterator, java.util.IdentityHashMap$EntrySet
Method to inline: lineSeparator, java.lang.System, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.HashMap$KeyIterator, caller: iterator, java.util.HashMap$KeySet
Method to inline: ordinal, java.lang.Enum, caller: forIntegerKind, jdk.vm.ci.meta.JavaConstant
Method to inline: isGeneral, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.Collections$SynchronizedCollection, caller: <init>, java.util.Collections$SynchronizedSet
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: multBy10, jdk.internal.math.FDBigInteger
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: <init>, jdk.internal.ref.PhantomCleanable
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: <init>, jdk.internal.ref.PhantomCleanable
Method to inline: <init>, java.util.TreeMap$PrivateEntryIterator, caller: <init>, java.util.TreeMap$EntryIterator
Method to inline: isInvalid, java.io.File, caller: getCanonicalPath, java.io.File
Method to inline: <init>, java.util.HashMap$Node, caller: replacementNode, java.util.HashMap
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forLong, jdk.vm.ci.meta.JavaConstant
Method to inline: clear, java.lang.ref.Reference, caller: clear, jdk.internal.ref.PhantomCleanable
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forInt, jdk.vm.ci.meta.JavaConstant
Method to inline: doLoad, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary, caller: load, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary
Method to inline: size, jdk.internal.math.FDBigInteger, caller: quoRemIteration, jdk.internal.math.FDBigInteger
Method to inline: addSuppressed, java.lang.Throwable, caller: dlopen, com.oracle.svm.core.posix.PosixUtils
Method to inline: size, jdk.internal.math.FDBigInteger, caller: quoRemIteration, jdk.internal.math.FDBigInteger
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: getDefaultParent, java.io.UnixFileSystem, caller: <init>, java.io.File
Method to inline: current, java.text.StringCharacterIterator, caller: first, java.text.StringCharacterIterator
Method to inline: current, java.text.StringCharacterIterator, caller: setIndex, java.text.StringCharacterIterator
Method to inline: isCharacter, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: isInteger, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: hasRemaining, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: remaining, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: checkInteger, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: isFloat, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: checkFloat, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: userDir, com.oracle.svm.core.jdk.SystemPropertiesSupport, caller: getUserDir, com.oracle.svm.core.jdk.UserDirAccessors
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: implClose, sun.nio.cs.StreamEncoder
Method to inline: isText, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: getSuperclass, java.lang.Class, caller: getDeclaringClass, java.lang.Enum
Method to inline: position, java.nio.Buffer, caller: implClose, sun.nio.cs.StreamEncoder
Method to inline: remaining, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntrySet, caller: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntrySet
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: emptyIterator, java.util.Collections, caller: getIterator, java.util.Hashtable
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: <init>, java.util.IllegalFormatWidthException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatFlagsException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: implClose, sun.nio.cs.StreamEncoder
Method to inline: size, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: size, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: limit, java.nio.Buffer, caller: writeBytes, sun.nio.cs.StreamEncoder
Method to inline: position, java.nio.Buffer, caller: writeBytes, sun.nio.cs.StreamEncoder
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: name, java.nio.charset.Charset, caller: encode, java.lang.StringCoding
Method to inline: name, java.nio.charset.Charset, caller: encode, java.lang.StringCoding
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.CharBuffer
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: name, java.nio.charset.Charset, caller: encode, java.lang.StringCoding
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatFlagsException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: isValid, java.util.Formatter$DateTime, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: equals, java.util.concurrent.ConcurrentHashMap
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: computeIfAbsent, java.util.concurrent.ConcurrentHashMap
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: toCodePoint, java.lang.Character, caller: encodeUTF8_UTF16, java.lang.StringCoding
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: computeIfAbsent, java.util.concurrent.ConcurrentHashMap
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: highSurrogate, java.lang.Character, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: lowSurrogate, java.lang.Character, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkGeneral, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: computeIfAbsent, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.nio.HeapCharBuffer, caller: allocate, java.nio.CharBuffer
Method to inline: <init>, java.nio.charset.UnmappableCharacterException, caller: throwUnmappable, java.lang.StringCoding
Method to inline: flip, java.nio.Buffer, caller: flip, java.nio.CharBuffer
Method to inline: isMalformed4_3, sun.nio.cs.UTF_8$Decoder, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: clear, java.nio.Buffer, caller: clear, java.nio.CharBuffer
Method to inline: <init>, java.util.IllegalFormatWidthException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: equals, java.lang.Enum, caller: equals, jdk.vm.ci.code.TargetDescription
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.nio.CharBuffer, caller: <init>, java.nio.HeapCharBuffer
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatFlagsException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: get, java.util.concurrent.ConcurrentHashMap
Method to inline: isValidCodePoint, java.lang.Character, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatWidthException, caller: width, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatCodePointException, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: isValidCodePoint, java.lang.Character, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: conversion, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatCodePointException, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: add, java.util.Formatter$Flags, caller: conversion, java.util.Formatter$FormatSpecifier
Method to inline: isValidCodePoint, java.lang.Character, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.Properties$EntrySet, caller: entrySet, java.util.Properties
Method to inline: isText, java.util.Formatter$Conversion, caller: conversion, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatCodePointException, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: name, java.nio.charset.Charset, caller: equals, java.nio.charset.Charset
Method to inline: position, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: isLatin1, java.lang.String, caller: toUpperCase, java.lang.String
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: precision, java.util.Formatter$FormatSpecifier
Method to inline: print, java.util.Formatter$FormatSpecifier, caller: printInteger, java.util.Formatter$FormatSpecifier
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkCharacter, java.util.Formatter$FormatSpecifier
Method to inline: print, java.util.Formatter$FormatSpecifier, caller: printInteger, java.util.Formatter$FormatSpecifier
Method to inline: highSurrogate, java.lang.Character, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: getEntry, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: lowSurrogate, java.lang.Character, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: print, java.util.Formatter$FormatSpecifier, caller: printInteger, java.util.Formatter$FormatSpecifier
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: getEntry, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: eq, com.oracle.svm.core.WeakIdentityHashMap, caller: getEntry, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: isMalformed4_3, sun.nio.cs.UTF_8$Decoder, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkCharacter, java.util.Formatter$FormatSpecifier
Method to inline: canEncode, java.lang.StringLatin1, caller: toUpperCase, java.lang.StringLatin1
Method to inline: position, java.nio.Buffer, caller: toString, java.nio.CharBuffer
Method to inline: limit, java.nio.Buffer, caller: toString, java.nio.CharBuffer
Method to inline: <init>, java.lang.String, caller: toUpperCase, java.lang.StringLatin1
Method to inline: <init>, java.util.IllegalFormatConversionException, caller: failConversion, java.util.Formatter$FormatSpecifier
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: malformedN, sun.nio.cs.UTF_8$Decoder
Method to inline: remaining, java.nio.Buffer, caller: xflow, sun.nio.cs.UTF_8$Decoder
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: malformedN, sun.nio.cs.UTF_8$Decoder
Method to inline: locale, java.util.Formatter, caller: printString, java.util.Formatter$FormatSpecifier
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: out, java.util.Formatter, caller: printString, java.util.Formatter$FormatSpecifier
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: isBmpCodePoint, java.lang.Character, caller: toUpperCaseEx, java.lang.StringLatin1
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: malformedN, sun.nio.cs.UTF_8$Decoder
Method to inline: getValue, java.util.TreeMap$Entry, caller: contains, java.util.TreeMap$EntrySet
Method to inline: of, java.lang.CharacterData, caller: toUpperCaseEx, java.lang.Character
Method to inline: of, java.lang.CharacterData, caller: toUpperCaseCharArray, java.lang.Character
Method to inline: nativeOrder, java.nio.ByteOrder, caller: order, java.nio.HeapCharBuffer
Method to inline: isBmpCodePoint, java.lang.Character, caller: toUpperCase, java.lang.StringUTF16
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkInteger, java.util.Formatter$FormatSpecifier
Method to inline: localInit, java.util.concurrent.ThreadLocalRandom, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CounterCell, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: mix64, java.util.concurrent.ThreadLocalRandom, caller: localInit, java.util.concurrent.ThreadLocalRandom
Method to inline: <init>, java.util.Formatter$Flags, caller: parse, java.util.Formatter$Flags
Method to inline: advanceProbe, java.util.concurrent.ThreadLocalRandom, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.Formatter, caller: <init>, java.util.Formatter
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CounterCell, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.FormatFlagsConversionMismatchException, caller: failMismatch, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.lang.String, caller: toUpperCase, java.lang.StringUTF16
Method to inline: isGeneral, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: isInteger, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: getCoder, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getCoder, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: tryPresize, java.util.concurrent.ConcurrentHashMap, caller: treeifyBin, java.util.concurrent.ConcurrentHashMap
Method to inline: isFloat, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: isText, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$ForwardingNode, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: isCharacter, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: of, java.lang.CharacterData, caller: isUpperCase, java.lang.Character
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: treeifyBin, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$ForwardingNode
Method to inline: of, java.lang.CharacterData, caller: isUpperCase, java.lang.Character
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$Node
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: add, java.util.Formatter$Flags, caller: parse, java.util.Formatter$Flags
Method to inline: charCount, java.lang.Character, caller: toUpperCaseEx, java.lang.StringUTF16
Method to inline: <init>, java.util.DuplicateFormatFlagsException, caller: parse, java.util.Formatter$Flags
Method to inline: isBmpCodePoint, java.lang.Character, caller: toUpperCaseEx, java.lang.StringUTF16
Method to inline: <init>, java.util.UnknownFormatFlagsException, caller: parse, java.util.Formatter$Flags
Method to inline: isNaN, java.lang.Double, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: locale, java.util.Formatter, caller: getZero, java.util.Formatter$FormatSpecifier
Method to inline: getAdapterPreference, sun.util.locale.provider.LocaleProviderAdapter, caller: getResourceBundleBased, sun.util.locale.provider.LocaleProviderAdapter
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: untreeify, java.util.concurrent.ConcurrentHashMap
Method to inline: shift, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: scale, java.math.BigDecimal, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: canEncode, java.lang.StringLatin1, caller: insert, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: mantissa, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: hasDot, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: exponent, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: mantissa, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.GregorianCalendar, caller: createCalendar, java.util.Calendar
Method to inline: getDefaultRef, java.util.TimeZone, caller: getDefault, java.util.TimeZone
Method to inline: <init>, java.util.Calendar, caller: <init>, java.util.GregorianCalendar
Method to inline: hasExtensions, java.util.Locale, caller: getUnicodeLocaleType, java.util.Locale
Method to inline: javaHome, jdk.internal.util.StaticProperty, caller: setDefaultZone, java.util.TimeZone
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: zeroValueOf, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: isFinite, java.lang.Double, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: getProperties, com.oracle.svm.core.jdk.SystemPropertiesSupport, caller: getProperties, java.lang.System
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: getExponent, java.lang.Math, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: scalb, java.lang.Math, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: canEncode, java.lang.StringLatin1, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getExponent, java.lang.Math, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: charAt, java.lang.AbstractStringBuilder
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: powerOfTwoD, java.lang.Math, caller: scalb, java.lang.Math
Method to inline: isFinite, java.lang.Double, caller: toHexString, java.lang.Double
Method to inline: copySign, java.lang.Math, caller: toHexString, java.lang.Double
Method to inline: getExponent, java.lang.Math, caller: toHexString, java.lang.Double
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: indexOf, java.lang.String
Method to inline: <init>, java.io.ByteArrayInputStream, caller: getZoneInfo0, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.io.InputStream, caller: <init>, java.io.ByteArrayInputStream
Method to inline: <init>, java.io.DataInputStream, caller: getZoneInfo0, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.io.FilterInputStream, caller: <init>, java.io.DataInputStream
Method to inline: <init>, java.io.InputStream, caller: <init>, java.io.FilterInputStream
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: <init>, java.util.regex.Pattern$Start, caller: <init>, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Start
Method to inline: charCount, java.lang.Character, caller: compile, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: putVal, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: putVal, java.util.concurrent.ConcurrentHashMap
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: putVal, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.regex.Pattern$Start, caller: compile, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Start, caller: compile, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: peek, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.PatternSyntaxException, caller: error, java.util.regex.Pattern
Method to inline: isAscii, java.util.regex.ASCII, caller: RemoveQEQuoting, java.util.regex.Pattern
Method to inline: isDigit, java.util.regex.ASCII, caller: RemoveQEQuoting, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$BnM, caller: optimize, java.util.regex.Pattern$BnM
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$BnM
Method to inline: has, java.util.regex.Pattern, caller: isLineSeparator, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: newSlice, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: newSlice, java.util.regex.Pattern
Method to inline: isUpper, java.util.regex.ASCII, caller: toLower, java.util.regex.ASCII
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: ALL, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$CharProperty
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: UNIXDOT, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: DOT, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$UnixDollar, caller: sequence, java.util.regex.Pattern
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$UnixDollar
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.util.regex.Pattern$Dollar, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Dollar
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: isAscii, java.util.regex.ASCII, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: charCount, java.lang.Character, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: unread, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: toLocalTime, java.time.LocalDateTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: charCount, java.lang.Character, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: toSecondOfDay, java.time.LocalTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: toLocalTime, java.time.LocalDateTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: toSecondOfDay, java.time.LocalTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: charCount, java.lang.Character, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: ordinal, java.lang.Enum, caller: toMode, sun.text.normalizer.NormalizerBase
Method to inline: getValue, java.util.zip.CRC32, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, sun.util.calendar.ZoneInfo, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.util.TimeZone, caller: <init>, sun.util.calendar.ZoneInfo
Method to inline: delete, java.lang.AbstractStringBuilder, caller: delete, java.lang.StringBuilder
Method to inline: shift, java.lang.AbstractStringBuilder, caller: delete, java.lang.AbstractStringBuilder
Method to inline: <init>, java.time.ZoneOffset, caller: ofTotalSeconds, java.time.ZoneOffset
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: ofEpochSecond, java.time.LocalDateTime
Method to inline: getId, java.time.ZoneOffset, caller: ofTotalSeconds, java.time.ZoneOffset
Method to inline: <init>, java.time.LocalDateTime, caller: ofEpochSecond, java.time.LocalDateTime
Method to inline: <init>, java.time.ZoneOffset, caller: ofTotalSeconds, java.time.ZoneOffset
Method to inline: <init>, java.time.LocalDate, caller: ofEpochDay, java.time.LocalDate
Method to inline: <init>, java.time.LocalTime, caller: create, java.time.LocalTime
Method to inline: charCount, java.lang.Character, caller: producePermutations, java.util.regex.Pattern
Method to inline: charCount, java.lang.Character, caller: producePermutations, java.util.regex.Pattern
Method to inline: isBmpCodePoint, java.lang.Character, caller: appendCodePoint, java.lang.AbstractStringBuilder
Method to inline: toCodePoint, java.lang.Character, caller: codePointAt, java.lang.Character
Method to inline: zone, java.time.temporal.TemporalQueries, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatConversionException, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatConversionException, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.time.Instant, caller: create, java.time.Instant
Method to inline: <init>, java.util.regex.Pattern$NFCCharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$NFCCharProperty
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$NFCCharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: next, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: addFlag, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: namedGroups, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: namedGroups, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Behind, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Behind
Method to inline: <init>, java.util.regex.Pattern$NotBehind, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$NotBehind
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Ques
Method to inline: <init>, java.util.regex.Pattern$Pos, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Pos
Method to inline: <init>, java.util.regex.Pattern$Neg, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Neg
Method to inline: <init>, java.util.regex.Pattern$GroupCurly, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$GroupCurly
Method to inline: <init>, java.util.regex.Pattern$Loop, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Loop
Method to inline: <init>, java.util.regex.Pattern$Prolog, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Prolog
Method to inline: has, java.util.regex.Pattern, caller: accept, java.util.regex.Pattern
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.HashMap
Method to inline: <init>, java.util.regex.Pattern$GroupHead, caller: createGroup, java.util.regex.Pattern
Method to inline: isNaN, java.lang.Float, caller: <init>, java.util.HashMap
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$GroupHead
Method to inline: <init>, java.util.regex.Pattern$GroupTail, caller: createGroup, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$GroupTail
Method to inline: isDigit, java.util.regex.ASCII, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.ArrayList$SubList, caller: subList, java.util.ArrayList
Method to inline: isDigit, java.util.regex.ASCII, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList$SubList
Method to inline: isDigit, java.util.regex.ASCII, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Curly
Method to inline: unread, java.util.regex.Pattern, caller: clazz, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: closure, java.util.regex.Pattern
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: unread, java.util.regex.Pattern, caller: clazz, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: curly, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: curly, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CharPropertyGreedy, caller: curly, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$CharPropertyGreedy
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: curly, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: read, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: <init>, java.lang.String, caller: family, java.util.regex.Pattern
Method to inline: <init>, java.lang.String, caller: family, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: family, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: bitsOrSingle, java.util.regex.Pattern
Method to inline: isBmpCodePoint, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: has, java.util.regex.Pattern, caller: bitsOrSingle, java.util.regex.Pattern
Method to inline: canEncode, java.lang.StringLatin1, caller: toBytes, java.lang.StringLatin1
Method to inline: isValidCodePoint, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: isBmpCodePoint, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: unread, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: highSurrogate, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: lowSurrogate, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: has, java.util.regex.Pattern, caller: single, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: single, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: isAscii, java.util.regex.ASCII, caller: single, java.util.regex.Pattern
Method to inline: ASCII_WORD, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: VertWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: isLower, java.util.regex.ASCII, caller: toUpper, java.util.regex.ASCII
Method to inline: unread, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: ASCII_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: namedGroups, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: namedGroups, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CIBackRef, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$CIBackRef
Method to inline: namedGroups, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$BackRef, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$BackRef
Method to inline: HorizWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$NFCCharProperty, caller: atom, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: ASCII_DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Bound, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Bound
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$UnixDollar, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Dollar, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: GRAPH, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: ASCII_WORD, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: VertWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: BLANK, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: CONTROL, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: newCharProperty, java.util.regex.Pattern
Method to inline: ASCII_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: HorizWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: PUNCTUATION, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: ASCII_DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: UPPERCASE, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Bound, caller: escape, java.util.regex.Pattern
Method to inline: LOWERCASE, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: WORD, java.util.regex.CharPredicates
Method to inline: has, java.util.regex.Pattern, caller: ref, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: ref, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CIBackRef, caller: ref, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$BackRef, caller: ref, java.util.regex.Pattern
Method to inline: JOIN_CONTROL, java.util.regex.CharPredicates, caller: WORD, java.util.regex.CharPredicates
Method to inline: toDigit, java.util.regex.ASCII, caller: x, java.util.regex.Pattern
Method to inline: toDigit, java.util.regex.ASCII, caller: x, java.util.regex.Pattern
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: ALNUM, java.util.regex.CharPredicates
Method to inline: GRAPH, java.util.regex.CharPredicates, caller: PRINT, java.util.regex.CharPredicates
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: HEX_DIGIT, java.util.regex.CharPredicates
Method to inline: toDigit, java.util.regex.ASCII, caller: x, java.util.regex.Pattern
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: ALNUM, java.util.regex.CharPredicates
Method to inline: BLANK, java.util.regex.CharPredicates, caller: PRINT, java.util.regex.CharPredicates
Method to inline: JOIN_CONTROL, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: cursor, java.util.regex.Pattern, caller: u, java.util.regex.Pattern
Method to inline: CONTROL, java.util.regex.CharPredicates, caller: PRINT, java.util.regex.CharPredicates
Method to inline: toCodePoint, java.lang.Character, caller: u, java.util.regex.Pattern
Method to inline: setcursor, java.util.regex.Pattern, caller: u, java.util.regex.Pattern
Method to inline: NONCHARACTER_CODE_POINT, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: toDigit, java.util.regex.ASCII, caller: uxxxx, java.util.regex.Pattern
Method to inline: <init>, java.lang.String, caller: N, java.util.regex.Pattern
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: UPPERCASE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: PUNCTUATION, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: TITLECASE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: unread, java.util.regex.Pattern, caller: o, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: o, java.util.regex.Pattern
Method to inline: NONCHARACTER_CODE_POINT, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: isValidCodePoint, java.lang.Character, caller: codePointOf, java.lang.Character
Method to inline: LOWERCASE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: LETTER, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: JOIN_CONTROL, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: isValidCodePoint, java.lang.Character, caller: getName, java.lang.Character
Method to inline: IDEOGRAPHIC, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: toString, java.lang.Character$Subset, caller: getName, java.lang.Character
Method to inline: replace, java.lang.String, caller: getName, java.lang.Character
Method to inline: <init>, java.lang.ref.SoftReference, caller: getInstance, java.lang.CharacterName
Method to inline: get, java.lang.ref.Reference, caller: get, java.lang.ref.SoftReference
Method to inline: CONTROL, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: ASSIGNED, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: isValidCodePoint, java.lang.Character, caller: of, java.lang.Character$UnicodeBlock
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: ALL, java.util.regex.Pattern, caller: forProperty, java.util.regex.CharPredicates
Method to inline: lock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: unlock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: unlock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: addFinalRefCount, jdk.internal.misc.VM, caller: reallyPoll, java.lang.ref.ReferenceQueue
Method to inline: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: executeAllQueuedVMOperations, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: isBuiltinLibrary, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: isBuiltinLibrary, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: isBuiltinLibrary, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: isBuiltinLibrary, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: hasRemaining, java.nio.Buffer, caller: implWrite, sun.nio.cs.StreamEncoder
Method to inline: addSuppressed, java.lang.Throwable, caller: findBuiltinSymbol, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: remaining, java.nio.Buffer, caller: implWrite, sun.nio.cs.StreamEncoder
Method to inline: position, java.nio.Buffer, caller: implFlushBuffer, sun.nio.cs.StreamEncoder
Method to inline: addSuppressed, java.lang.Throwable, caller: dlsym, com.oracle.svm.core.posix.PosixUtils
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: callOnLoadFunction, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: flushBuffer, java.io.BufferedOutputStream, caller: write, java.io.BufferedOutputStream
Method to inline: flushBuffer, java.io.BufferedOutputStream, caller: write, java.io.BufferedOutputStream
Method to inline: clear, java.nio.Buffer, caller: clear, java.nio.ByteBuffer
Method to inline: flip, java.nio.Buffer, caller: flip, java.nio.ByteBuffer
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: printGCSummary, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: printGCSummary, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: drain, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: getSafepointReason, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: getSafepointReason, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: isMyself, com.oracle.svm.core.thread.Safepoint$Master, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: incInstalled, com.oracle.svm.core.thread.Safepoint$Statistics, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isMyself, com.oracle.svm.core.thread.Safepoint$Master, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: incReleased, com.oracle.svm.core.thread.Safepoint$Statistics, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isMyself, com.oracle.svm.core.thread.Safepoint$Master, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: drain, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: incRequested, com.oracle.svm.core.thread.Safepoint$Statistics, caller: requestSafepoint, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: log, com.oracle.svm.core.thread.VMOperationControl, caller: access$100, com.oracle.svm.core.thread.VMOperationControl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: maybeFatallyTooLong, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: doNotLoopTooLong, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: hasWork, com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: hasWork, com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: incrementCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: scrubLists, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: finishCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: getTimeSinceFirstAllocation, com.oracle.svm.core.genscavenge.GCImpl$Timer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: printGCAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: resetTimers, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: resetTimers, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: resetTimers, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: precondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: beforeGarbageCollection, com.oracle.svm.core.os.CommittedMemoryProvider, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: afterGarbageCollection, com.oracle.svm.core.os.CommittedMemoryProvider, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: afterCollection, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: updateSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals, caller: afterCollection, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: divideNanosToMillis, com.oracle.svm.core.util.TimeUtils, caller: updateSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals
Method to inline: getSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals, caller: afterCollection, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: postcondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: postcondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: verbosePostCondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: verbosePostCondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: tzCanonicalIDs, sun.util.cldr.CLDRBaseLocaleDataMetaInfo, caller: canonicalTZID, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: empty, java.util.Optional, caller: ofNullable, java.util.Optional
Method to inline: <init>, java.util.Optional, caller: of, java.util.Optional
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addToReferencePendingList, com.oracle.svm.core.genscavenge.HeapImpl, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: addToReferencePendingList, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: addToReferencePendingList, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: addToReferencePendingList, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: getChunkUsedBytesAfterCollection, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: swapSpaces, com.oracle.svm.core.genscavenge.YoungGeneration, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, caller: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getObjectIndex, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: dirtyCardForObjectOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: testUnalignedBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: isUnalignedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: addFinalRefCount, jdk.internal.misc.VM, caller: enqueue, java.lang.ref.ReferenceQueue
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: isDirtyEntry, com.oracle.svm.core.genscavenge.CardTable, caller: isDirtyEntryAtIndexUnchecked, com.oracle.svm.core.genscavenge.CardTable
Method to inline: getEnclosingUnalignedHeapChunkFromPointer, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: getEnclosingUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, caller: dirtyEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, caller: readEntryAtIndexUnchecked, com.oracle.svm.core.genscavenge.CardTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: reset, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, caller: getObjectIndex, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: addSuppressed, java.lang.Throwable, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: clear, java.lang.ref.Reference, caller: clean, jdk.internal.ref.PhantomCleanable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: isYoungSpace, com.oracle.svm.core.genscavenge.Space
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: clear, com.oracle.svm.core.heap.ReferenceInternals, caller: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: prepareForPromotion, com.oracle.svm.core.genscavenge.YoungGeneration, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, caller: maybeUpdateForwardedReference, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: maybeUpdateForwardedReference, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: addSuppressed, java.lang.Throwable, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: testForwardedHeaderBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: isForwardedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hasShift, org.graalvm.compiler.core.common.CompressEncoding, caller: getForwardedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: reset, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: addSuppressed, java.lang.Throwable, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getPinHead, com.oracle.svm.core.genscavenge.HeapImpl, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: addSuppressed, java.lang.Throwable, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, caller: indexLimitForMemorySize, com.oracle.svm.core.genscavenge.CardTable
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: isOldSpace, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: getObjectIndex, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: indexToMemoryPointer, com.oracle.svm.core.genscavenge.CardTable, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: unbiasExponent, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: exponentToOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexMinusDelta, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getEntryAtIndex, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: indexToMemoryPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPointerAtOffset, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: getAlignment, com.oracle.svm.core.config.ObjectLayout, caller: memoryOffsetScale, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: clear, java.lang.ref.Reference, caller: clean, jdk.internal.ref.WeakCleanable
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: hashCode, java.util.concurrent.ConcurrentHashMap$EntrySetView
Method to inline: clear, java.lang.ref.Reference, caller: clean, jdk.internal.ref.SoftCleanable
Method to inline: equals, java.lang.Enum, caller: equals, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: pattern, java.util.regex.Matcher, caller: toString, java.util.regex.Matcher
Method to inline: ordinal, java.lang.Enum, caller: hashCode, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: regionStart, java.util.regex.Matcher, caller: toString, java.util.regex.Matcher
Method to inline: regionEnd, java.util.regex.Matcher, caller: toString, java.util.regex.Matcher
Method to inline: <init>, java.util.regex.Pattern$BnM, caller: <init>, java.util.regex.Pattern$BnMS
Method to inline: charCount, java.lang.Character, caller: <init>, java.util.regex.Pattern$BnMS
Method to inline: hashCode, java.text.NumberFormat, caller: hashCode, java.text.DecimalFormat
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Caret
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: hashCode, sun.util.calendar.ZoneInfo
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: toString, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: hashCode, java.time.LocalDate, caller: hashCode, java.time.LocalDateTime
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TableStack, caller: pushState, java.util.concurrent.ConcurrentHashMap$Traverser
Method to inline: toNanoOfDay, java.time.LocalTime, caller: hashCode, java.time.LocalTime
Method to inline: lineSeparator, java.lang.System, caller: getMessage, java.util.regex.PatternSyntaxException
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: toString, com.oracle.svm.core.meta.SubstrateObjectConstant
Method to inline: lineSeparator, java.lang.System, caller: getMessage, java.util.regex.PatternSyntaxException
Method to inline: signum, java.lang.Long, caller: signum, java.math.BigDecimal
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$GraphemeBound
Method to inline: <init>, java.math.BigDecimal, caller: negate, java.math.BigDecimal
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: ordinal, java.lang.Enum, caller: get, java.time.Instant
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigInteger
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigInteger
Method to inline: updateTime, java.util.Calendar, caller: getTimeInMillis, java.util.Calendar
Method to inline: bitCount, java.lang.Integer, caller: bitLength, java.math.BigInteger
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: equals, sun.util.calendar.ZoneInfo
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: equals, sun.util.calendar.ZoneInfo
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: toString, java.lang.Enum, caller: toString, java.math.MathContext
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: range, java.time.temporal.ChronoField, caller: checkValidValue, java.time.temporal.ChronoField
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$Curly
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: <init>, java.lang.CharacterName$1, caller: <init>, java.lang.CharacterName
Method to inline: maxBytesPerChar, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: scale, java.lang.StringCoding, caller: encode, java.lang.StringCoding
Method to inline: <init>, java.util.zip.InflaterInputStream, caller: <init>, java.lang.CharacterName
Method to inline: onMalformedInput, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: <init>, java.io.DataInputStream, caller: <init>, java.lang.CharacterName
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: getClassLoader0, java.lang.Class, caller: encode, java.lang.StringCoding
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: ordinal, java.lang.Enum, caller: get0, java.time.LocalTime
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: updateTime, java.util.Calendar, caller: complete, java.util.Calendar
Method to inline: close, java.io.FilterInputStream, caller: <init>, java.lang.CharacterName
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: addSuppressed, java.lang.Throwable, caller: <init>, java.lang.CharacterName
Method to inline: close, java.io.FilterInputStream, caller: <init>, java.lang.CharacterName
Method to inline: position, java.nio.Buffer, caller: encode, java.lang.StringCoding
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: <init>, sun.nio.cs.ISO_8859_1$Encoder, caller: newEncoder, sun.nio.cs.ISO_8859_1
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: <init>, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: <init>, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: <init>, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: <init>, java.util.HashSet, caller: <init>, java.util.LinkedHashSet
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: <init>, java.util.LinkedHashMap, caller: <init>, java.util.HashSet
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: toSecondOfDay, java.time.LocalTime, caller: get0, java.time.LocalTime
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: toNanoOfDay, java.time.LocalTime, caller: get0, java.time.LocalTime
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: getFixedDate, java.util.GregorianCalendar
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: getChars, java.lang.String, caller: mapEntryToString, java.util.concurrent.Helpers
Method to inline: getChars, java.lang.String, caller: mapEntryToString, java.util.concurrent.Helpers
Method to inline: isZero, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: toString, jdk.vm.ci.meta.JavaConstant
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: ordinal, java.lang.Enum, caller: asBoxedPrimitive, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$XGrapheme
Method to inline: ordinal, java.lang.Enum, caller: getLong, java.time.Instant
Method to inline: toNanoOfDay, java.time.LocalTime, caller: getLong, java.time.LocalTime
Method to inline: toNanoOfDay, java.time.LocalTime, caller: getLong, java.time.LocalTime
Method to inline: getCC, sun.text.normalizer.NormalizerImpl, caller: decomposeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: decomposeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: getCC, sun.text.normalizer.NormalizerImpl, caller: decomposeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: toEpochDay, java.time.LocalDate, caller: getLong, java.time.LocalDate
Method to inline: getProlepticMonth, java.time.LocalDate, caller: getLong, java.time.LocalDate
Method to inline: isSurrogate, sun.text.normalizer.UTF16, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: ordinal, java.lang.Enum, caller: get0, java.time.LocalDate
Method to inline: isLatin1, java.lang.String, caller: toCharArray, java.lang.String
Method to inline: charCount, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$BnMS
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.math.BigDecimal, caller: setScale, java.math.BigDecimal
Method to inline: isHangulLV, sun.text.normalizer.NormalizerImpl, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.math.BigDecimal, caller: setScale, java.math.BigDecimal
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$NFCCharProperty
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$NFCCharProperty
Method to inline: toEpochDay, java.time.LocalDate, caller: getDayOfWeek, java.time.LocalDate
Method to inline: isFieldSet, java.util.Calendar, caller: computeFields, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeFields, java.util.GregorianCalendar
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$NFCCharProperty
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: hit, sun.util.calendar.BaseCalendar$Date, caller: getFixedDate, sun.util.calendar.BaseCalendar
Method to inline: hangulLVT, sun.text.normalizer.NormalizerImpl, caller: isHangulLVT, sun.text.normalizer.NormalizerImpl
Method to inline: ordinal, java.lang.Enum, caller: isTimeBased, java.time.temporal.ChronoField
Method to inline: ordinal, java.lang.Enum, caller: isTimeBased, java.time.temporal.ChronoField
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: getCCFromYesOrMaybe, sun.text.normalizer.NormalizerImpl
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: ordinal, java.lang.Enum, caller: match, java.util.regex.Pattern$Ques
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: ordinal, java.lang.Enum, caller: range, java.time.LocalDate
Method to inline: getYear, java.time.LocalDate, caller: range, java.time.LocalDate
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: computeFields, java.util.GregorianCalendar
Method to inline: setLength, java.lang.AbstractStringBuilder, caller: setLength, java.lang.StringBuilder
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: getChronology, java.time.LocalDate, caller: getChronology, java.time.LocalDate
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$XGrapheme
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: setLength, java.lang.AbstractStringBuilder
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.ZoneOffset
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.ZoneOffset
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: setLength, java.lang.AbstractStringBuilder
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$XGrapheme
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: toLocalDate, java.time.LocalDateTime, caller: compareTo0, java.time.LocalDateTime
Method to inline: toCodePoint, java.lang.Character, caller: codePointBefore, java.lang.Character
Method to inline: <init>, java.util.regex.Pattern$Start, caller: <init>, java.util.regex.Pattern$StartS
Method to inline: toLocalTime, java.time.LocalDateTime, caller: compareTo0, java.time.LocalDateTime
Method to inline: <init>, java.time.temporal.ValueRange, caller: of, java.time.temporal.ValueRange
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: <init>, java.util.regex.Pattern$TreeInfo
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.LocalDateTime
Method to inline: toLocalDate, java.time.LocalDateTime, caller: toLocalDate, java.time.LocalDateTime
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: bitCount, java.lang.Integer, caller: multiplyByInt, java.math.BigInteger
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: <init>, java.util.regex.Pattern$NotBehind, caller: <init>, java.util.regex.Pattern$NotBehindS
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.LocalDate
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: compare, java.lang.Character, caller: compare, java.nio.CharBuffer
Method to inline: name, java.nio.charset.Charset, caller: compareTo, java.nio.charset.Charset
Method to inline: name, java.nio.charset.Charset, caller: compareTo, java.nio.charset.Charset
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: compareTo, java.lang.AbstractStringBuilder
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: compareTo, java.lang.AbstractStringBuilder
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: of, java.lang.CharacterData, caller: isIdeographic, java.lang.Character
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: of, java.lang.CharacterData, caller: isAlphabetic, java.lang.Character
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.temporal.TemporalAccessor
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: of, java.lang.CharacterData, caller: isLowerCase, java.lang.Character
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.temporal.TemporalAccessor
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.temporal.TemporalAccessor
Method to inline: of, java.lang.CharacterData, caller: isLowerCase, java.lang.Character
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: compare, java.lang.Byte, caller: compareTo, java.lang.Byte
Method to inline: compare, java.lang.Character, caller: compareTo, java.lang.Character
Method to inline: compare, java.lang.Short, caller: compareTo, java.lang.Short
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: isLatin1, java.lang.String, caller: codePointCount, java.lang.String
Method to inline: compare, java.lang.Byte, caller: compare, java.nio.ByteBuffer
Method to inline: of, java.lang.CharacterData, caller: isIdentifierIgnorable, java.lang.Character
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$Slice
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$SliceNode
Method to inline: getSourceFileName, java.lang.Class, caller: getSourceReference, com.oracle.svm.core.code.FrameInfoQueryResult
Method to inline: getSourceFileName, java.lang.Class, caller: log, com.oracle.svm.core.code.FrameInfoQueryResult
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$GroupCurly
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$BranchConn
Method to inline: isLower, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: isUpper, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: isDigit, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: isDigit, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: namedGroups, java.util.regex.Pattern, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: namedGroups, java.util.regex.Pattern, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: <init>, java.util.regex.Pattern$CharPropertyGreedy, caller: <init>, java.util.regex.Pattern$BmpCharPropertyGreedy
Method to inline: of, java.lang.CharacterData, caller: isUnicodeIdentifierPart, java.lang.Character
Method to inline: <init>, java.util.regex.Pattern$BitClass, caller: <init>, java.util.regex.Pattern$BitClass
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: <init>, java.util.regex.Pattern$BmpCharProperty
Method to inline: toNanoOfDay, java.time.LocalTime, caller: plusWithOverflow, java.time.LocalDateTime
Method to inline: isAscii, java.util.regex.ASCII, caller: add, java.util.regex.Pattern$BitClass
Method to inline: of, java.lang.CharacterData, caller: isDigit, java.lang.Character
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: getMonthValue, java.time.LocalDate, caller: getMonthValue, java.time.LocalDateTime
Method to inline: lockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: getDayOfMonth, java.time.LocalDate, caller: getDayOfMonth, java.time.LocalDateTime
Method to inline: of, java.lang.CharacterData, caller: isMirrored, java.lang.Character
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Begin
Method to inline: <init>, java.time.LocalDateTime, caller: with, java.time.LocalDateTime
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: toEpochDay, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: <init>, java.util.IdentityHashMap$EntryIterator$Entry, caller: next, java.util.IdentityHashMap$EntryIterator
Method to inline: isPresent, java.util.Optional, caller: map, java.util.Optional
Method to inline: empty, java.util.Optional, caller: map, java.util.Optional
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CIBackRef
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CIBackRef
Method to inline: contendedLock, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: lockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CharProperty
Method to inline: <init>, java.util.regex.IntHashSet, caller: matchInit, java.util.regex.Pattern$Loop
Method to inline: pinDayOfMonth, java.util.GregorianCalendar, caller: add, java.util.GregorianCalendar
Method to inline: pinDayOfMonth, java.util.GregorianCalendar, caller: add, java.util.GregorianCalendar
Method to inline: setTimeZone, java.util.Calendar, caller: setTimeZone, java.util.GregorianCalendar
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CharPropertyGreedy
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Branch
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CharPropertyGreedy
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$Branch
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$SliceIS
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$Branch
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$SliceIS
Method to inline: ordinal, java.lang.Enum, caller: <init>, jdk.internal.math.FormattedFloatingDecimal
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$SliceI
Method to inline: hasExtensions, java.util.Locale, caller: retrieveFirstDayOfWeek, sun.util.locale.provider.CalendarDataUtility
Method to inline: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntryIterator, caller: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntryIterator
Method to inline: <init>, java.util.Formatter$Flags, caller: dup, java.util.Formatter$Flags
Method to inline: isDigit, java.util.regex.ASCII, caller: lambda$ASCII_DIGIT$15, java.util.regex.CharPredicates
Method to inline: of, java.lang.CharacterData, caller: isWhitespace, java.lang.Character
Method to inline: <init>, java.nio.charset.CoderResult, caller: lambda$malformedForLength$0, java.nio.charset.CoderResult
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$ReservationNode
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$UnixCaret
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: toString, sun.util.calendar.ZoneInfo
Method to inline: <init>, java.util.Locale$Builder, caller: findRegionOverride, sun.util.locale.provider.CalendarDataUtility
Method to inline: <init>, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: <init>, java.text.DigitList, caller: <init>, java.text.DecimalFormat
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getOffsets, sun.util.calendar.ZoneInfo
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getOffsets, sun.util.calendar.ZoneInfo
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder, caller: <init>, java.util.Locale$Builder
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getLastRuleInstance, sun.util.calendar.ZoneInfo
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getLastRuleInstance, sun.util.calendar.ZoneInfo
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$End
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CollectionView, caller: <init>, java.util.concurrent.ConcurrentHashMap$EntrySetView
Method to inline: <init>, java.util.regex.Pattern$Behind, caller: <init>, java.util.regex.Pattern$BehindS
Method to inline: <init>, sun.util.locale.provider.DateFormatSymbolsProviderImpl, caller: lambda$getDateFormatSymbolsProvider$3, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: <init>, java.lang.ref.ReferenceQueue, caller: <init>, sun.util.locale.provider.LocaleResources
Method to inline: maxBytesPerChar, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: scale, java.lang.StringCoding, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: <init>, sun.util.resources.LocaleData, caller: getLocaleData, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayName, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: emptySet, java.util.Collections, caller: createLanguageTagSet, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: <init>, java.util.HashSet, caller: createLanguageTagSet, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: hasMoreTokens, java.util.StringTokenizer, caller: createLanguageTagSet, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: isNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: <init>, java.lang.ref.SoftReference, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: of, java.lang.CharacterData, caller: isJavaIdentifierPart, java.lang.Character
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigInteger
Method to inline: position, java.nio.Buffer, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.HashMap
Method to inline: <init>, java.util.zip.CRC32, caller: <init>, sun.util.calendar.ZoneInfoFile$Checksum
Method to inline: <init>, java.text.Format, caller: <init>, java.text.NumberFormat
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$SliceU
Method to inline: <init>, java.util.HashMap, caller: <init>, java.util.HashSet
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigDecimal
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getNumberPatterns, sun.util.locale.provider.LocaleResources
Method to inline: <init>, com.oracle.svm.core.meta.SubstrateObjectConstant, caller: <init>, com.oracle.svm.core.meta.DirectSubstrateObjectConstant
Method to inline: isInLibgraal, com.oracle.svm.core.SubstrateUtil, caller: <init>, com.oracle.svm.core.meta.DirectSubstrateObjectConstant
Method to inline: range, java.time.temporal.ChronoField, caller: checkValidIntValue, java.time.temporal.ChronoField
Method to inline: isValidCodePoint, java.lang.Character, caller: of, java.lang.Character$UnicodeScript
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: of, java.lang.CharacterData, caller: isUnicodeIdentifierStart, java.lang.Character
Method to inline: <init>, java.util.regex.Pattern$Loop, caller: <init>, java.util.regex.Pattern$LazyLoop
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$LineEnding
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, sun.util.calendar.ZoneInfo, caller: <init>, sun.util.calendar.ZoneInfo
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: replaceNode, java.util.concurrent.ConcurrentHashMap
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$SliceS
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$LastMatch
Method to inline: release, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: fullyRelease, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Exception
Method to inline: toNanos, java.util.concurrent.TimeUnit, caller: await, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject
Method to inline: onMalformedInput, java.nio.charset.CharsetEncoder, caller: <init>, java.lang.StringCoding$StringEncoder
Method to inline: expandAffixes, java.text.DecimalFormat, caller: applyPattern, java.text.DecimalFormat
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetEncoder, caller: <init>, java.lang.StringCoding$StringEncoder
Method to inline: getClassLoader0, java.lang.Class, caller: <init>, java.lang.StringCoding$StringEncoder
Method to inline: <init>, sun.util.locale.provider.DecimalFormatSymbolsProviderImpl, caller: lambda$getDecimalFormatSymbolsProvider$4, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: <init>, sun.util.locale.provider.NumberFormatProviderImpl, caller: lambda$getNumberFormatProvider$5, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: hasRemaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: position, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkNanos, java.util.concurrent.locks.LockSupport
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkNanos, java.util.concurrent.locks.LockSupport
Method to inline: <init>, java.lang.ref.SoftReference, caller: <init>, sun.util.locale.provider.LocaleResources$ResourceReference
Method to inline: isAscii, java.util.regex.ASCII, caller: lambda$CIRange$13, java.util.regex.Pattern
Method to inline: <init>, java.lang.ref.ReferenceQueue$Lock, caller: <init>, java.lang.ref.ReferenceQueue
Method to inline: <init>, java.util.ImmutableCollections$List12, caller: of, java.util.List
Method to inline: <init>, java.util.ImmutableCollections$List12, caller: of, java.util.List
Method to inline: emptyList, java.util.ImmutableCollections, caller: of, java.util.List
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: setMaximumFractionDigits, java.text.NumberFormat, caller: setMaximumFractionDigits, java.text.DecimalFormat
Method to inline: setMinimumFractionDigits, java.text.NumberFormat, caller: setMaximumFractionDigits, java.text.DecimalFormat
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: charset, java.nio.charset.CharsetEncoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: onMalformedInput, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: maxCharsPerByte, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: setLength, java.lang.AbstractStringBuilder, caller: setLength, java.lang.StringBuffer
Method to inline: setMinimumIntegerDigits, java.text.NumberFormat, caller: setMinimumIntegerDigits, java.text.DecimalFormat
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: setMaximumIntegerDigits, java.text.NumberFormat, caller: setMinimumIntegerDigits, java.text.DecimalFormat
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: setGroupingUsed, java.text.NumberFormat, caller: setGroupingUsed, java.text.DecimalFormat
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: setMaximumIntegerDigits, java.text.NumberFormat, caller: setMaximumIntegerDigits, java.text.DecimalFormat
Method to inline: setMinimumIntegerDigits, java.text.NumberFormat, caller: setMaximumIntegerDigits, java.text.DecimalFormat
Method to inline: setMinimumFractionDigits, java.text.NumberFormat, caller: setMinimumFractionDigits, java.text.DecimalFormat
Method to inline: setMaximumFractionDigits, java.text.NumberFormat, caller: setMinimumFractionDigits, java.text.DecimalFormat
Method to inline: lockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: position, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: remaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: remaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: remaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: deleteCharAt, java.lang.AbstractStringBuilder, caller: deleteCharAt, java.lang.StringBuilder
Method to inline: shift, java.lang.AbstractStringBuilder, caller: deleteCharAt, java.lang.AbstractStringBuilder
Method to inline: copy, java.lang.reflect.Field, caller: copyField, java.lang.reflect.ReflectAccess
Method to inline: copy, java.lang.reflect.Method, caller: copyMethod, java.lang.reflect.ReflectAccess
Method to inline: <init>, java.lang.reflect.Field, caller: copy, java.lang.reflect.Field
Method to inline: <init>, java.lang.reflect.Method, caller: copy, java.lang.reflect.Method
Method to inline: <init>, java.lang.reflect.AccessibleObject, caller: <init>, java.lang.reflect.Field
Method to inline: <init>, java.util.Hashtable$Entry, caller: addEntry, java.util.Hashtable
Method to inline: autoflush, com.oracle.svm.core.log.RealLog, caller: dumpInterruptibly, com.oracle.svm.core.SubstrateSegfaultHandler
Method to inline: <init>, java.io.ExpiringCache$Entry, caller: put, java.io.ExpiringCache
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: hashCode, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getName, java.lang.reflect.Field, caller: hashCode, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getName, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: <init>, java.lang.reflect.AccessibleObject, caller: <init>, java.lang.reflect.Executable
Method to inline: getName, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getType, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: hashCode, java.lang.reflect.Method
Method to inline: getType, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getName, java.lang.reflect.Method, caller: hashCode, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getName, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getName, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getReturnType, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: equals, java.lang.Object, caller: equals, java.lang.reflect.Method
Method to inline: getModifiers, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: ordinal, java.lang.Enum, caller: firstDayOfYear, java.time.Month
Method to inline: <init>, java.math.MutableBigInteger, caller: divideKnuth, java.math.MutableBigInteger
Method to inline: <init>, java.util.LinkedHashMap$LinkedEntrySet, caller: entrySet, java.util.LinkedHashMap
Method to inline: getType, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: <init>, java.math.MutableBigInteger, caller: divideKnuth, java.math.MutableBigInteger
Method to inline: <init>, java.util.ImmutableCollections$ListItr, caller: iterator, java.util.ImmutableCollections$AbstractImmutableList
Method to inline: <init>, java.math.MutableBigInteger, caller: divideKnuth, java.math.MutableBigInteger
Method to inline: getName, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: emptyIterator, java.util.Collections, caller: iterator, java.util.Collections$EmptySet
Method to inline: <init>, java.math.BigDecimal, caller: toBigDecimal, java.math.MutableBigInteger
Method to inline: ordinal, java.lang.Enum, caller: getValue, java.time.Month
Method to inline: methodModifiers, java.lang.reflect.Modifier, caller: toString, java.lang.reflect.Method
Method to inline: ordinal, java.lang.Enum, caller: getValue, java.time.DayOfWeek
Method to inline: dropClassLoaderName, java.lang.StackTraceElement, caller: toString, java.lang.StackTraceElement
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.MutableBigInteger
Method to inline: dropModuleVersion, java.lang.StackTraceElement, caller: toString, java.lang.StackTraceElement
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.DayOfWeek
Method to inline: equals, java.lang.Object, caller: equals, java.util.IdentityHashMap$EntryIterator$Entry
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.Month
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.Month
Method to inline: isNativeMethod, java.lang.StackTraceElement, caller: toString, java.lang.StackTraceElement
Method to inline: getStringBuffer, java.text.DigitList, caller: toString, java.text.DigitList
Method to inline: <init>, sun.util.calendar.BaseCalendar$Date, caller: <init>, sun.util.calendar.Gregorian$Date
Method to inline: <init>, sun.util.calendar.CalendarDate, caller: <init>, sun.util.calendar.BaseCalendar$Date
Method to inline: <init>, java.math.MutableBigInteger, caller: getBlock, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: getBlock, java.math.MutableBigInteger
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: substring, java.lang.AbstractStringBuilder
Method to inline: <init>, java.math.MutableBigInteger, caller: getBlock, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: <init>, java.time.format.DateTimePrintContext, caller: formatTo, java.time.format.DateTimeFormatter
Method to inline: <init>, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: getChronology, java.time.format.DateTimeFormatter, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: <init>, java.math.MutableBigInteger, caller: divideLongMagnitude, java.math.MutableBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: getZone, java.time.format.DateTimeFormatter, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: <init>, java.util.StringTokenizer, caller: <init>, java.util.StringTokenizer
Method to inline: getModifiers, java.lang.reflect.Method, caller: isDefault, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: isDefault, java.lang.reflect.Method
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideLongMagnitude, java.math.MutableBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideLongMagnitude, java.math.MutableBigInteger
Method to inline: safeRightShift, java.math.MutableBigInteger, caller: divide2n1n, java.math.MutableBigInteger
Method to inline: keepLower, java.math.MutableBigInteger, caller: divide2n1n, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divide2n1n, java.math.MutableBigInteger
Method to inline: charCount, java.lang.Character, caller: skipDelimiters, java.util.StringTokenizer
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: charCount, java.lang.Character, caller: setMaxDelimCodePoint, java.util.StringTokenizer
Method to inline: charCount, java.lang.Character, caller: setMaxDelimCodePoint, java.util.StringTokenizer
Method to inline: <init>, java.time.format.DateTimePrintContext$1, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: <init>, java.util.LinkedHashMap$LinkedKeySet, caller: keySet, java.util.LinkedHashMap
Method to inline: charCount, java.lang.Character, caller: scanToken, java.util.StringTokenizer
Method to inline: root, java.util.HashMap$TreeNode, caller: removeTreeNode, java.util.HashMap$TreeNode
Method to inline: charCount, java.lang.Character, caller: scanToken, java.util.StringTokenizer
Method to inline: safeRightShift, java.math.MutableBigInteger, caller: divide3n2n, java.math.MutableBigInteger
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.ImmutableCollections$AbstractImmutableCollection
Method to inline: getEpochSecond, java.time.Instant, caller: ofInstant, java.time.ZonedDateTime
Method to inline: safeRightShift, java.math.MutableBigInteger, caller: divide3n2n, java.math.MutableBigInteger
Method to inline: getNano, java.time.Instant, caller: ofInstant, java.time.ZonedDateTime
Method to inline: toCodePoint, java.lang.Character, caller: parse, sun.nio.cs.Surrogate$Parser
Method to inline: hasRemaining, java.nio.Buffer, caller: parse, sun.nio.cs.Surrogate$Parser
Method to inline: <init>, java.io.ByteArrayInputStream, caller: getResourceAsStream, java.lang.Class
Method to inline: toCodePoint, java.lang.Character, caller: parse, sun.nio.cs.Surrogate$Parser
Method to inline: ones, java.math.MutableBigInteger, caller: divide3n2n, java.math.MutableBigInteger
Method to inline: <init>, java.time.ZonedDateTime, caller: create, java.time.ZonedDateTime
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuffer
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: <init>, java.util.TimeZone, caller: <init>, java.util.SimpleTimeZone
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: <init>, java.util.concurrent.ConcurrentHashMap$BaseIterator
Method to inline: findNextCompBoundary, sun.text.normalizer.NormalizerImpl, caller: composeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: replace, java.lang.String, caller: resolveName, java.lang.Class
Method to inline: checkPermission, java.util.spi.LocaleServiceProvider, caller: <init>, java.util.spi.LocaleServiceProvider
Method to inline: <init>, java.util.spi.LocaleServiceProvider, caller: <init>, java.util.spi.LocaleServiceProvider
Method to inline: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: composeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: getReturnType, java.lang.reflect.Method, caller: specificToStringHeader, java.lang.reflect.Method
Method to inline: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: composeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: specificToStringHeader, java.lang.reflect.Method
Method to inline: getName, java.lang.reflect.Method, caller: specificToStringHeader, java.lang.reflect.Method
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$MapEntry, caller: next, java.util.concurrent.ConcurrentHashMap$EntryIterator
Method to inline: coder, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: coder, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: isLatin1, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogate, sun.text.normalizer.UTF16, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isLatin1, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: toCodePoint, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: position, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: setMaximumFractionDigits, java.text.DecimalFormat, caller: getInstance, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: charCount, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.SimpleTimeZone$Cache, caller: getOffset, java.util.SimpleTimeZone
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: setDecimalSeparatorAlwaysShown, java.text.DecimalFormat, caller: getInstance, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: setParseIntegerOnly, java.text.NumberFormat, caller: getInstance, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: <init>, java.util.SimpleTimeZone$Cache, caller: getOffset, java.util.SimpleTimeZone
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: getDefaultFractionDigits, java.util.Currency, caller: adjustForCurrencyDefaultFractionDigits, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: charCount, java.lang.Character, caller: findPreviousCompBoundary, sun.text.normalizer.NormalizerImpl
Method to inline: isInert, sun.text.normalizer.NormalizerImpl, caller: isTrailCC01ForCompBoundaryAfter, sun.text.normalizer.NormalizerImpl
Method to inline: isDecompNoAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: isTrailCC01ForCompBoundaryAfter, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogate, sun.text.normalizer.UTF16, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: setIterator, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: <init>, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isDecompNoAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: previousCC, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: <init>, java.util.Currency, caller: getInstance, java.util.Currency
Method to inline: <init>, java.math.BigDecimal$StringBuilderHelper, caller: initialValue, java.math.BigDecimal$1
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: ensureCapacity, java.lang.AbstractStringBuilder
Method to inline: charCount, java.lang.Character, caller: findNextCompBoundary, sun.text.normalizer.NormalizerImpl
Method to inline: isJamoVT, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: getTextResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getNumberFormatData, sun.util.resources.LocaleData
Method to inline: <init>, java.text.DateFormatSymbols, caller: getInstance, sun.util.locale.provider.DateFormatSymbolsProviderImpl
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: codePointBefore, java.lang.AbstractStringBuilder
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, sun.util.resources.LocaleData$1, caller: getBundle, sun.util.resources.LocaleData
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: getCalendarDateFromFixedDate, sun.util.calendar.JulianCalendar
Method to inline: charCount, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: isLeapYear, sun.util.calendar.JulianCalendar
Method to inline: hit, sun.util.calendar.BaseCalendar$Date, caller: getFixedDate, sun.util.calendar.JulianCalendar
Method to inline: decomposeShort, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: decomposeShort, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: getFixedDate, sun.util.calendar.JulianCalendar
Method to inline: <init>, java.util.zip.Inflater, caller: <init>, java.util.zip.Inflater
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: getFixedDate, sun.util.calendar.JulianCalendar
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: charCount, java.lang.Character, caller: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: <init>, java.util.zip.Inflater$InflaterZStreamRef$FinalizableZStreamRef, caller: get, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: getSuperclass, java.lang.Class, caller: get, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: getMinimum, java.time.temporal.ValueRange, caller: isIntValue, java.time.temporal.ValueRange
Method to inline: <init>, java.text.DecimalFormatSymbols, caller: getInstance, sun.util.locale.provider.DecimalFormatSymbolsProviderImpl
Method to inline: getMaximum, java.time.temporal.ValueRange, caller: isIntValue, java.time.temporal.ValueRange
Method to inline: <init>, java.util.zip.Inflater$InflaterZStreamRef, caller: get, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: charCount, java.lang.Character, caller: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: getMinimum, java.time.temporal.ValueRange, caller: isValidValue, java.time.temporal.ValueRange
Method to inline: getMaximum, java.time.temporal.ValueRange, caller: isValidValue, java.time.temporal.ValueRange
Method to inline: <init>, java.util.zip.Inflater$InflaterZStreamRef, caller: <init>, java.util.zip.Inflater$InflaterZStreamRef$FinalizableZStreamRef
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: <init>, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: <init>, java.io.FilterInputStream, caller: <init>, java.util.zip.InflaterInputStream
Method to inline: <init>, jdk.internal.ref.CleanerImpl$PhantomCleanableRef, caller: register, java.lang.ref.Cleaner
Method to inline: charCount, java.lang.Character, caller: decomposeShort, sun.text.normalizer.NormalizerImpl
Method to inline: setIterator, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: insert, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: skipPrevious, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: insert, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: toUnsignedInt, java.lang.Byte, caller: read, java.util.zip.InflaterInputStream
Method to inline: insert, java.lang.AbstractStringBuilder, caller: insert, java.lang.StringBuilder
Method to inline: remove, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: putCharsAt, java.lang.AbstractStringBuilder
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: canEncode, java.lang.StringLatin1, caller: putCharsAt, java.lang.AbstractStringBuilder
Method to inline: shift, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: hasRemaining, java.nio.Buffer, caller: needsInput, java.util.zip.Inflater
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: putCharsAt, java.lang.AbstractStringBuilder
Method to inline: position, java.nio.Buffer, caller: inflate, java.util.zip.Inflater
Method to inline: limit, java.nio.Buffer, caller: inflate, java.util.zip.Inflater
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: inflate, java.util.zip.Inflater
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: inflate, java.util.zip.Inflater
Method to inline: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: isJamoVT, sun.text.normalizer.NormalizerImpl, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getLeadSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getTrailSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getLeadSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getTrailSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getCompositionsListForDecompYes, sun.text.normalizer.NormalizerImpl, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: getScript, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: codePointAt, java.lang.AbstractStringBuilder
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: canEncode, java.lang.StringLatin1, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: getFCD16FromNormData, sun.text.normalizer.NormalizerImpl
Method to inline: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: getFCD16FromNormData, sun.text.normalizer.NormalizerImpl
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: <init>, sun.util.locale.LocaleSyntaxException, caller: setRegion, sun.util.locale.InternalLocaleBuilder
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: getScript, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.LocaleSyntaxException, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.BaseLocale$Key, caller: getInstance, sun.util.locale.BaseLocale
Method to inline: <init>, java.util.HashSet, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, java.lang.ref.SoftReference, caller: <init>, sun.util.locale.BaseLocale$Key
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: addSuppressed, java.lang.Throwable, caller: visitNativeImageHeapRegion, com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor
Method to inline: getGreyToBlackObjectVisitor, com.oracle.svm.core.genscavenge.GCImpl, caller: walkAlignedGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: getGreyToBlackObjectVisitor, com.oracle.svm.core.genscavenge.GCImpl, caller: walkUnalignedGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: weightedNanos, com.oracle.svm.core.util.TimeUtils, caller: collectCompletelyBasedOnTime, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: collectCompletelyBasedOnTime, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: getAccounting, com.oracle.svm.core.genscavenge.CollectionPolicy
Method to inline: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, caller: getAccounting, com.oracle.svm.core.genscavenge.CollectionPolicy
Method to inline: isObjectArray, com.oracle.svm.core.hub.LayoutEncoding, caller: walkObjectInline, com.oracle.svm.core.hub.InteriorObjRefWalker
Method to inline: setNext, com.oracle.svm.core.thread.JavaVMOperation, caller: setNext, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation
Method to inline: getReferenceMapIndex, java.lang.Class, caller: walkObjectInline, com.oracle.svm.core.hub.InteriorObjRefWalker
Method to inline: getNext, com.oracle.svm.core.thread.JavaVMOperation, caller: getNext, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: getS4, com.oracle.svm.core.util.TypedMemoryReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.InstanceReferenceMapDecoder
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: operate, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: getS4, com.oracle.svm.core.util.TypedMemoryReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.InstanceReferenceMapDecoder
Method to inline: addSuppressed, java.lang.Throwable, caller: operate, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: getS4, com.oracle.svm.core.util.TypedMemoryReader, caller: getU4, com.oracle.svm.core.util.TypedMemoryReader
Method to inline: biasExponent, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setEntryAtIndex, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: operate, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation
Method to inline: name, java.lang.Enum, caller: operate, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: addSuppressed, java.lang.Throwable, caller: operate, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getReferentFieldAddress, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: asT, com.oracle.svm.core.heap.AllocationFreeList$Element, caller: access$200, com.oracle.svm.core.heap.AllocationFreeList$Element
Method to inline: getValue, com.oracle.svm.core.hub.HubType, caller: isReferenceInstance, com.oracle.svm.core.hub.HubType
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: lambda$detachAllThreadsExceptCurrentWithoutCleanupForTearDown$0, com.oracle.svm.core.thread.VMThreads
Method to inline: toThreadState, jdk.internal.misc.VM, caller: getState, java.lang.Thread
Method to inline: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: uncompressedReferenceSize, com.oracle.svm.core.FrameAccess, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: hasRememberedSet, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: safeToInt, org.graalvm.compiler.core.common.NumUtil, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: set, java.util.concurrent.atomic.AtomicReference, caller: scrub, com.oracle.svm.core.heap.AllocationFreeList
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: afterCollectionCommon, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: afterCollectionCommon, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: afterCollectionCommon, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: getEdenObjectBytes, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: <init>, java.util.Collections$UnmodifiableMap, caller: unmodifiableMap, java.util.Collections
Method to inline: testUnalignedBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: isUnalignedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: hasShift, org.graalvm.compiler.core.common.CompressEncoding, caller: installForwardingPointer, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: isSurvivorSpace, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: getName, sun.util.calendar.Era, caller: toString, sun.util.calendar.Era
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: toString, sun.util.calendar.Era
Method to inline: getSinceDate, sun.util.calendar.Era, caller: toString, sun.util.calendar.Era
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: toString, sun.util.calendar.JulianCalendar$Date
Method to inline: <init>, sun.util.calendar.BaseCalendar$Date, caller: <init>, sun.util.calendar.JulianCalendar$Date
Method to inline: hashCode, java.time.ZoneOffset, caller: hashCode, java.time.ZonedDateTime
Method to inline: rotateLeft, java.lang.Integer, caller: hashCode, java.time.ZonedDateTime
Method to inline: setEra, sun.util.calendar.CalendarDate, caller: setKnownEra, sun.util.calendar.JulianCalendar$Date
Method to inline: <init>, java.util.LinkedHashMap$LinkedEntryIterator, caller: iterator, java.util.LinkedHashMap$LinkedEntrySet
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: <init>, java.util.LinkedHashMap$LinkedKeyIterator, caller: iterator, java.util.LinkedHashMap$LinkedKeySet
Method to inline: toString, java.time.ZoneOffset, caller: toString, java.time.ZonedDateTime
Method to inline: <init>, sun.util.locale.LocaleSyntaxException, caller: <init>, sun.util.locale.LocaleSyntaxException
Method to inline: <init>, sun.util.locale.LocaleObjectCache$CacheEntry, caller: get, sun.util.locale.LocaleObjectCache
Method to inline: position, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: ordinal, java.lang.Enum, caller: get, java.time.ZonedDateTime
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: getOffset, java.time.ZonedDateTime, caller: get, java.time.ZonedDateTime
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: get, java.time.ZonedDateTime
Method to inline: getScript, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: <init>, sun.util.locale.BaseLocale$Key, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: ordinal, java.lang.Enum, caller: get, java.time.chrono.ChronoZonedDateTime
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: get, java.time.chrono.ChronoZonedDateTime
Method to inline: getScript, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: getCurrencyCode, java.util.Currency, caller: initializeCurrency, java.text.DecimalFormatSymbols
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.format.DateTimePrintContext$1
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.format.DateTimePrintContext$1
Method to inline: emptyMap, java.util.Collections, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.format.DateTimePrintContext$1
Method to inline: toLocalDateTime, java.time.ZonedDateTime, caller: toLocalDateTime, java.time.ZonedDateTime
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: <init>, java.util.TreeMap, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.ZonedDateTime
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: getNano, java.time.LocalTime, caller: compareTo, java.time.chrono.ChronoZonedDateTime
Method to inline: getNano, java.time.LocalTime, caller: compareTo, java.time.chrono.ChronoZonedDateTime
Method to inline: ordinal, java.lang.Enum, caller: getLong, java.time.ZonedDateTime
Method to inline: toLocalDate, java.time.LocalDateTime, caller: toLocalDate, java.time.ZonedDateTime
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getDecimalFormatSymbolsData, sun.util.locale.provider.LocaleResources
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: getOffset, java.time.ZonedDateTime, caller: getLong, java.time.ZonedDateTime
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getLong, java.time.ZonedDateTime
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: <init>, java.lang.ref.SoftReference, caller: <init>, sun.util.locale.LocaleObjectCache$CacheEntry
Method to inline: getScript, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: getScript, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: getCountry, java.util.Locale
Method to inline: <init>, sun.util.locale.Extension, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: toSecondOfDay, java.time.LocalTime, caller: toEpochSecond, java.time.chrono.ChronoZonedDateTime
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: toEpochSecond, java.time.chrono.ChronoZonedDateTime
Method to inline: toLocalTime, java.time.LocalDateTime, caller: toLocalTime, java.time.ZonedDateTime
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: <init>, java.util.Locale, caller: createObject, java.util.Locale$Cache
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: <init>, java.util.Locale, caller: createObject, java.util.Locale$Cache
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: <init>, java.util.TreeMap, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: <init>, java.lang.ref.SoftReference, caller: getZoneStrings, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: emptySet, java.util.Collections, caller: getKeys, sun.util.locale.LocaleExtensions
Method to inline: <init>, java.util.LinkedList, caller: loadZoneStrings, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: getComponentType, java.lang.Class, caller: deepHashCode, java.util.Arrays
Method to inline: toIndex, java.util.Currency$SpecialCaseEntry, caller: getInstance, java.util.Currency
Method to inline: <init>, java.text.DateFormatSymbols, caller: initializeData, java.text.DateFormatSymbols
Method to inline: size, java.util.LinkedList, caller: loadZoneStrings, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: <init>, java.nio.charset.CoderResult, caller: lambda$unmappableForLength$1, java.nio.charset.CoderResult
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.TreeMap
Method to inline: emptyMap, java.util.Collections, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getZoneIDs, sun.util.locale.provider.LocaleResources
Method to inline: isLatin1, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getTimeZoneNames, sun.util.resources.LocaleData
Method to inline: <init>, java.util.TreeMap$KeySet, caller: navigableKeySet, java.util.TreeMap
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, java.lang.ref.SoftReference, caller: initializeData, java.text.DateFormatSymbols
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: getTextResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getDateFormatData, sun.util.resources.LocaleData
Method to inline: startOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: endOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: endOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: endOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: needsStringSpanUTF16, sun.text.normalizer.UnicodeSetStringSpan, caller: spanBack, sun.text.normalizer.UnicodeSet
Method to inline: needsStringSpanUTF16, sun.text.normalizer.UnicodeSetStringSpan, caller: span, sun.text.normalizer.UnicodeSet
Method to inline: charCount, java.lang.Character, caller: spanBack, sun.text.normalizer.UnicodeSet
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList
Method to inline: charCount, java.lang.Character, caller: spanCodePointsAndCount, sun.text.normalizer.UnicodeSet
Method to inline: nonNull, java.util.Objects, caller: getDisplayName, sun.util.locale.provider.TimeZoneNameProviderImpl
Method to inline: nonNull, java.util.Objects, caller: getDisplayNameArray, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: <init>, java.util.ImmutableCollections$Set12, caller: of, java.util.Set
Method to inline: emptySet, java.util.ImmutableCollections, caller: of, java.util.Set
Method to inline: nonNull, java.util.Objects, caller: getGenericDisplayName, sun.util.locale.provider.TimeZoneNameProviderImpl
Method to inline: nonNull, java.util.Objects, caller: exists, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: nonNull, java.util.Objects, caller: exists, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: getComponentType, java.lang.Class, caller: toArray, java.util.AbstractCollection
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder, caller: forLanguageTag, java.util.Locale
Method to inline: getAdapterPreference, sun.util.locale.provider.LocaleProviderAdapter, caller: deriveFallbackName, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: getScript, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: empty, java.util.Optional, caller: retrieveInteger, sun.util.cldr.CLDRCalendarDataProviderImpl
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getCalendarData, sun.util.locale.provider.LocaleResources
Method to inline: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getCalendarData, sun.util.resources.LocaleData
Method to inline: <init>, sun.util.locale.LanguageTag, caller: parse, sun.util.locale.LanguageTag
Method to inline: emptyList, java.util.Collections, caller: <init>, sun.util.locale.LanguageTag
Method to inline: emptyList, java.util.Collections, caller: <init>, sun.util.locale.LanguageTag
Method to inline: emptyList, java.util.Collections, caller: <init>, sun.util.locale.LanguageTag
Method to inline: <init>, java.util.HashSet, caller: setExtensions, sun.util.locale.InternalLocaleBuilder
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: setExtensions, sun.util.locale.InternalLocaleBuilder
Method to inline: isNull, java.util.Objects, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: isNull, java.util.Objects, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: trace, sun.util.locale.provider.LocaleResources, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parse, sun.util.locale.LanguageTag
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parse, sun.util.locale.LanguageTag
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: parse, sun.util.locale.LanguageTag
Method to inline: trace, sun.util.locale.provider.LocaleResources, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, java.util.HashSet, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, java.text.MessageFormat, caller: format, java.text.MessageFormat
Method to inline: <init>, java.text.Format, caller: <init>, java.text.MessageFormat
Method to inline: <init>, java.util.Formatter, caller: <init>, java.util.Formatter
Method to inline: getTextResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: setSupplementary, sun.util.resources.LocaleData
Method to inline: <init>, sun.util.resources.LocaleData$2, caller: getSupplementary, sun.util.resources.LocaleData
Method to inline: emptySet, java.util.Collections, caller: keySet, java.util.Collections$EmptyMap
Method to inline: <init>, java.util.Collections$UnmodifiableCollection, caller: <init>, java.util.Collections$UnmodifiableSet
Method to inline: <init>, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: <init>, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.stream.AbstractPipeline, caller: <init>, java.util.stream.ReferencePipeline
Method to inline: <init>, java.util.stream.PipelineHelper, caller: <init>, java.util.stream.AbstractPipeline
Method to inline: <init>, sun.util.locale.Extension, caller: <init>, sun.util.locale.UnicodeLocaleExtension
Method to inline: emptySet, java.util.Collections, caller: <init>, sun.util.locale.UnicodeLocaleExtension
Method to inline: emptyMap, java.util.Collections, caller: <init>, sun.util.locale.UnicodeLocaleExtension
Method to inline: <init>, java.util.ImmutableCollections$Set12$1, caller: iterator, java.util.ImmutableCollections$Set12
Method to inline: <init>, java.util.stream.ReferencePipeline$2, caller: filter, java.util.stream.ReferencePipeline
Method to inline: size, java.util.ImmutableCollections$Set12, caller: <init>, java.util.ImmutableCollections$Set12$1
Method to inline: <init>, java.util.TreeMap, caller: <init>, java.util.TreeSet
Method to inline: <init>, java.util.TreeSet, caller: <init>, java.util.TreeSet
Method to inline: <init>, sun.util.locale.provider.TimeZoneNameProviderImpl, caller: <init>, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: emptySet, java.util.Collections, caller: getUnicodeLocaleKeys, sun.util.locale.UnicodeLocaleExtension
Method to inline: ordinal, java.lang.Enum, caller: toString, java.time.format.DateTimeFormatterBuilder$SettingsParser
Method to inline: <init>, java.util.TreeMap$KeyIterator, caller: keyIterator, java.util.TreeMap
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getCurrencyName, sun.util.locale.provider.LocaleResources
Method to inline: <init>, java.util.TreeMap$PrivateEntryIterator, caller: <init>, java.util.TreeMap$KeyIterator
Method to inline: emptySet, java.util.Collections, caller: entrySet, java.util.Collections$EmptyMap
Method to inline: <init>, java.util.AbstractMap$SimpleImmutableEntry, caller: entrySet, java.util.Collections$SingletonMap
Method to inline: setMaxLength, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getCurrencyNames, sun.util.resources.LocaleData
Method to inline: getID, sun.util.locale.Extension, caller: getID, sun.util.locale.UnicodeLocaleExtension
Method to inline: <init>, java.util.Collections$SingletonSet, caller: singleton, java.util.Collections
Method to inline: <init>, java.util.MissingResourceException, caller: getCached, com.oracle.svm.core.jdk.LocalizationSupport
Method to inline: <init>, sun.util.locale.provider.TimeZoneNameProviderImpl, caller: lambda$getTimeZoneNameProvider$8, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: setMaxLength, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.HashMap$HashMapSpliterator, caller: <init>, java.util.HashMap$KeySpliterator
Method to inline: getKey, java.util.HashMap$Node, caller: next, java.util.LinkedHashMap$LinkedKeyIterator
Method to inline: <init>, java.text.FieldPosition, caller: format, java.text.Format
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.AbstractSequentialList
Method to inline: getComponentType, java.lang.Class, caller: toArray, java.util.LinkedList
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.LinkedList$Node, caller: linkLast, java.util.LinkedList
Method to inline: isTrailSurrogate, sun.text.normalizer.UTF16, caller: spanOne, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanOne, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry, caller: contains, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet
Method to inline: isLeadSurrogate, sun.text.normalizer.UTF16, caller: spanOneBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanOneBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.ArrayList$ListItr, caller: listIterator, java.util.ArrayList
Method to inline: <init>, java.util.ArrayList$Itr, caller: <init>, java.util.ArrayList$ListItr
Method to inline: emptyListIterator, java.util.Collections, caller: listIterator, java.util.Collections$EmptyList
Method to inline: ensureBufferCapacity, sun.text.normalizer.UnicodeSet, caller: retain, sun.text.normalizer.UnicodeSet
Method to inline: <init>, java.util.ImmutableCollections$ListItr, caller: listIterator, java.util.ImmutableCollections$AbstractImmutableList
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: span, sun.text.normalizer.BMPSet
Method to inline: emptyList, java.util.Collections, caller: getExtlangs, sun.util.locale.LanguageTag
Method to inline: <init>, java.util.Collections$UnmodifiableList, caller: unmodifiableList, java.util.Collections
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: span, sun.text.normalizer.BMPSet
Method to inline: <init>, java.util.TreeMap, caller: <init>, java.util.TreeSet
Method to inline: <init>, java.util.TreeSet, caller: <init>, java.util.TreeSet
Method to inline: <init>, java.util.Collections$UnmodifiableList, caller: <init>, java.util.Collections$UnmodifiableRandomAccessList
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanBack, sun.text.normalizer.BMPSet
Method to inline: <init>, java.util.Collections$UnmodifiableCollection, caller: <init>, java.util.Collections$UnmodifiableList
Method to inline: emptyList, java.util.Collections, caller: getVariants, sun.util.locale.LanguageTag
Method to inline: emptyList, java.util.Collections, caller: getExtensions, sun.util.locale.LanguageTag
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanBack, sun.text.normalizer.BMPSet
Method to inline: ensureBufferCapacity, sun.text.normalizer.UnicodeSet, caller: xor, sun.text.normalizer.UnicodeSet
Method to inline: <init>, java.text.MessageFormat, caller: subformat, java.text.MessageFormat
Method to inline: <init>, java.text.Format, caller: <init>, java.text.MessageFormat
Method to inline: buildFromSorted, java.util.TreeMap, caller: addAllForTreeSet, java.util.TreeMap
Method to inline: setMaxLength, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanContainedAndCount, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.TreeMap$Entry, caller: buildFromSorted, java.util.TreeMap
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanContainedAndCount, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.text.AttributedString, caller: createAttributedCharacterIterator, java.text.Format
Method to inline: <init>, java.text.CharacterIteratorFieldDelegate, caller: formatToCharacterIterator, java.text.DecimalFormat
Method to inline: <init>, java.text.AttributedString, caller: createAttributedCharacterIterator, java.text.Format
Method to inline: <init>, java.util.ArrayList, caller: formatToCharacterIterator, java.text.MessageFormat
Method to inline: <init>, java.util.ArrayList, caller: <init>, java.text.CharacterIteratorFieldDelegate
Method to inline: getBigIntegerMultiplier, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getBigDecimalMultiplier, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: size, java.util.ArrayList, caller: formatToCharacterIterator, java.text.MessageFormat
Method to inline: <init>, java.math.BigDecimal, caller: getBigDecimalMultiplier, java.text.DecimalFormat
Method to inline: size, java.util.ArrayList, caller: formatToCharacterIterator, java.text.MessageFormat
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigDecimal
Method to inline: isNaN, java.lang.Double, caller: format, java.text.DecimalFormat
Method to inline: getNegativePrefixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: getPositivePrefixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: extendDigits, java.text.DigitList, caller: set, java.text.DigitList
Method to inline: getNegativeSuffixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: getNegativePrefixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: getChars, java.lang.String, caller: set, java.text.DigitList
Method to inline: getPositiveSuffixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: getPositivePrefixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: <init>, java.math.BigDecimal, caller: multiply, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: multiply, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: multiply, java.math.BigDecimal
Method to inline: ordinal, java.lang.Enum, caller: shouldRoundUp, java.text.DigitList
Method to inline: getNegativeSuffixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: getPositiveSuffixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: extendDigits, java.text.DigitList, caller: set, java.text.DigitList
Method to inline: checkAndSetFastPathStatus, java.text.DecimalFormat, caller: fastFormat, java.text.DecimalFormat
Method to inline: isFinite, java.lang.Double, caller: fastFormat, java.text.DecimalFormat
Method to inline: <init>, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: copySign, java.lang.Math, caller: fastFormat, java.text.DecimalFormat
Method to inline: setBeginIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: setEndIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: getDataChars, java.text.DigitList, caller: set, java.text.DigitList
Method to inline: getChars, java.lang.String, caller: set, java.text.DigitList
Method to inline: setBeginIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: setEndIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: <init>, java.text.DecimalFormat$FastPathData, caller: resetFastPathData, java.text.DecimalFormat
Method to inline: exactRoundUp, java.text.DecimalFormat, caller: fastDoubleFormat, java.text.DecimalFormat
Method to inline: getTemporal, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$InstantPrinterParser
Method to inline: getTemporal, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$InstantPrinterParser
Method to inline: insert, java.lang.AbstractStringBuilder, caller: insert, java.lang.StringBuilder
Method to inline: getSecond, java.time.LocalTime, caller: getSecond, java.time.LocalDateTime
Method to inline: getYear, java.time.LocalDate, caller: getYear, java.time.LocalDateTime
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: shift, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: getCalendar, java.text.DateFormat, caller: getInstance, sun.util.locale.provider.DateFormatProviderImpl
Method to inline: setTimeZone, java.text.DateFormat, caller: getInstance, sun.util.locale.provider.DateFormatProviderImpl
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getDateTimePattern, sun.util.locale.provider.LocaleResources
Method to inline: <init>, java.text.AttributedString, caller: getIterator, java.text.CharacterIteratorFieldDelegate
Method to inline: <init>, java.util.Collections$1, caller: singletonIterator, java.util.Collections
Method to inline: createRunAttributeDataVectors, java.text.AttributedString, caller: setAttributes, java.text.AttributedString
Method to inline: equals, java.lang.Object, caller: equals, java.text.AttributedCharacterIterator$Attribute
Method to inline: <init>, java.util.Date, caller: format, java.text.DateFormat
Method to inline: <init>, java.text.CharacterIteratorFieldDelegate, caller: formatToCharacterIterator, java.text.SimpleDateFormat
Method to inline: size, java.util.ImmutableCollections$SetN, caller: <init>, java.util.ImmutableCollections$SetN$SetNIterator
Method to inline: hasNext, java.util.ImmutableCollections$SetN$SetNIterator, caller: next, java.util.ImmutableCollections$SetN$SetNIterator
Method to inline: <init>, java.util.ArrayList$ListItr, caller: listIterator, java.util.ArrayList
Method to inline: applyPatternImpl, java.text.SimpleDateFormat, caller: applyPattern, java.text.SimpleDateFormat
Method to inline: initializeCalendar, java.text.SimpleDateFormat, caller: <init>, java.text.SimpleDateFormat
Method to inline: <init>, java.util.AbstractList$ListItr, caller: listIterator, java.util.AbstractList
Method to inline: <init>, java.text.Format, caller: <init>, java.text.DateFormat
Method to inline: <init>, java.util.AbstractList$Itr, caller: <init>, java.util.AbstractList$ListItr
Method to inline: createRunAttributeDataVectors, java.text.AttributedString, caller: addAttributeImpl, java.text.AttributedString
Method to inline: <init>, java.text.FieldPosition, caller: <init>, java.text.FieldPosition
Method to inline: <init>, java.util.stream.PipelineHelper, caller: <init>, java.util.stream.AbstractPipeline
Method to inline: <init>, sun.util.locale.provider.DateFormatProviderImpl, caller: lambda$getDateFormatProvider$2, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: <init>, java.text.NumberFormat, caller: <init>, java.text.ChoiceFormat
Method to inline: <init>, jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer, caller: readJavaFormatString, jdk.internal.math.FloatingDecimal
Method to inline: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry, caller: next, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
Method to inline: <init>, java.text.FieldPosition$Delegate, caller: getFieldDelegate, java.text.FieldPosition
Method to inline: fixAfterDeletion, java.util.TreeMap, caller: deleteEntry, java.util.TreeMap
Method to inline: <init>, java.util.HashSet, caller: <init>, java.text.AttributedString
Method to inline: <init>, java.text.AttributedString, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: <init>, java.text.AttributedString, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: sourceSpliterator, java.util.stream.AbstractPipeline
Method to inline: fixAfterDeletion, java.util.TreeMap, caller: deleteEntry, java.util.TreeMap
Method to inline: isNaN, java.lang.Double, caller: nextDouble, java.text.ChoiceFormat
Method to inline: <init>, java.util.stream.ForEachOps$ForEachOp$OfRef, caller: makeRef, java.util.stream.ForEachOps
Method to inline: <init>, java.util.Date, caller: formatToCharacterIterator, java.text.SimpleDateFormat
Method to inline: <init>, java.util.stream.ForEachOps$ForEachOp, caller: <init>, java.util.stream.ForEachOps$ForEachOp$OfRef
Method to inline: getChars, java.lang.AbstractStringBuilder, caller: getChars, java.lang.StringBuilder
Method to inline: <init>, java.util.Date, caller: getTime, java.util.Calendar
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: getChars, java.lang.AbstractStringBuilder
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: <init>, jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer, caller: parseHexString, jdk.internal.math.FloatingDecimal
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterDeletion, java.util.TreeMap
Method to inline: isStandaloneStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isNarrowFormatStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isNarrowFormatStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: toStandaloneStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isStandaloneStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isFieldSet, java.util.Calendar, caller: checkDisplayNameParams, java.util.Calendar
Method to inline: <init>, java.util.MissingResourceException, caller: getObject, java.util.ResourceBundle
Method to inline: <init>, java.util.ListResourceBundle, caller: <init>, sun.text.resources.BreakIteratorInfo
Method to inline: <init>, java.util.HashSet, caller: keySet, java.util.ResourceBundle
Method to inline: <init>, java.util.ResourceBundle, caller: <init>, java.util.ListResourceBundle
Method to inline: replace, java.lang.String, caller: handleGetObject, sun.util.resources.BreakIteratorResourceBundle
Method to inline: addSuppressed, java.lang.Throwable, caller: handleGetObject, sun.util.resources.BreakIteratorResourceBundle
Method to inline: get, com.oracle.svm.core.util.LazyFinalReference, caller: getPackageName, java.lang.Class
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.Vector
Method to inline: getTimeImpl, java.util.Date, caller: getTime, java.util.Date
Method to inline: getDefaultRef, java.util.TimeZone, caller: normalize, java.util.Date
Method to inline: <init>, java.util.Vector$Itr, caller: iterator, java.util.Vector
Method to inline: getString, java.text.AttributedString$AttributedStringIterator, caller: equals, java.text.AttributedString$AttributedStringIterator
Method to inline: <init>, java.util.Vector$ListItr, caller: listIterator, java.util.Vector
Method to inline: <init>, java.util.Vector$Itr, caller: <init>, java.util.Vector$ListItr
Method to inline: getDefaultRef, java.util.TimeZone, caller: normalize, java.util.Date
Method to inline: evaluateParallel, java.util.stream.ForEachOps$ForEachOp, caller: evaluateParallel, java.util.stream.ForEachOps$ForEachOp$OfRef
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.Vector
Method to inline: <init>, java.util.stream.ReferencePipeline$2$1, caller: opWrapSink, java.util.stream.ReferencePipeline$2
Method to inline: <init>, java.util.stream.Sink$ChainedReference, caller: <init>, java.util.stream.ReferencePipeline$2$1
Method to inline: getTimeInMillis, java.util.Calendar, caller: normalize, java.util.Date
Method to inline: <init>, java.text.AttributedString$AttributeMap, caller: getAttributes, java.text.AttributedString$AttributedStringIterator
Method to inline: <init>, java.util.HashSet, caller: getAllAttributeKeys, java.text.AttributedString$AttributedStringIterator
Method to inline: <init>, java.util.stream.ForEachOps$ForEachOrderedTask, caller: evaluateParallel, java.util.stream.ForEachOps$ForEachOp
Method to inline: <init>, java.util.HashSet, caller: getAllAttributeKeys, java.text.AttributedString$AttributedStringIterator
Method to inline: <init>, java.util.stream.ForEachOps$ForEachTask, caller: evaluateParallel, java.util.stream.ForEachOps$ForEachOp
Method to inline: <init>, java.util.Dictionary, caller: <init>, java.util.Hashtable
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachTask
Method to inline: <init>, java.util.concurrent.ForkJoinTask, caller: <init>, java.util.concurrent.CountedCompleter
Method to inline: isNaN, java.lang.Float, caller: <init>, java.util.Hashtable
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachOrderedTask
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.text.AttributedString$AttributeMap
Method to inline: getDefaultRef, java.util.TimeZone, caller: getCalendarSystem, java.util.Date
Method to inline: <init>, java.util.GregorianCalendar, caller: <init>, java.util.GregorianCalendar
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: copyInto, java.util.stream.AbstractPipeline
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: copyInto, java.util.stream.AbstractPipeline
Method to inline: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getName, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getName, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: leftInplaceSub, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: multByPow52, jdk.internal.math.FDBigInteger
Method to inline: size, jdk.internal.math.FDBigInteger, caller: multByPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: multByPow52, jdk.internal.math.FDBigInteger
Method to inline: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, caller: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: rightInplaceSub, jdk.internal.math.FDBigInteger
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getJavaTimeNames, sun.util.locale.provider.LocaleResources
Method to inline: toStyleName, sun.util.locale.provider.CalendarNameProviderImpl, caller: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getCalendarNames, sun.util.locale.provider.LocaleResources
Method to inline: toStyleName, sun.util.locale.provider.CalendarNameProviderImpl, caller: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: <init>, java.io.ByteArrayInputStream, caller: getResourceAsStream, java.lang.Module
Method to inline: <init>, java.util.HashSet, caller: entrySet, java.text.AttributedString$AttributeMap
Method to inline: isNamed, java.lang.Module, caller: toString, java.lang.Module
Method to inline: <init>, java.text.AttributeEntry, caller: entrySet, java.text.AttributedString$AttributeMap
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.concurrent.ConcurrentHashMap
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: doInvoke, java.util.concurrent.ForkJoinTask
Method to inline: copy, java.lang.reflect.Constructor, caller: copyConstructor, java.lang.reflect.ReflectAccess
Method to inline: <init>, java.lang.reflect.Constructor, caller: copy, java.lang.reflect.Constructor
Method to inline: <init>, java.util.concurrent.ForkJoinTask$ExceptionNode, caller: recordExceptionalCompletion, java.util.concurrent.ForkJoinTask
Method to inline: abnormalCompletion, java.util.concurrent.ForkJoinTask, caller: recordExceptionalCompletion, java.util.concurrent.ForkJoinTask
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: tryExternalHelp, java.util.concurrent.ForkJoinTask
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: tryExternalHelp, java.util.concurrent.ForkJoinTask
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: tryExternalHelp, java.util.concurrent.ForkJoinTask
Method to inline: isExceptionalStatus, java.util.concurrent.ForkJoinTask, caller: internalPropagateException, java.util.concurrent.CountedCompleter
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: compute, java.util.stream.ForEachOps$ForEachTask
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachTask
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: fork, java.util.concurrent.ForkJoinTask
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachOrderedTask
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: exactOutputSizeIfKnown, java.util.stream.AbstractPipeline
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: exactOutputSizeIfKnown, java.util.stream.AbstractPipeline
Method to inline: <init>, java.util.stream.Nodes$SpinedNodeBuilder, caller: builder, java.util.stream.Nodes
Method to inline: <init>, java.util.stream.SpinedBuffer, caller: <init>, java.util.stream.Nodes$SpinedNodeBuilder
Method to inline: <init>, java.util.stream.AbstractSpinedBuffer, caller: <init>, java.util.stream.SpinedBuffer
Method to inline: getComponentType, java.lang.Class, caller: computePackageName, java.lang.Class
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: equals, java.lang.reflect.Constructor
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: equals, java.lang.reflect.Constructor
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: getName, java.lang.reflect.Constructor
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: hashCode, java.lang.reflect.Constructor
Method to inline: constructorModifiers, java.lang.reflect.Modifier, caller: toString, java.lang.reflect.Constructor
Method to inline: <init>, java.util.concurrent.AbstractExecutorService, caller: <init>, java.util.concurrent.ForkJoinPool
Method to inline: localInit, java.util.concurrent.ThreadLocalRandom, caller: externalPush, java.util.concurrent.ForkJoinPool
Method to inline: <init>, java.util.concurrent.ForkJoinPool$WorkQueue, caller: externalPush, java.util.concurrent.ForkJoinPool
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: specificToStringHeader, java.lang.reflect.Constructor
Method to inline: advanceProbe, java.util.concurrent.ThreadLocalRandom, caller: externalPush, java.util.concurrent.ForkJoinPool
Method to inline: getRuntime, java.lang.Runtime, caller: <init>, java.util.concurrent.ForkJoinPool
Method to inline: <init>, java.util.ArrayList, caller: toString, java.util.stream.SpinedBuffer
Method to inline: tryAddWorker, java.util.concurrent.ForkJoinPool, caller: signalWork, java.util.concurrent.ForkJoinPool
Method to inline: createWorker, java.util.concurrent.ForkJoinPool, caller: tryAddWorker, java.util.concurrent.ForkJoinPool
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: tryTerminate, java.util.concurrent.ForkJoinPool
Method to inline: getModifiers, java.lang.Class, caller: newInstance, java.lang.reflect.Constructor
Method to inline: <init>, com.oracle.svm.core.jdk.GetCallerClassVisitor, caller: getCallerClass, com.oracle.svm.core.jdk.StackTraceUtils
Method to inline: <init>, com.oracle.svm.core.stack.JavaStackFrameVisitor, caller: <init>, com.oracle.svm.core.jdk.GetCallerClassVisitor
Method to inline: isProtected, java.lang.reflect.Modifier, caller: verifyAccess, java.lang.reflect.AccessibleObject
Method to inline: slowVerifyAccess, java.lang.reflect.AccessibleObject, caller: verifyAccess, java.lang.reflect.AccessibleObject
Method to inline: isNamed, java.lang.Module, caller: logIfExportedForIllegalAccess, java.lang.reflect.AccessibleObject
Method to inline: isNamed, java.lang.Module, caller: logIfExportedForIllegalAccess, java.lang.reflect.AccessibleObject
Method to inline: isPublic, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isPublic, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isPrivate, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isProtected, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isPrivate, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isProtected, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: getSuperclass, java.lang.Class, caller: isSubclassOf, jdk.internal.reflect.Reflection
Method to inline: getModifiers, java.lang.Class, caller: getClassAccessFlags, jdk.internal.reflect.Reflection
Method to inline: isProtected, java.lang.reflect.Modifier, caller: slowVerifyAccess, java.lang.reflect.AccessibleObject
Method to inline: isNamed, java.lang.Module, caller: newIllegalAccessException, jdk.internal.reflect.Reflection
Method to inline: isNamed, java.lang.Module, caller: newIllegalAccessException, jdk.internal.reflect.Reflection
Method to inline: isNamed, java.lang.Module, caller: newIllegalAccessException, jdk.internal.reflect.Reflection
Method to inline: <init>, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1, caller: newThread, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory
Method to inline: releaseFence, java.lang.invoke.VarHandle, caller: growArray, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: getClassLoader0, java.lang.Class, caller: getClassLoader, java.lang.Class
Method to inline: poll, java.util.concurrent.ForkJoinPool$WorkQueue, caller: cancelAll, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: getComponentType, java.lang.Class, caller: reflectiveTypeCheck, java.lang.invoke.VarHandleObjects$Array
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: helpCC, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: cancelIgnoringExceptions, java.util.concurrent.ForkJoinTask, caller: cancelAll, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: abnormalCompletion, java.util.concurrent.ForkJoinTask, caller: cancel, java.util.concurrent.ForkJoinTask
Method to inline: <init>, java.util.concurrent.ForkJoinWorkerThread, caller: run, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1
Method to inline: setContextClassLoader, java.lang.Thread, caller: <init>, java.util.concurrent.ForkJoinWorkerThread
Method to inline: setDaemon, java.lang.Thread, caller: registerWorker, java.util.concurrent.ForkJoinPool
Method to inline: <init>, java.util.concurrent.ForkJoinPool$WorkQueue, caller: registerWorker, java.util.concurrent.ForkJoinPool
Method to inline: checkAccess, java.lang.Thread, caller: setDaemon, java.lang.Thread
Method to inline: coder, java.lang.String, caller: concat, java.lang.String
Method to inline: coder, java.lang.String, caller: concat, java.lang.String
Method to inline: <init>, java.lang.String, caller: concat, java.lang.String
Method to inline: equals, java.lang.Object, caller: containsAllLimits, java.security.AccessControlContext
Method to inline: <init>, java.lang.String, caller: concat, java.lang.String
Method to inline: <init>, jdk.internal.module.IllegalAccessLogger$Usage, caller: log, jdk.internal.module.IllegalAccessLogger
Method to inline: lineSeparator, java.lang.System, caller: loudWarning, jdk.internal.module.IllegalAccessLogger
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: toShortString, java.lang.reflect.Constructor
Method to inline: <init>, java.lang.Thread, caller: <init>, java.lang.Thread
Method to inline: <init>, java.util.WeakHashMap$EntrySet, caller: entrySet, java.util.WeakHashMap
Method to inline: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, caller: walk, java.lang.StackWalker
Method to inline: getThreadGroup, java.lang.Thread, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: invalidate, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, caller: walk, java.lang.StackWalker
Method to inline: toTarget, com.oracle.svm.core.thread.JavaThreads, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: invalidate, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, caller: walk, java.lang.StackWalker
Method to inline: isDaemon, java.lang.Thread, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: getPriority, java.lang.Thread, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: checkAccess, java.lang.Thread, caller: setUncaughtExceptionHandler, java.lang.Thread
Method to inline: checkAccess, java.lang.Thread, caller: setName, java.lang.Thread
Method to inline: fullFence, java.lang.invoke.VarHandle, caller: push, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: checkAccess, java.lang.Thread, caller: setPriority, java.lang.Thread
Method to inline: fromTarget, com.oracle.svm.core.thread.JavaThreads, caller: setNativeName, java.lang.Thread
Method to inline: getThreadGroup, java.lang.Thread, caller: setPriority, java.lang.Thread
Method to inline: getMaxPriority, java.lang.ThreadGroup, caller: setPriority, java.lang.Thread
Method to inline: getMaxPriority, java.lang.ThreadGroup, caller: setPriority, java.lang.Thread
Method to inline: setPriority0, java.lang.Thread, caller: setPriority, java.lang.Thread
Method to inline: getTable, java.util.WeakHashMap, caller: put, java.util.WeakHashMap
Method to inline: indexFor, java.util.WeakHashMap, caller: put, java.util.WeakHashMap
Method to inline: indexFor, java.util.WeakHashMap, caller: expungeStaleEntries, java.util.WeakHashMap
Method to inline: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, caller: <init>, java.lang.Thread
Method to inline: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, caller: <init>, java.lang.Thread
Method to inline: <init>, java.util.WeakHashMap$Entry, caller: put, java.util.WeakHashMap
Method to inline: getTable, java.util.WeakHashMap, caller: get, java.util.WeakHashMap
Method to inline: indexFor, java.util.WeakHashMap, caller: get, java.util.WeakHashMap
Method to inline: getTable, java.util.WeakHashMap, caller: resize, java.util.WeakHashMap
Method to inline: newTable, java.util.WeakHashMap, caller: resize, java.util.WeakHashMap
Method to inline: start0, java.lang.Thread, caller: start, java.lang.Thread
Method to inline: getCodeSource, java.security.ProtectionDomain, caller: codeSource, jdk.internal.module.IllegalAccessLogger
Method to inline: getLocation, java.security.CodeSource, caller: codeSource, jdk.internal.module.IllegalAccessLogger
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: awaitJoin, java.util.concurrent.ForkJoinPool
Method to inline: yellowAndRedZoneSize, com.oracle.svm.core.graal.snippets.StackOverflowCheckImpl, caller: start0, java.lang.Thread
Method to inline: fromTarget, com.oracle.svm.core.thread.JavaThreads, caller: start0, java.lang.Thread
Method to inline: startThread, com.oracle.svm.core.thread.JavaThreads, caller: start0, java.lang.Thread
Method to inline: addSuppressed, java.lang.Throwable, caller: setNativeName, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: indexFor, java.util.WeakHashMap, caller: transfer, java.util.WeakHashMap
Method to inline: mix32, java.util.concurrent.ThreadLocalRandom, caller: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: getPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: getTable, java.util.WeakHashMap, caller: getEntry, java.util.WeakHashMap
Method to inline: indexFor, java.util.WeakHashMap, caller: getEntry, java.util.WeakHashMap
Method to inline: isDaemon, java.lang.Thread, caller: prepareStartData, com.oracle.svm.core.thread.JavaThreads
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: setPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: setPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: hasThreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: getGlobalHandles, com.oracle.svm.core.handles.ObjectHandlesFeature$ObjectHandlesSupportImpl, caller: getGlobal, org.graalvm.nativeimage.ObjectHandles
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: runWorker, java.util.concurrent.ForkJoinPool
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: awaitJoin, java.util.concurrent.ForkJoinPool
Method to inline: <init>, java.util.stream.WhileOps$1Op, caller: makeDropWhileRef, java.util.stream.WhileOps
Method to inline: internalWait, java.util.concurrent.ForkJoinTask, caller: awaitJoin, java.util.concurrent.ForkJoinPool
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkUntil, java.util.concurrent.locks.LockSupport
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkUntil, java.util.concurrent.locks.LockSupport
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: nextLocalTask, java.util.concurrent.ForkJoinPool$WorkQueue, caller: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: createWorker, java.util.concurrent.ForkJoinPool, caller: tryCompensate, java.util.concurrent.ForkJoinPool
Method to inline: releaseFence, java.lang.invoke.VarHandle, caller: tryRemoveAndExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: tryRemoveAndExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: poll, java.util.concurrent.ForkJoinPool$WorkQueue, caller: nextLocalTask, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: poll, java.util.concurrent.ForkJoinPool$WorkQueue, caller: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: exit, java.lang.Thread, caller: exit, com.oracle.svm.core.thread.JavaThreads
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: exit, com.oracle.svm.core.thread.JavaThreads
Method to inline: singleton, com.oracle.svm.core.jdk.SubstrateThreadMXBean, caller: noteThreadFinish, com.oracle.svm.core.jdk.ManagementSupport
Method to inline: singleton, com.oracle.svm.core.jdk.SubstrateThreadMXBean, caller: noteThreadStart, com.oracle.svm.core.jdk.ManagementSupport
Method to inline: <init>, java.util.LinkedHashMap, caller: <init>, jdk.internal.module.IllegalAccessLogger$Usages
Method to inline: isDaemon, java.lang.Thread, caller: noteThreadFinish, com.oracle.svm.core.jdk.SubstrateThreadMXBean
Method to inline: set, java.util.concurrent.atomic.AtomicInteger, caller: noteThreadStart, com.oracle.svm.core.jdk.SubstrateThreadMXBean
Method to inline: <init>, java.util.HashMap, caller: <init>, java.util.LinkedHashMap
Method to inline: isDaemon, java.lang.Thread, caller: noteThreadStart, com.oracle.svm.core.jdk.SubstrateThreadMXBean
Method to inline: get, com.oracle.svm.core.util.LazyFinalReference, caller: getProtectionDomain, java.lang.Class
Method to inline: <init>, java.util.WeakHashMap$EntryIterator, caller: iterator, java.util.WeakHashMap$EntrySet
Method to inline: castingIdentity, java.util.stream.Collectors, caller: <init>, java.util.stream.Collectors$CollectorImpl
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: opEvaluateParallelLazy, java.util.stream.WhileOps$1Op
Method to inline: <init>, java.util.stream.Collectors$CollectorImpl, caller: <init>, java.util.stream.Collectors$CollectorImpl
Method to inline: castingArray, java.util.stream.Nodes, caller: opEvaluateParallelLazy, java.util.stream.WhileOps$1Op
Method to inline: <init>, java.util.stream.SliceOps$1, caller: makeRef, java.util.stream.SliceOps
Method to inline: <init>, java.util.stream.WhileOps$DropWhileTask, caller: opEvaluateParallel, java.util.stream.WhileOps$1Op
Method to inline: <init>, java.util.stream.AbstractTask, caller: <init>, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.AbstractTask
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: <init>, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, caller: tryAdvance, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator
Method to inline: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, caller: tryAdvance, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator
Method to inline: <init>, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, caller: <init>, java.util.stream.StreamSpliterators$WrappingSpliterator
Method to inline: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping
Method to inline: <init>, java.util.concurrent.atomic.AtomicBoolean, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator
Method to inline: <init>, java.security.Permissions, caller: lambda$static$0, java.lang.Class
Method to inline: setPendingCount, java.util.concurrent.CountedCompleter, caller: compute, java.util.stream.AbstractTask
Method to inline: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef
Method to inline: toStackTraceElement, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, caller: toString, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl
Method to inline: toStreamFlags, java.util.stream.StreamOpFlag, caller: characteristics, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: toCharacteristics, java.util.stream.StreamOpFlag, caller: characteristics, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: castingArray, java.util.stream.Nodes, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: <init>, java.util.stream.SliceOps$SliceTask, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: <init>, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, caller: <init>, java.util.stream.StreamSpliterators$WrappingSpliterator
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: isOrdered, java.util.stream.AbstractPipeline
Method to inline: <init>, java.util.stream.WhileOps$1Op$1OpSink, caller: opWrapSink, java.util.stream.WhileOps$1Op
Method to inline: <init>, java.util.stream.Sink$ChainedReference, caller: <init>, java.util.stream.WhileOps$1Op$1OpSink
Method to inline: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping
Method to inline: <init>, java.util.stream.AbstractShortCircuitTask, caller: <init>, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.util.stream.AbstractTask, caller: <init>, java.util.stream.AbstractShortCircuitTask
Method to inline: isLeaf, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, java.util.concurrent.atomic.AtomicReference, caller: <init>, java.util.stream.AbstractShortCircuitTask
Method to inline: <init>, java.security.PermissionCollection, caller: <init>, java.security.Permissions
Method to inline: <init>, java.util.stream.ReduceOps$3, caller: makeRef, java.util.stream.ReduceOps
Method to inline: <init>, java.util.stream.ReduceOps$ReduceOp, caller: <init>, java.util.stream.ReduceOps$3
Method to inline: isPreserved, java.util.stream.StreamOpFlag, caller: doLeaf, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.AbstractTask
Method to inline: setLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.WhileOps$DropWhileTask
Method to inline: set, java.util.concurrent.atomic.AtomicBoolean, caller: tryAdvance, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping
Method to inline: asS4, org.graalvm.compiler.core.common.util.TypeConversion, caller: decodeBci, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: onCompletion, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.WhileOps$DropWhileTask
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: lineSeparator, java.lang.System, caller: lambda$log$4, jdk.internal.module.IllegalAccessLogger
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: getName, java.lang.Module, caller: isJavaBase, jdk.internal.module.IllegalAccessLogger
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: getCompleter, java.util.concurrent.CountedCompleter, caller: getParent, java.util.stream.AbstractTask
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, java.io.File, caller: lambda$static$0, java.lang.Class
Method to inline: <init>, java.util.Spliterators$ArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: <init>, java.util.stream.SpinedBuffer, caller: initPartialTraversalState, java.util.stream.StreamSpliterators$WrappingSpliterator
Method to inline: ordinal, java.lang.Enum, caller: conc, java.util.stream.Nodes
Method to inline: <init>, java.io.File, caller: getAbsoluteFile, java.io.File
Method to inline: isInvalid, java.io.File, caller: isDirectory, java.io.File
Method to inline: isOpaque, java.net.URI, caller: hashCode, java.net.URI
Method to inline: setPendingCount, java.util.concurrent.CountedCompleter, caller: compute, java.util.stream.AbstractShortCircuitTask
Method to inline: <init>, java.util.stream.Sink$ChainedReference, caller: <init>, java.util.stream.SliceOps$1$1
Method to inline: getProtocol, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: getHost, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: getPort, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: <init>, java.util.Spliterators$ArraySpliterator, caller: trySplit, java.util.Spliterators$ArraySpliterator
Method to inline: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator, caller: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef
Method to inline: getFile, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: <init>, java.security.Permissions$1, caller: getPermissionCollection, java.security.Permissions
Method to inline: isOpaque, java.net.URI, caller: equals, java.net.URI
Method to inline: isOpaque, java.net.URI, caller: equals, java.net.URI
Method to inline: isSet, java.security.Policy, caller: toString, java.security.ProtectionDomain
Method to inline: <init>, java.security.ProtectionDomain$Key, caller: <init>, java.security.ProtectionDomain
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: getLocalResult, java.util.stream.AbstractShortCircuitTask
Method to inline: <init>, java.util.stream.StreamSpliterators$SliceSpliterator, caller: <init>, java.util.stream.StreamSpliterators$SliceSpliterator$OfRef
Method to inline: <init>, java.util.concurrent.atomic.AtomicLong, caller: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator
Method to inline: isOpaque, java.net.URI, caller: equals, java.net.URI
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: truncate, java.util.stream.Nodes$ConcNode
Method to inline: seeAllp, java.security.ProtectionDomain, caller: toString, java.security.ProtectionDomain
Method to inline: getShape, java.util.stream.Node, caller: truncate, java.util.stream.Nodes$ConcNode
Method to inline: ordinal, java.lang.Enum, caller: emptyNode, java.util.stream.Nodes
Method to inline: <init>, java.util.stream.AbstractShortCircuitTask, caller: <init>, java.util.stream.SliceOps$SliceTask
Method to inline: isLeaf, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.net.URI, caller: <init>, java.net.URI
Method to inline: <init>, java.util.stream.ReduceOps$ReduceTask, caller: evaluateParallel, java.util.stream.ReduceOps$ReduceOp
Method to inline: <init>, java.util.stream.AbstractTask, caller: <init>, java.util.stream.ReduceOps$ReduceTask
Method to inline: <init>, java.util.stream.Nodes$LongSpinedNodeBuilder, caller: longBuilder, java.util.stream.Nodes
Method to inline: addSuppressed, java.lang.Throwable, caller: realpath, com.oracle.svm.core.posix.PosixProcessPropertiesSupport
Method to inline: setLocalResult, java.util.stream.AbstractShortCircuitTask, caller: onCompletion, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.util.stream.ReduceOps$3ReducingSink, caller: makeSink, java.util.stream.ReduceOps$3
Method to inline: <init>, java.util.stream.ReduceOps$Box, caller: <init>, java.util.stream.ReduceOps$3ReducingSink
Method to inline: onCompletion, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.util.stream.Nodes$IntSpinedNodeBuilder, caller: intBuilder, java.util.stream.Nodes
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: getExactSizeIfKnown, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: isOpaque, java.net.URI, caller: compareTo, java.net.URI
Method to inline: isOpaque, java.net.URI, caller: compareTo, java.net.URI
Method to inline: isOpaque, java.net.URI, caller: compareTo, java.net.URI
Method to inline: <init>, java.util.stream.Nodes$DoubleSpinedNodeBuilder, caller: doubleBuilder, java.util.stream.Nodes
Method to inline: setLocalResult, java.util.stream.AbstractTask, caller: setLocalResult, java.util.stream.AbstractShortCircuitTask
Method to inline: isAbsolute, java.net.URI, caller: fromURI, java.net.URL
Method to inline: getScheme, java.net.URI, caller: fromURI, java.net.URL
Method to inline: cancel, java.util.stream.AbstractShortCircuitTask, caller: cancel, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.net.URI$Parser, caller: <init>, java.net.URI
Method to inline: setLocalResult, java.util.stream.AbstractShortCircuitTask, caller: cancel, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.security.ProtectionDomain$1, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: <init>, java.security.Permissions, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: isPreserved, java.util.stream.StreamOpFlag, caller: doLeaf, java.util.stream.SliceOps$SliceTask
Method to inline: isOpaque, java.net.URI, caller: fromURI, java.net.URL
Method to inline: <init>, java.security.PermissionsEnumerator, caller: elements, java.security.Permissions
Method to inline: getRawFragment, java.net.URI, caller: fromURI, java.net.URL
Method to inline: getRawQuery, java.net.URI, caller: fromURI, java.net.URL
Method to inline: match, java.net.URI, caller: quote, java.net.URI
Method to inline: getRawPath, java.net.URI, caller: fromURI, java.net.URL
Method to inline: add, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: getHost, java.net.URI, caller: fromURI, java.net.URL
Method to inline: getPort, java.net.URI, caller: fromURI, java.net.URL
Method to inline: add, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: toString, java.util.stream.Nodes$ConcNode
Method to inline: <init>, java.util.stream.StreamSpliterators$ArrayBuffer$OfRef, caller: forEachRemaining, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef
Method to inline: getName, java.security.Permission, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: <init>, java.util.stream.StreamSpliterators$ArrayBuffer, caller: <init>, java.util.stream.StreamSpliterators$ArrayBuffer$OfRef
Method to inline: size, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: toString, java.util.stream.Nodes$ConcNode
Method to inline: getName, java.security.Permission, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: size, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: size, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: toString, java.net.URI, caller: fromURI, java.net.URL
Method to inline: isOpaque, java.net.URI, caller: defineString, java.net.URI
Method to inline: hasRemaining, java.nio.Buffer, caller: appendEncoded, java.net.URI
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encoderFor, sun.nio.cs.ThreadLocalCoders
Method to inline: isLeaf, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: setLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: getMessage, java.lang.Throwable, caller: getReason, java.net.URISyntaxException
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: <init>, java.util.stream.SpinedBuffer$OfPrimitive, caller: <init>, java.util.stream.SpinedBuffer$OfDouble
Method to inline: onCompletion, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: <init>, java.util.stream.AbstractSpinedBuffer, caller: <init>, java.util.stream.SpinedBuffer$OfPrimitive
Method to inline: emptySpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfRef
Method to inline: <init>, java.util.stream.ReduceOps$ReduceTask, caller: makeChild, java.util.stream.ReduceOps$ReduceTask
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: <init>, java.util.stream.Nodes$InternalNodeSpliterator, caller: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: <init>, java.util.stream.SpinedBuffer$OfInt$1Splitr, caller: spliterator, java.util.stream.SpinedBuffer$OfInt
Method to inline: <init>, java.util.stream.SpinedBuffer$OfDouble$1Splitr, caller: spliterator, java.util.stream.SpinedBuffer$OfDouble
Method to inline: emptyDoubleSpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfDouble
Method to inline: initTryAdvance, java.util.stream.Nodes$InternalNodeSpliterator, caller: tryAdvance, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive
Method to inline: <init>, java.util.Spliterators$LongArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: <init>, java.util.Spliterators$DoubleArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: compare, java.lang.Character, caller: compareTo, java.nio.StringCharBuffer
Method to inline: <init>, java.util.Spliterators$IntArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: emptyIntSpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfInt
Method to inline: scan, java.net.URI$Parser, caller: checkChars, java.net.URI$Parser
Method to inline: <init>, java.util.stream.SpinedBuffer$OfLong$1Splitr, caller: spliterator, java.util.stream.SpinedBuffer$OfLong
Method to inline: emptyLongSpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfLong
Method to inline: <init>, java.util.ArrayDeque, caller: initStack, java.util.stream.Nodes$InternalNodeSpliterator
Method to inline: <init>, java.util.stream.Nodes$LongArrayNode, caller: <init>, java.util.stream.Nodes$LongFixedNodeBuilder
Method to inline: hasMoreElements, java.security.PermissionsEnumerator, caller: nextElement, java.security.PermissionsEnumerator
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.ArrayDeque
Method to inline: <init>, java.util.stream.Nodes$IntArrayNode, caller: <init>, java.util.stream.Nodes$IntFixedNodeBuilder
Method to inline: <init>, java.security.PermissionsHash, caller: apply, java.security.Permissions$1
Method to inline: getSigners, java.lang.Class, caller: getUnresolvedPermissions, java.security.Permissions
Method to inline: getPolicyNoCheck, java.security.Policy, caller: run, java.security.ProtectionDomain$1
Method to inline: <init>, java.util.stream.SpinedBuffer$OfPrimitive, caller: <init>, java.util.stream.SpinedBuffer$OfLong
Method to inline: <init>, java.util.stream.Nodes$InternalNodeSpliterator, caller: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfRef
Method to inline: initTryAdvance, java.util.stream.Nodes$InternalNodeSpliterator, caller: tryAdvance, java.util.stream.Nodes$InternalNodeSpliterator$OfRef
Method to inline: scan, java.net.URI$Parser, caller: parseAuthority, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: parseAuthority, java.net.URI$Parser
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CollectionView, caller: <init>, java.util.concurrent.ConcurrentHashMap$ValuesView
Method to inline: scan, java.net.URI$Parser, caller: parseAuthority, java.net.URI$Parser
Method to inline: <init>, java.util.stream.SpinedBuffer$OfPrimitive, caller: <init>, java.util.stream.SpinedBuffer$OfInt
Method to inline: <init>, java.nio.CharBuffer, caller: <init>, java.nio.CharBuffer
Method to inline: <init>, java.util.stream.Nodes$DoubleArrayNode, caller: <init>, java.util.stream.Nodes$DoubleFixedNodeBuilder
Method to inline: match, java.net.URI, caller: scanEscape, java.net.URI$Parser
Method to inline: match, java.net.URI, caller: scanEscape, java.net.URI$Parser
Method to inline: <init>, java.security.PermissionCollection, caller: <init>, java.security.PermissionsHash
Method to inline: <init>, java.security.AllPermissionCollection, caller: newPermissionCollection, java.security.AllPermission
Method to inline: <init>, java.security.PermissionCollection, caller: <init>, java.security.AllPermissionCollection
Method to inline: match, java.net.URI, caller: scan, java.net.URI$Parser
Method to inline: getUserInfo, java.net.URL, caller: checkExternalForm, sun.net.util.IPAddressUtil
Method to inline: forEach, java.util.stream.Nodes$EmptyNode, caller: forEach, java.util.stream.Nodes$EmptyNode$OfRef
Method to inline: getHost, java.net.URL, caller: checkExternalForm, sun.net.util.IPAddressUtil
Method to inline: parseIPv6Reference, java.net.URI$Parser, caller: parseServer, java.net.URI$Parser
Method to inline: scanHexSeq, java.net.URI$Parser, caller: parseIPv6Reference, java.net.URI$Parser
Method to inline: match, sun.net.util.IPAddressUtil, caller: scan, sun.net.util.IPAddressUtil
Method to inline: scan, java.net.URI$Parser, caller: scanHexSeq, java.net.URI$Parser
Method to inline: parseIPv6Reference, java.net.URI$Parser, caller: parseServer, java.net.URI$Parser
Method to inline: scanHexPost, java.net.URI$Parser, caller: parseIPv6Reference, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: scanHexSeq, java.net.URI$Parser
Method to inline: scanHexSeq, java.net.URI$Parser, caller: scanHexPost, java.net.URI$Parser
Method to inline: match, sun.net.util.IPAddressUtil, caller: scan, sun.net.util.IPAddressUtil
Method to inline: scanHexPost, java.net.URI$Parser, caller: parseIPv6Reference, java.net.URI$Parser
Method to inline: <init>, java.security.PermissionsHash, caller: getUnresolvedPermissions, java.security.Permissions
Method to inline: scan, java.net.URI$Parser, caller: parseHostname, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: parseHostname, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: parseHostname, java.net.URI$Parser
Method to inline: match, java.net.URI, caller: parseHostname, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: scanByte, java.net.URI$Parser
Method to inline: charset, java.nio.charset.CharsetEncoder, caller: hasName, sun.nio.cs.ThreadLocalCoders$2
Method to inline: name, java.nio.charset.Charset, caller: hasName, sun.nio.cs.ThreadLocalCoders$2
Method to inline: charset, java.nio.charset.CharsetEncoder, caller: hasName, sun.nio.cs.ThreadLocalCoders$2
Method to inline: <init>, java.nio.charset.UnsupportedCharsetException, caller: forName, java.nio.charset.Charset
Method to inline: <init>, java.nio.charset.IllegalCharsetNameException, caller: checkName, java.nio.charset.Charset
Method to inline: <init>, java.nio.charset.IllegalCharsetNameException, caller: checkName, java.nio.charset.Charset
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: averageBytesPerChar, java.nio.charset.CharsetEncoder, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.ByteBuffer
Method to inline: <init>, java.security.Permissions, caller: allPermissions, com.oracle.svm.core.jdk.AllPermissionsPolicy
Method to inline: <init>, java.util.Arrays$ArrayItr, caller: iterator, java.util.Arrays$ArrayList
Method to inline: <init>, java.security.AllPermissionCollection$1, caller: elements, java.security.AllPermissionCollection
Method to inline: <init>, java.util.Spliterators$IntArraySpliterator, caller: trySplit, java.util.Spliterators$IntArraySpliterator
Method to inline: <init>, java.util.Spliterators$DoubleArraySpliterator, caller: trySplit, java.util.Spliterators$DoubleArraySpliterator
Method to inline: <init>, java.util.Spliterators$LongArraySpliterator, caller: trySplit, java.util.Spliterators$LongArraySpliterator
Method to inline: <init>, java.util.stream.SpinedBuffer$OfDouble$1Splitr, caller: newSpliterator, java.util.stream.SpinedBuffer$OfDouble$1Splitr
Method to inline: <init>, java.util.stream.SpinedBuffer$OfInt$1Splitr, caller: newSpliterator, java.util.stream.SpinedBuffer$OfInt$1Splitr
Method to inline: <init>, java.util.stream.SpinedBuffer$OfLong$1Splitr, caller: newSpliterator, java.util.stream.SpinedBuffer$OfLong$1Splitr
Method to inline: <init>, sun.nio.cs.US_ASCII$Encoder, caller: newEncoder, sun.nio.cs.US_ASCII
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: <init>, sun.nio.cs.US_ASCII$Encoder
Method to inline: getProtocol, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getAuthority, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getUserInfo, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getPath, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getQuery, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getRef, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getRef, java.net.URL, caller: equals, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getRef, java.net.URL, caller: equals, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getAuthority, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getRef, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getPath, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getQuery, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: getHostAddress, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getRef, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, sun.net.www.protocol.file.Handler
Method to inline: getHost, java.net.URL, caller: hostsEqual, sun.net.www.protocol.file.Handler
Method to inline: <init>, java.net.Inet6Address, caller: getAllByName, java.net.InetAddress
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.net.Inet6Address$Inet6AddressHolder, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.net.InetAddress$InetAddressHolder, caller: <init>, java.net.InetAddress
Method to inline: replace, java.lang.String, caller: parseURL, sun.net.www.protocol.file.Handler
Method to inline: getProtocol, java.net.URL, caller: setURL, java.net.URLStreamHandler
Method to inline: <init>, java.net.InetAddress$NameServiceAddresses, caller: getAllByName0, java.net.InetAddress
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: equals, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: hashCode, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.net.Inet6Address$Inet6AddressHolder, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.net.InetAddress$CachedAddresses, caller: get, java.net.InetAddress$NameServiceAddresses
Method to inline: getName, java.net.NetworkInterface, caller: getHostAddress, java.net.Inet6Address$Inet6AddressHolder
Method to inline: holder, java.net.InetAddress, caller: getAddress, java.net.Inet4Address
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: position, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: <init>, sun.nio.cs.UnicodeEncoder, caller: <init>, sun.nio.cs.UTF_16LE$Encoder
Method to inline: <init>, sun.nio.cs.UnicodeEncoder, caller: <init>, sun.nio.cs.UTF_16$Encoder
Method to inline: <init>, sun.nio.cs.UnicodeEncoder, caller: <init>, sun.nio.cs.UTF_16BE$Encoder
Method to inline: position, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: remaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: <init>, sun.nio.cs.UnicodeEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: remaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: remaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: highSurrogate, java.lang.Character, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: position, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: lowSurrogate, java.lang.Character, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: <init>, sun.nio.cs.UnicodeDecoder, caller: <init>, sun.nio.cs.UTF_16$Decoder
Method to inline: position, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: <init>, sun.nio.cs.UnicodeDecoder, caller: <init>, sun.nio.cs.UTF_16LE$Decoder
Method to inline: <init>, sun.nio.cs.UnicodeDecoder, caller: <init>, sun.nio.cs.UTF_16BE$Decoder
Method to inline: remaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: decode, sun.nio.cs.UnicodeDecoder, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: remaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: decode, sun.nio.cs.UnicodeDecoder, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: remaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: <init>, java.net.NetworkInterface$1, caller: <clinit>, java.net.NetworkInterface
Method to inline: <init>, sun.security.action.GetPropertyAction, caller: <clinit>, java.net.InetAddress
Method to inline: getDefault, java.net.DefaultInterface, caller: <clinit>, java.net.NetworkInterface
Method to inline: getIndex, java.net.NetworkInterface, caller: <clinit>, java.net.NetworkInterface
Method to inline: getUnsafe, jdk.internal.misc.Unsafe, caller: <clinit>, java.net.Inet6Address
Method to inline: <init>, java.net.InetAddress$1, caller: <clinit>, java.net.InetAddress
Method to inline: <init>, java.net.InetAddress$2, caller: <clinit>, java.net.InetAddress
Method to inline: setJavaNetInetAddressAccess, jdk.internal.misc.SharedSecrets, caller: <clinit>, java.net.InetAddress
Method to inline: <init>, java.lang.Number, caller: <init>, java.lang.Integer
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListSet, caller: <clinit>, java.net.InetAddress
Method to inline: getUnsafe, jdk.internal.misc.Unsafe, caller: <clinit>, java.net.InetAddress
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: <init>, java.io.InterruptedIOException, caller: <init>, java.net.SocketTimeoutException
Method to inline: requestedCharsetName, java.lang.StringCoding$StringEncoder, caller: encode, java.lang.StringCoding
Method to inline: <init>, java.net.InetAddress$HostsFileNameService, caller: createNameService, java.net.InetAddress
Method to inline: requestedCharsetName, java.lang.StringCoding$StringDecoder, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.net.InetAddress$PlatformNameService, caller: createNameService, java.net.InetAddress
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap, caller: <init>, java.util.concurrent.ConcurrentSkipListSet
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.concurrent.ConcurrentSkipListMap
Method to inline: name, java.nio.charset.Charset, caller: charsetName, java.lang.StringCoding$StringEncoder
Method to inline: name, java.nio.charset.Charset, caller: charsetName, java.lang.StringCoding$StringDecoder
Method to inline: isBeingInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isReentrantInitialization, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isBeingInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isReentrantInitialization, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isInErrorState, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: getSuperHub, java.lang.Class, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: getSuperHub, java.lang.Class, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: hasDefaultMethods, java.lang.Class, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: <init>, java.io.ObjectStreamField, caller: <init>, java.io.ObjectStreamField
Method to inline: invokeClassInitializer, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: <init>, java.lang.ExceptionInInitializerError, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$EntrySet, caller: entrySet, java.util.concurrent.ConcurrentSkipListMap
Method to inline: maxCharsPerByte, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: scale, java.lang.StringCoding, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$KeySet, caller: navigableKeySet, java.util.concurrent.ConcurrentSkipListMap
Method to inline: onMalformedInput, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: baseHead, java.util.concurrent.ConcurrentSkipListMap
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: getClassLoader0, java.lang.Class, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.io.File, caller: lookupAllHostAddr, java.net.InetAddress$HostsFileNameService
Method to inline: getComponentType, java.lang.Class, caller: appendClassSignature, java.io.ObjectStreamField
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: doGet, java.util.concurrent.ConcurrentSkipListMap
Method to inline: flush, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: replace, java.lang.String, caller: appendClassSignature, java.io.ObjectStreamField
Method to inline: <init>, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: position, java.nio.Buffer, caller: decode, java.lang.StringCoding
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: addSuppressed, java.lang.Throwable, caller: lookupAllHostAddr, java.net.InetAddress$HostsFileNameService
Method to inline: hasDefaultMethods, java.lang.Class, caller: initializeSuperInterfaces, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: declaresDefaultMethods, java.lang.Class, caller: initializeSuperInterfaces, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: addCount, java.util.concurrent.ConcurrentSkipListMap, caller: doRemove, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, caller: unlinkNode, java.util.concurrent.ConcurrentSkipListMap
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: findPredecessor, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.net.Inet6Address, caller: getByAddress, java.net.InetAddress
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.net.Inet6Address$Inet6AddressHolder, caller: <init>, java.net.Inet6Address
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: addCount, java.util.concurrent.ConcurrentSkipListMap, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: emptyMap, java.util.Collections, caller: getFieldsByName, com.oracle.svm.jni.access.JNIAccessibleClass
Method to inline: <init>, java.lang.Number, caller: <init>, java.util.concurrent.atomic.Striped64
Method to inline: getDeclaringClass, com.oracle.svm.jni.access.JNIAccessibleMember, caller: getDeclaringClass, com.oracle.svm.jni.access.JNIAccessibleMethod
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$KeyIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$KeySet
Method to inline: saveState, java.util.Scanner, caller: hasNextLine, java.util.Scanner
Method to inline: linePattern, java.util.Scanner, caller: hasNextLine, java.util.Scanner
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$EntryIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$EntrySet
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$KeySet
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$EntrySet
Method to inline: revertState, java.util.Scanner, caller: hasNextLine, java.util.Scanner
Method to inline: linePattern, java.util.Scanner, caller: nextLine, java.util.Scanner
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Iter, caller: <init>, java.util.concurrent.ConcurrentSkipListMap$EntryIterator
Method to inline: getCachedResult, java.util.Scanner, caller: nextLine, java.util.Scanner
Method to inline: clearCaches, java.util.Scanner, caller: nextLine, java.util.Scanner
Method to inline: current, java.util.concurrent.ThreadLocalRandom, caller: longAccumulate, java.util.concurrent.atomic.Striped64
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Iter, caller: <init>, java.util.concurrent.ConcurrentSkipListMap$KeyIterator
Method to inline: <init>, java.util.concurrent.atomic.Striped64$Cell, caller: longAccumulate, java.util.concurrent.atomic.Striped64
Method to inline: <init>, java.util.Scanner, caller: <init>, java.util.Scanner
Method to inline: pattern, java.util.regex.Matcher, caller: cacheResult, java.util.Scanner
Method to inline: <init>, java.util.Scanner$PatternLRUCache, caller: <init>, java.util.Scanner
Method to inline: <init>, java.util.concurrent.atomic.Striped64$Cell, caller: longAccumulate, java.util.concurrent.atomic.Striped64
Method to inline: pattern, java.util.regex.Matcher, caller: cacheResult, java.util.Scanner
Method to inline: clearCaches, java.util.Scanner, caller: findWithinHorizon, java.util.Scanner
Method to inline: useTransparentBounds, java.util.regex.Matcher, caller: <init>, java.util.Scanner
Method to inline: useAnchoringBounds, java.util.regex.Matcher, caller: <init>, java.util.Scanner
Method to inline: localInit, java.util.concurrent.ThreadLocalRandom, caller: current, java.util.concurrent.ThreadLocalRandom
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: newReader, java.nio.channels.Channels
Method to inline: limit, java.nio.Buffer, caller: findPatternInBuffer, java.util.Scanner
Method to inline: hitEnd, java.util.regex.Matcher, caller: findPatternInBuffer, java.util.Scanner
Method to inline: requireEnd, java.util.regex.Matcher, caller: findPatternInBuffer, java.util.Scanner
Method to inline: limit, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: capacity, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: position, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: limit, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: capacity, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: position, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: clearCaches, java.util.Scanner, caller: makeSpace, java.util.Scanner
Method to inline: translateSavedIndexes, java.util.Scanner, caller: makeSpace, java.util.Scanner
Method to inline: capacity, java.nio.Buffer, caller: makeSpace, java.util.Scanner
Method to inline: translateSavedIndexes, java.util.Scanner, caller: makeSpace, java.util.Scanner
Method to inline: position, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: capacity, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: discardMark, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: charAt, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: length, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: subSequence, java.nio.HeapCharBuffer
Method to inline: capacity, java.nio.Buffer, caller: subSequence, java.nio.HeapCharBuffer
Method to inline: <init>, java.nio.HeapCharBuffer, caller: subSequence, java.nio.HeapCharBuffer
Method to inline: <init>, java.nio.CharBuffer, caller: <init>, java.nio.HeapCharBuffer
Method to inline: <init>, java.util.regex.Matcher$ImmutableMatchResult, caller: toMatchResult, java.util.regex.Matcher
Method to inline: <init>, java.util.ArrayList, caller: split, java.lang.String
Method to inline: size, java.util.ArrayList, caller: split, java.lang.String
Method to inline: add, java.util.ArrayList, caller: split, java.lang.String
Method to inline: add, java.util.ArrayList, caller: split, java.lang.String
Method to inline: size, java.util.ArrayList, caller: split, java.lang.String
Method to inline: add, java.util.ArrayList, caller: split, java.lang.String
Method to inline: size, java.util.ArrayList, caller: split, java.lang.String
Method to inline: <init>, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: add, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: add, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: add, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: getComponentType, java.lang.Class, caller: copyOfRange, java.util.Arrays
Method to inline: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, caller: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember
Method to inline: equals, java.lang.Object, caller: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember
Method to inline: emptyMap, java.util.Collections, caller: getMethodsByDescriptor, com.oracle.svm.jni.access.JNIAccessibleClass
Method to inline: getSuperclass, java.lang.Class, caller: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember
Method to inline: isStatic, java.lang.reflect.Modifier, caller: isStatic, com.oracle.svm.jni.access.JNIAccessibleMethod
Method to inline: isPublic, java.lang.reflect.Modifier, caller: isPublic, com.oracle.svm.jni.access.JNIAccessibleMethod
Method to inline: <init>, sun.nio.ch.NativeThreadSet, caller: <init>, sun.nio.ch.FileChannelImpl
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: <init>, sun.nio.ch.FileChannelImpl
Method to inline: <init>, sun.nio.ch.FileChannelImpl$Closer, caller: <init>, sun.nio.ch.FileChannelImpl
Method to inline: <init>, java.nio.channels.spi.AbstractInterruptibleChannel, caller: <init>, java.nio.channels.FileChannel
Method to inline: <init>, java.util.AbstractMap$SimpleImmutableEntry, caller: next, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator
Method to inline: <init>, java.io.Reader, caller: <init>, sun.nio.cs.StreamDecoder
Method to inline: charset, java.nio.charset.CharsetDecoder, caller: <init>, sun.nio.cs.StreamDecoder
Method to inline: <init>, java.util.AbstractMap$SimpleImmutableEntry, caller: next, java.util.concurrent.ConcurrentSkipListMap$EntryIterator
Method to inline: position, java.nio.channels.FileLock, caller: implCloseChannel, sun.nio.ch.FileChannelImpl
Method to inline: size, java.nio.channels.FileLock, caller: implCloseChannel, sun.nio.ch.FileChannelImpl
Method to inline: remaining, java.nio.Buffer, caller: read, java.io.Reader
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: hasRemaining, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: hasRemaining, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: remaining, java.nio.Buffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: hasRemaining, java.nio.Buffer, caller: implReady, sun.nio.cs.StreamDecoder
Method to inline: <init>, java.nio.HeapCharBuffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: limit, java.nio.Buffer, caller: readBytes, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: readBytes, sun.nio.cs.StreamDecoder
Method to inline: remaining, java.nio.Buffer, caller: readBytes, sun.nio.cs.StreamDecoder
Method to inline: position, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: capacity, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: discardMark, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: beginBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: normalize, sun.nio.ch.IOStatus, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: remaining, java.nio.Buffer, caller: read, sun.nio.ch.IOUtil
Method to inline: getJavaLangAccess, jdk.internal.misc.SharedSecrets, caller: blockedOn, java.nio.channels.spi.AbstractInterruptibleChannel
Method to inline: <init>, java.nio.channels.spi.AbstractInterruptibleChannel$1, caller: begin, java.nio.channels.spi.AbstractInterruptibleChannel
Method to inline: beginBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: normalize, sun.nio.ch.IOStatus, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: isBufferTooLarge, sun.nio.ch.Util, caller: getTemporaryAlignedDirectBuffer, sun.nio.ch.Util
Method to inline: position, java.nio.Buffer, caller: readIntoNativeBuffer, sun.nio.ch.IOUtil
Method to inline: isBufferTooLarge, sun.nio.ch.Util, caller: getTemporaryDirectBuffer, sun.nio.ch.Util
Method to inline: limit, java.nio.Buffer, caller: readIntoNativeBuffer, sun.nio.ch.IOUtil
Method to inline: capacity, java.nio.Buffer, caller: isBufferTooLarge, sun.nio.ch.Util
Method to inline: isBufferTooLarge, sun.nio.ch.Util, caller: isBufferTooLarge, sun.nio.ch.Util
Method to inline: position, java.nio.Buffer, caller: alignedSlice, java.nio.ByteBuffer
Method to inline: <init>, java.nio.MappedByteBuffer, caller: <init>, java.nio.DirectByteBuffer
Method to inline: limit, java.nio.Buffer, caller: alignedSlice, java.nio.ByteBuffer
Method to inline: isDirectMemoryPageAligned, jdk.internal.misc.VM, caller: <init>, java.nio.DirectByteBuffer
Method to inline: position, java.nio.Buffer, caller: get, java.nio.DirectByteBuffer
Method to inline: pageSize, java.nio.Bits, caller: <init>, java.nio.DirectByteBuffer
Method to inline: limit, java.nio.Buffer, caller: get, java.nio.DirectByteBuffer
Method to inline: ix, java.nio.DirectByteBuffer, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: get, java.nio.ByteBuffer
Method to inline: <init>, java.nio.DirectByteBuffer, caller: slice, java.nio.DirectByteBuffer
Method to inline: <init>, java.nio.MappedByteBuffer, caller: <init>, java.nio.DirectByteBuffer
Method to inline: <init>, java.nio.DirectByteBuffer$Deallocator, caller: <init>, java.nio.DirectByteBuffer
Method to inline: <init>, jdk.internal.ref.Cleaner, caller: create, jdk.internal.ref.Cleaner
Method to inline: maxDirectMemory, jdk.internal.misc.VM, caller: reserveMemory, java.nio.Bits
Method to inline: getJavaLangRefAccess, jdk.internal.misc.SharedSecrets, caller: reserveMemory, java.nio.Bits
Method to inline: getRuntime, java.lang.Runtime, caller: gc, java.lang.System
Method to inline: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, caller: gc, java.lang.Runtime
Method to inline: getUserRequestedGCPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, caller: gc, java.lang.Runtime
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: sleep, com.oracle.svm.core.thread.JavaThreads
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: sleep, com.oracle.svm.core.thread.JavaThreads
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: sleep, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, jdk.internal.ref.Cleaner$1, caller: clean, jdk.internal.ref.Cleaner
Method to inline: <init>, sun.nio.ch.Util$BufferCache, caller: initialValue, sun.nio.ch.Util$1
Method to inline: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, sun.nio.ch.NativeDispatcher, caller: <init>, sun.nio.ch.FileDispatcher
Method to inline: next, sun.nio.ch.Util$BufferCache, caller: removeFirst, sun.nio.ch.Util$BufferCache
Method to inline: capacity, java.nio.Buffer, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: next, sun.nio.ch.Util$BufferCache, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: capacity, java.nio.Buffer, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: printStackTrace, java.lang.Throwable, caller: run, jdk.internal.ref.Cleaner$1
Method to inline: next, sun.nio.ch.Util$BufferCache, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: rewind, java.nio.Buffer, caller: rewind, java.nio.ByteBuffer
Method to inline: load, sun.nio.ch.IOUtil, caller: <clinit>, sun.nio.ch.NativeThread
Method to inline: <init>, sun.nio.fs.UnixNativeDispatcher$1, caller: <clinit>, sun.nio.fs.UnixNativeDispatcher
Method to inline: <init>, sun.nio.ch.IOUtil$1, caller: <clinit>, sun.nio.ch.IOUtil
Method to inline: getJavaIOFileDescriptorAccess, jdk.internal.misc.SharedSecrets, caller: <clinit>, sun.nio.ch.FileChannelImpl
Method to inline: load, sun.nio.ch.IOUtil, caller: <clinit>, sun.nio.ch.FileChannelImpl
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: <init>, java.net.Inet6Address$Inet6AddressHolder, caller: <init>, java.net.Inet6Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: isReflectivelyExportedOrOpen, java.lang.Module, caller: isReflectivelyExported, java.lang.Module
Method to inline: isNamed, java.lang.Module, caller: implIsExportedOrOpen, java.lang.Module
Method to inline: isReflectivelyExportedOrOpen, java.lang.Module, caller: implIsExportedOrOpen, java.lang.Module
Method to inline: isNamed, java.lang.Module, caller: allows, java.lang.Module
Method to inline: <init>, java.net.NetworkInterface$2, caller: enumerationFromArray, java.net.NetworkInterface
Method to inline: <init>, java.net.Inet4AddressImpl, caller: loopbackAddress, java.net.Inet6AddressImpl
Method to inline: <init>, java.net.Inet6Address, caller: loopbackAddress, java.net.Inet6AddressImpl
Method to inline: ordinal, java.lang.Enum, caller: modsValue, java.lang.module.ModuleDescriptor
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: toString, java.lang.module.ModuleDescriptor$Requires
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: toString, java.lang.module.ModuleDescriptor$Requires
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Opens, caller: compareTo, java.lang.module.ModuleDescriptor$Opens
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Opens, caller: compareTo, java.lang.module.ModuleDescriptor$Opens
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Exports, caller: compareTo, java.lang.module.ModuleDescriptor$Exports
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Exports, caller: compareTo, java.lang.module.ModuleDescriptor$Exports
Method to inline: <init>, java.util.stream.Streams$StreamBuilderImpl, caller: of, java.util.stream.Stream
Method to inline: <init>, java.util.stream.Streams$AbstractStreamBuilderImpl, caller: <init>, java.util.stream.Streams$StreamBuilderImpl
Method to inline: <init>, java.util.stream.Streams$2, caller: composedClose, java.util.stream.Streams
Method to inline: <init>, java.util.stream.Streams$1, caller: composeWithExceptions, java.util.stream.Streams
Method to inline: <init>, java.util.stream.StreamSpliterators$DelegatingSpliterator, caller: lazySpliterator, java.util.stream.ReferencePipeline
Method to inline: ensureCapacity, java.util.ComparableTimSort, caller: mergeHi, java.util.ComparableTimSort
Method to inline: <init>, java.util.stream.Collectors$CollectorImpl, caller: joining, java.util.stream.Collectors
Method to inline: ensureCapacity, java.util.ComparableTimSort, caller: mergeLo, java.util.ComparableTimSort
Method to inline: <init>, java.util.Spliterators$IteratorSpliterator, caller: spliterator, java.util.Spliterators
Method to inline: <init>, java.util.stream.ReferencePipeline$3, caller: map, java.util.stream.ReferencePipeline
Method to inline: <init>, java.util.stream.ReferencePipeline$3$1, caller: opWrapSink, java.util.stream.ReferencePipeline$3
Method to inline: <init>, java.util.stream.Sink$ChainedReference, caller: <init>, java.util.stream.ReferencePipeline$3$1
Method to inline: addSuppressed, java.lang.Throwable, caller: run, java.util.stream.Streams$2
Method to inline: addSuppressed, java.lang.Throwable, caller: run, java.util.stream.Streams$1
Method to inline: <init>, java.util.Spliterators$ArraySpliterator, caller: trySplit, java.util.Spliterators$IteratorSpliterator
[simplemethods:3268]     (clinit):     167.49 ms,  1.70 GB
[simplemethods:3268]   (typeflow):   6,038.14 ms,  1.70 GB
[simplemethods:3268]    (objects):   6,327.74 ms,  1.70 GB
[simplemethods:3268]   (features):     206.60 ms,  1.70 GB
[simplemethods:3268]     analysis:  12,939.55 ms,  1.70 GB
Point to add NativeImageInlineDuringParsingPlugin false true
NativeImageInlineDuringParsingPlugin added
method: <init>, java.io.EOFException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inflateBytesBytes, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLanguage, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inflateBufferBytes, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBufferArray, java.util.zip.ZipUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBufferOffset, java.util.zip.ZipUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointAt, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setCharAt, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.LocaleSyntaxException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isScript, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isRegion, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkVariants, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.LocaleSyntaxException, result: InternalLocaleBuilder.setRegion(String)@47 -> LocaleSyntaxException.<init>(String, int)
method: clearExtensions, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashSet, result: InternalLocaleBuilder.setLocale(BaseLocale, LocaleExtensions)@518 -> HashSet.<init>(int)
method: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, result: InternalLocaleBuilder.setLocale(BaseLocale, LocaleExtensions)@534 -> InternalLocaleBuilder$CaseInsensitiveString.<init>(String)
method: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, result: InternalLocaleBuilder.setLocale(BaseLocale, LocaleExtensions)@663 -> InternalLocaleBuilder$CaseInsensitiveChar.<init>(char)
method: codePointAtSB, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleLeadMightHaveNonZeroFCD16, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFCD16FromNormData, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlphaString, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.StringTokenIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNumericString, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDone, sun.util.locale.StringTokenIterator, result: InternalLocaleBuilder.getBaseLocale()@71 -> StringTokenIterator.isDone()
method: current, sun.util.locale.StringTokenIterator, result: InternalLocaleBuilder.getBaseLocale()@94 -> StringTokenIterator.current()
method: caseIgnoreMatch, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: next, sun.util.locale.StringTokenIterator, result: InternalLocaleBuilder.getBaseLocale()@110 -> StringTokenIterator.next()
method: currentStart, sun.util.locale.StringTokenIterator, result: InternalLocaleBuilder.getBaseLocale()@84 -> StringTokenIterator.currentStart()
method: replaceAll, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, sun.util.locale.BaseLocale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.LocaleExtensions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, sun.util.locale.LocaleExtensions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, sun.util.locale.LocaleObjectCache, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Locale$LocaleKey, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanStaleEntries, sun.util.locale.LocaleObjectCache, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLower, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.LocaleObjectCache$CacheEntry, result: LocaleObjectCache.get(Object)@68 -> LocaleObjectCache$CacheEntry.<init>(Object, Object, ReferenceQueue)
method: <init>, java.util.TreeMap, result: LocaleExtensions.<init>(Map, Set, Map)@79 -> TreeMap.<init>()
method: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, result: LocaleExtensions.<init>(Map, Set, Map)@134 -> InternalLocaleBuilder$CaseInsensitiveChar.value()
method: hasNext, sun.util.locale.StringTokenIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPrivateusePrefixChar, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextDelimiter, sun.util.locale.StringTokenIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerString, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.Extension, result: LocaleExtensions.<init>(Map, Set, Map)@195 -> Extension.<init>(char, String)
method: <init>, java.util.TreeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, result: LocaleExtensions.<init>(Map, Set, Map)@271 -> InternalLocaleBuilder$CaseInsensitiveString.value()
method: add, java.util.TreeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.UnicodeLocaleExtension, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, java.util.AbstractMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toID, sun.util.locale.LocaleExtensions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replaceAll, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.BaseLocale$Key, result: BaseLocale.getInstance(String, String, String, String)@55 -> BaseLocale$Key.<init>(String, String, String, String, boolean)
method: isUpper, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isVariant, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.BaseLocale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, sun.util.locale.BaseLocale$Key, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: intern, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toTitleString, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperString, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLower, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpper, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: intern, com.oracle.svm.core.jdk.StringInternSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doIntern, com.oracle.svm.core.jdk.StringInternSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkIndex, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkIndex, jdk.internal.util.Preconditions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBoundsCheckIndex, jdk.internal.util.Preconditions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$100, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkAlignedGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$200, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGreyToBlackObjectVisitor, com.oracle.svm.core.genscavenge.GCImpl, result: GreyObjectsWalker.walkAlignedGreyObjects()@85 -> GCImpl.getGreyToBlackObjectVisitor()
method: visitObjectInline, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: noteObject, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor$DiagnosticReporter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: discoverIfReference, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_setname_np, com.oracle.svm.core.posix.headers.linux.LinuxPthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkObjectInline, com.oracle.svm.core.hub.InteriorObjRefWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkUnalignedGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: free, com.oracle.svm.core.posix.headers.LibC, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malloc, com.oracle.svm.core.posix.headers.LibC, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: collectCompletelyBasedOnTime, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: memset, com.oracle.svm.core.posix.headers.LibC, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAccounting, com.oracle.svm.core.genscavenge.CollectionPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: weightedNanos, com.oracle.svm.core.util.TimeUtils, result: CollectionPolicy$ByTime.collectCompletelyBasedOnTime(Log)@83 -> TimeUtils.weightedNanos(int, long)
method: collectCompletelyBasedOnSpace, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setUpRememberedSetForObjectOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setTableForObject, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isReferenceInstanceClass, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkOffsetsFromPointer, com.oracle.svm.core.heap.InstanceReferenceMapDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getpwuid, com.oracle.svm.core.posix.headers.Pwd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setNext, com.oracle.svm.core.thread.JavaVMOperation, result: JavaVMOperation$ThunkOperation.setNext(VMOperationControl$JavaAllocationFreeQueue$Element)@5 -> JavaVMOperation.setNext(JavaVMOperation)
method: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_mutex_init, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getS4, com.oracle.svm.core.util.TypedMemoryReader, result: InstanceReferenceMapDecoder.walkOffsetsFromPointer(Pointer, NonmovableArray, long, ObjectReferenceVisitor, Object)@52 -> TypedMemoryReader.getS4(Pointer)
method: pthread_mutex_lock, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_cond_wait, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.setTableForObjectUnchecked(Pointer, Pointer, Pointer, Pointer)@78 -> FirstObjectTable.memoryOffsetToIndex(UnsignedWord)
method: pthread_mutex_unlock, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_cond_timedwait, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getU4, com.oracle.svm.core.util.TypedMemoryReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setEntryAtIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_attr_init, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_attr_setdetachstate, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: memoryOffsetToEntry, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_attr_setstacksize, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_create, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_attr_destroy, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pthread_cond_broadcast, com.oracle.svm.core.posix.headers.Pthread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: biasExponent, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.setTableForObjectUnchecked(Pointer, Pointer, Pointer, Pointer)@289 -> FirstObjectTable.biasExponent(int)
method: access$000, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isApplicationThread, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: close, com.oracle.svm.core.locks.VMMutex, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isReferenceInstance, com.oracle.svm.core.hub.HubType, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSoftReferenceTimestamp, com.oracle.svm.core.heap.ReferenceInternals, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getReferentFieldAddress, com.oracle.svm.core.heap.ReferenceInternals, result: ReferenceObjectProcessing.discover(Object, ObjectReferenceVisitor)@224 -> ReferenceInternals.getReferentFieldAddress(Reference)
method: signal, com.oracle.svm.core.posix.headers.Signal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sigaction, com.oracle.svm.core.posix.headers.Signal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: visitObjectReferences, com.oracle.svm.core.code.CodeInfoTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$100, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getReferenceMapEncoding, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupReferenceMapIndex, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reportNoReferenceMap, com.oracle.svm.core.code.CodeInfoTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupReferenceMapIndex, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: realpath, com.oracle.svm.core.posix.headers.Stdlib, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: uname, com.oracle.svm.core.posix.headers.Utsname, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getpagesize, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sysconf, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fsync, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getcwd, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sampleHead, com.oracle.svm.core.heap.AllocationFreeList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sched_yield, com.oracle.svm.core.posix.headers.Sched, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: write, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sleep, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$000, com.oracle.svm.core.heap.AllocationFreeList$Element, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getuid, com.oracle.svm.core.posix.headers.Unistd, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$100, com.oracle.svm.core.heap.AllocationFreeList$Element, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$200, com.oracle.svm.core.heap.AllocationFreeList$Element, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getrlimit, com.oracle.svm.core.posix.headers.Resource, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asT, com.oracle.svm.core.heap.AllocationFreeList$Element, result: AllocationFreeList$Element.access$200(AllocationFreeList$Element)@1 -> AllocationFreeList$Element.asT(AllocationFreeList$Element)
method: setrlimit, com.oracle.svm.core.posix.headers.Resource, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: strerror, com.oracle.svm.core.posix.headers.Errno, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: uncompressedReferenceSize, com.oracle.svm.core.FrameAccess, result: CodeReferenceMapDecoder.walkOffsetsFromPointer(PointerBase, NonmovableArray, long, ObjectReferenceVisitor)@45 -> FrameAccess.uncompressedReferenceSize()
method: getAliasTable, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAliasMap, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toThreadState, jdk.internal.misc.VM, result: Thread.getState()@4 -> VM.toThreadState(int)
method: examineAliases, sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dlopen, com.oracle.svm.core.posix.headers.Dlfcn, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dlsym, com.oracle.svm.core.posix.headers.Dlfcn, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: determineCPUFeatures, com.oracle.svm.core.amd64.AMD64LibCHelper, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: JVM_ActiveProcessorCount, com.oracle.svm.core.jdk.Jvm, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initialize, com.oracle.svm.core.jdk.Jvm, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: guaranteeInProgressAtSafepoint, com.oracle.svm.core.thread.VMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$102, com.oracle.svm.core.heap.AllocationFreeList$Element, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.util.concurrent.atomic.AtomicReference, result: AllocationFreeList.scrub()@84 -> AtomicReference.set(Object)
method: signed, com.oracle.svm.core.log.Log$NoopLog, result: GCImpl$Accounting.afterCompleteCollection(GCImpl$Timer)@75 -> Log$NoopLog.signed(long)
method: suspendAllocation, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: suspendThreadLocalAllocation, com.oracle.svm.core.genscavenge.ThreadLocalAllocation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resumeAllocation, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resumeThreadLocalAllocation, com.oracle.svm.core.genscavenge.ThreadLocalAllocation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nativeInitializeEncoding, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: SVM_FindJavaTZmd, com.oracle.svm.core.LibCHelper, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectBytes, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlignedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isUnalignedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unmodifiableMap, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableMap, result: Collections.unmodifiableMap(Map)@5 -> Collections$UnmodifiableMap.<init>(Map)
method: copyAlignedObject, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocateMemory, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: installForwardingPointer, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocateMemory, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: end, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, sun.util.calendar.Era, result: Era.toString()@17 -> Era.getName()
method: getAbbreviation, sun.util.calendar.Era, result: Era.toString()@31 -> Era.getAbbreviation()
method: getSinceDate, sun.util.calendar.Era, result: Era.toString()@50 -> Era.getSinceDate()
method: getZoneStringsWrapper, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSubclassObject, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZoneStringsImpl, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deepHashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: primitiveArrayHashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sprintf0d, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rotateLeft, java.lang.Integer, result: ZonedDateTime.hashCode()@23 -> Integer.rotateLeft(int, int)
method: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setEra, sun.util.calendar.CalendarDate, result: JulianCalendar$Date.setKnownEra(Era)@2 -> CalendarDate.setEra(Era)
method: <init>, java.util.LinkedHashMap$LinkedEntryIterator, result: LinkedHashMap$LinkedEntrySet.iterator()@8 -> LinkedHashMap$LinkedEntryIterator.<init>(LinkedHashMap)
method: <init>, java.util.LinkedHashMap$LinkedHashIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedHashMap$LinkedKeyIterator, result: LinkedHashMap$LinkedKeySet.iterator()@8 -> LinkedHashMap$LinkedKeyIterator.<init>(LinkedHashMap)
method: <init>, java.util.Collections$UnmodifiableSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeCurrency, java.text.DecimalFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCountry, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.util.Currency, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCurrencyCode, java.util.Currency, result: DecimalFormatSymbols.initializeCurrency(Locale)@69 -> Currency.getCurrencyCode()
method: deepEquals, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSymbol, java.util.Currency, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deepEquals0, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZoneStrings, sun.util.locale.provider.TimeZoneNameUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matches, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.util.locale.BaseLocale$Key, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBaseLocale, sun.util.locale.BaseLocale$Key, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadZoneStrings, sun.util.locale.provider.TimeZoneNameUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOffset, java.time.ZonedDateTime, result: ZonedDateTime.get(TemporalField)@55 -> ZonedDateTime.getOffset()
method: toIndex, java.util.Currency$SpecialCaseEntry, result: Currency.getInstance(Locale)@178 -> Currency$SpecialCaseEntry.toIndex(int)
method: get, java.time.chrono.ChronoZonedDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLocalDateTime, java.time.ZonedDateTime, result: ZonedDateTime.toLocalDateTime()@1 -> ZonedDateTime.toLocalDateTime()
method: toEpochSecond, java.time.chrono.ChronoZonedDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLocalDate, java.time.ZonedDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNano, java.time.LocalTime, result: ChronoZonedDateTime.compareTo(ChronoZonedDateTime)@26 -> LocalTime.getNano()
method: query, java.time.chrono.ChronoZonedDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Locale, result: Locale$Cache.createObject(Object)@16 -> Locale.<init>(BaseLocale, LocaleExtensions)
method: getZoneStrings, sun.util.locale.provider.TimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeSet, result: TreeSet.<init>()@8 -> TreeSet.<init>(NavigableMap)
method: <init>, java.util.LinkedList, result: TimeZoneNameUtility.loadZoneStrings(Locale)@67 -> LinkedList.<init>()
method: add, java.util.LinkedList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: size, java.util.LinkedList, result: TimeZoneNameUtility.loadZoneStrings(Locale)@130 -> LinkedList.size()
method: toArray, java.util.LinkedList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unmodifiableSet, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matches, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableCollection, result: Collections$UnmodifiableSet.<init>(Set)@2 -> Collections$UnmodifiableCollection.<init>(Collection)
method: <init>, sun.util.locale.Extension, result: UnicodeLocaleExtension.<init>(SortedSet, SortedMap)@3 -> Extension.<init>(char)
method: <init>, java.util.AbstractSequentialList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, sun.util.resources.Bundles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadBundleOf, sun.util.resources.Bundles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCached, com.oracle.svm.core.jdk.LocalizationSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionMatchesCI, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionMatchesCI, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionMatchesCI_UTF16, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionMatchesCI_Latin1, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.MissingResourceException, result: LocalizationSupport.getCached(String, Locale)@74 -> MissingResourceException.<init>(String, String, String)
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matches, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, result: LocaleData.getTimeZoneNames(Locale)@11 -> LocaleProviderAdapter$Type.getUtilResourcesPackage()
method: match, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$KeySet, result: TreeMap.navigableKeySet()@19 -> TreeMap$KeySet.<init>(NavigableMap)
method: span, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRawSupplementary, sun.text.normalizer.UCharacterProperty, result: UnicodeSetStringSpan.spanOne(UnicodeSet, CharSequence, int, int)@51 -> UCharacterProperty.getRawSupplementary(char, char)
method: containsSlow, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanBack, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: span, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanBack, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: UnicodeSetStringSpan.<init>(UnicodeSet, ArrayList, int)@67 -> UnicodeSetStringSpan$OffsetList.<init>()
method: makeSpanLengthByte, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addToSpanNotSet, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: needsStringSpanUTF16, sun.text.normalizer.UnicodeSetStringSpan, result: UnicodeSet.spanBack(CharSequence, int, UnicodeSet$SpanCondition)@110 -> UnicodeSetStringSpan.needsStringSpanUTF16()
method: spanNot, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanCodePointsAndCount, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findCodePoint, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hex, sun.text.normalizer.Utility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deriveFallbackNames, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deriveFallbackName, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exists, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toGMTFormat, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: typeFallback, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionFormatFallback, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAvailableIDs, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.util.Set, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$SetN, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$Set12, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$Set12, result: Set.of(Object[])@39 -> ImmutableCollections$Set12.<init>(Object)
method: emptySet, java.util.ImmutableCollections, result: Set.of(Object[])@28 -> ImmutableCollections.emptySet()
method: <init>, java.util.HashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addAll, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDisplayNameArray, sun.util.locale.provider.TimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, java.util.HashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stream, java.util.Collection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stream, java.util.stream.StreamSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forLanguageTag, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parse, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setLanguageTag, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toArray, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: finishToArray, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAvailableIDs, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZoneIds, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.MessageFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$AbstractImmutableSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: probe, java.util.ImmutableCollections$SetN, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fromCharacteristics, java.util.stream.StreamOpFlag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReferencePipeline$Head, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap$KeySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap$HashMapSpliterator, result: HashMap$KeySpliterator.<init>(HashMap, int, int, int, int)@8 -> HashMap$HashMapSpliterator.<init>(HashMap, int, int, int, int)
method: <init>, java.util.stream.ReferencePipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findValue, sun.util.cldr.CLDRCalendarDataProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.ParseStatus, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.LanguageTag, result: LanguageTag.parse(String, ParseStatus)@70 -> LanguageTag.<init>()
method: retrieveInteger, sun.util.cldr.CLDRCalendarDataProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseLanguage, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseExtlangs, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseScript, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseRegion, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseVariants, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseExtensions, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parsePrivateuse, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clear, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hugeCapacity, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, java.util.Collections$UnmodifiableCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setExtensions, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptyList, java.util.Collections, result: LanguageTag.<init>()@29 -> Collections.emptyList()
method: isEmpty, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSingletonChar, sun.util.locale.UnicodeLocaleExtension, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: currentEnd, sun.util.locale.StringTokenIterator, result: InternalLocaleBuilder.setUnicodeLocaleExtension(String)@275 -> StringTokenIterator.currentEnd()
method: isExtlang, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExtensionSingleton, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExtensionSubtag, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAttribute, sun.util.locale.UnicodeLocaleExtension, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isKey, sun.util.locale.UnicodeLocaleExtension, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPrivateusePrefix, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPrivateuseSubtag, sun.util.locale.LanguageTag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trace, sun.util.locale.provider.LocaleResources, result: LocaleResources.getTimeZoneNames(String)@140 -> LocaleResources.trace(String, Object[])
method: <init>, java.text.MessageFormat, result: MessageFormat.format(String, Object[])@5 -> MessageFormat.<init>(String)
method: <init>, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.Format, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.FieldPosition, result: Format.format(Object)@14 -> FieldPosition.<init>(int)
method: setSupplementary, sun.util.resources.LocaleData, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSupplementary, sun.util.resources.LocaleData, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.resources.LocaleData$2, result: LocaleData.getSupplementary(String, Locale)@6 -> LocaleData$2.<init>(String, Locale)
method: <init>, java.util.stream.AbstractPipeline, result: ReferencePipeline.<init>(Spliterator, int, boolean)@4 -> AbstractPipeline.<init>(Spliterator, int, boolean)
method: <init>, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.PipelineHelper, result: AbstractPipeline.<init>(Spliterator, int, boolean)@1 -> PipelineHelper.<init>()
method: hashCode, java.util.AbstractList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.cldr.CLDRTimeZoneNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: size, java.util.ImmutableCollections$Set12, result: ImmutableCollections$Set12$1.<init>(ImmutableCollections$Set12)@14 -> ImmutableCollections$Set12.size()
method: toString, sun.util.locale.Extension, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getID, sun.util.locale.Extension, result: UnicodeLocaleExtension.getID()@1 -> Extension.getID()
method: <init>, java.util.ImmutableCollections$Set12$1, result: ImmutableCollections$Set12.iterator()@5 -> ImmutableCollections$Set12$1.<init>(ImmutableCollections$Set12)
method: <init>, java.util.stream.ReferencePipeline$2, result: ReferencePipeline.filter(Predicate)@18 -> ReferencePipeline$2.<init>(ReferencePipeline, AbstractPipeline, StreamShape, int, Predicate)
method: <init>, java.util.stream.ReferencePipeline$StatelessOp, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReferencePipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.provider.TimeZoneNameProviderImpl, result: CLDRTimeZoneNameProviderImpl.<init>(LocaleProviderAdapter$Type, Set)@3 -> TimeZoneNameProviderImpl.<init>(LocaleProviderAdapter$Type, Set)
method: getString, sun.util.locale.provider.CurrencyNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.spi.TimeZoneNameProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkPositionIndex, java.util.LinkedList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPositionIndex, java.util.LinkedList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBoundsMsg, java.util.LinkedList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorMod, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.util.AbstractList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanOne, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$KeyIterator, result: TreeMap.keyIterator()@9 -> TreeMap$KeyIterator.<init>(TreeMap, TreeMap$Entry)
method: floorDiv, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matches16CPB, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$SetN$SetNIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.AbstractMap$SimpleImmutableEntry, result: Collections$SingletonMap.entrySet()@20 -> AbstractMap$SimpleImmutableEntry.<init>(Object, Object)
method: size, java.util.ImmutableCollections$SetN, result: ImmutableCollections$SetN$SetNIterator.<init>(ImmutableCollections$SetN)@11 -> ImmutableCollections$SetN.size()
method: singleton, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMaxLength, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: UnicodeSetStringSpan.spanWithStrings(CharSequence, int, int, UnicodeSet$SpanCondition)@23 -> UnicodeSetStringSpan$OffsetList.setMaxLength(int)
method: <init>, java.util.Collections$SingletonSet, result: Collections.singleton(Object)@5 -> Collections$SingletonSet.<init>(Object)
method: clear, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanNotBack, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanOneBack, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offsetByCodePoints, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: containsOffset, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedList$ListItr, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matches16, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addOffset, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextNode, java.util.LinkedHashMap$LinkedHashIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: next, java.util.LinkedHashMap$LinkedEntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: UnicodeSetStringSpan.spanWithStrings(CharSequence, int, int, UnicodeSet$SpanCondition)@454 -> UnicodeSetStringSpan$OffsetList.isEmpty()
method: isTrailSurrogate, sun.text.normalizer.UTF16, result: UnicodeSetStringSpan.spanOne(UnicodeSet, CharSequence, int, int)@41 -> UTF16.isTrailSurrogate(char)
method: shift, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: popMinimum, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLeadSurrogate, sun.text.normalizer.UTF16, result: UnicodeSetStringSpan.spanOneBack(UnicodeSet, CharSequence, int)@40 -> UTF16.isLeadSurrogate(char)
method: makeFormat, java.text.MessageFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkFrozen, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: eq, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: xor, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add_unchecked, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureBufferCapacity, sun.text.normalizer.UnicodeSet, result: UnicodeSet.retain(int[], int, int)@7 -> UnicodeSet.ensureBufferCapacity(int)
method: <init>, java.util.LinkedList$Node, result: LinkedList.linkLast(Object)@12 -> LinkedList$Node.<init>(LinkedList$Node, Object, LinkedList$Node)
method: findKeyword, java.text.MessageFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.ChoiceFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDateInstance, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTimeInstance, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry, result: Collections$UnmodifiableMap$UnmodifiableEntrySet.contains(Object)@21 -> Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>(Map$Entry)
method: subformat, java.text.MessageFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: length, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getIntegerInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPercentInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCurrencyInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findCodePoint, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initBits, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, java.util.ImmutableCollections$Set12, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: retain, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanAndCount, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ArrayList$ListItr, result: ArrayList.listIterator()@6 -> ArrayList$ListItr.<init>(ArrayList, int)
method: emptyListIterator, java.util.Collections, result: Collections$EmptyList.listIterator()@0 -> Collections.emptyListIterator()
method: retainAll, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$ListItr, result: ImmutableCollections$AbstractImmutableList.listIterator(int)@27 -> ImmutableCollections$ListItr.<init>(List, int, int)
method: <init>, java.text.MessageFormat, result: MessageFormat.subformat(Object[], StringBuffer, FieldPosition, List)@173 -> MessageFormat.<init>(String, Locale)
method: <init>, java.util.Collections$UnmodifiableList$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDateTimeInstance, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: substring, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureCapacity, sun.text.normalizer.UnicodeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.text.MessageFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unmodifiableList, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableRandomAccessList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableList, result: Collections.unmodifiableList(List)@23 -> Collections$UnmodifiableList.<init>(List)
method: equals, java.text.AttributedCharacterIterator$Attribute, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setBeginIndex, java.text.FieldPosition, result: DecimalFormat.expandAffix(String)@301 -> FieldPosition.setBeginIndex(int)
method: setEndIndex, java.text.FieldPosition, result: DecimalFormat.expandAffix(String)@309 -> FieldPosition.setEndIndex(int)
method: set32x64Bits, sun.text.normalizer.BMPSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spanContainedAndCount, sun.text.normalizer.UnicodeSetStringSpan, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: buildFromSorted, java.util.TreeMap, result: TreeMap.addAllForTreeSet(SortedSet, Object)@15 -> TreeMap.buildFromSorted(int, Iterator, ObjectInputStream, Object)
method: get, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeCalendar, java.text.SimpleDateFormat, result: SimpleDateFormat.<init>(String, Locale)@43 -> SimpleDateFormat.initializeCalendar(Locale)
method: getInstanceRef, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initialize, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: computeRedLevel, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: buildFromSorted, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readObject, java.io.ObjectInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addOffsetAndCount, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasCountAtOffset, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributedString, result: Format.createAttributedCharacterIterator(String)@5 -> AttributedString.<init>(String)
method: substring, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getIterator, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.CharacterIteratorFieldDelegate, result: DecimalFormat.formatToCharacterIterator(Object)@4 -> CharacterIteratorFieldDelegate.<init>()
method: format, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addAttribute, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBigDecimalMultiplier, java.text.DecimalFormat, result: DecimalFormat.format(BigDecimal, StringBuffer, Format$FieldDelegate)@10 -> DecimalFormat.getBigDecimalMultiplier()
method: format, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addAttributeImpl, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subformat, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBigIntegerMultiplier, java.text.DecimalFormat, result: DecimalFormat.format(BigInteger, StringBuffer, Format$FieldDelegate, boolean)@10 -> DecimalFormat.getBigIntegerMultiplier()
method: set, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigDecimal, result: DecimalFormat.getBigDecimalMultiplier()@16 -> BigDecimal.<init>(int)
method: getNegativePrefixFieldPositions, java.text.DecimalFormat, result: DecimalFormat.format(double, StringBuffer, Format$FieldDelegate)@139 -> DecimalFormat.getNegativePrefixFieldPositions()
method: extendDigits, java.text.DigitList, result: DigitList.set(boolean, BigInteger, int)@21 -> DigitList.extendDigits(int)
method: round, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendContents, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mapsDiffer, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setAttributes, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPositivePrefixFieldPositions, java.text.DecimalFormat, result: DecimalFormat.format(double, StringBuffer, Format$FieldDelegate)@160 -> DecimalFormat.getPositivePrefixFieldPositions()
method: getNegativeSuffixFieldPositions, java.text.DecimalFormat, result: DecimalFormat.format(double, StringBuffer, Format$FieldDelegate)@222 -> DecimalFormat.getNegativeSuffixFieldPositions()
method: getPositiveSuffixFieldPositions, java.text.DecimalFormat, result: DecimalFormat.format(double, StringBuffer, Format$FieldDelegate)@243 -> DecimalFormat.getPositiveSuffixFieldPositions()
method: set, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getIterator, java.text.CharacterIteratorFieldDelegate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expandAffix, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.FieldPosition, result: DecimalFormat.expandAffix(String)@293 -> FieldPosition.<init>(Format$Field, int)
method: <init>, java.text.FieldPosition, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shouldRoundUp, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiply, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiply, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiply, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiply, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkAndSetFastPathStatus, java.text.DecimalFormat, result: DecimalFormat.fastFormat(double)@10 -> DecimalFormat.checkAndSetFastPathStatus()
method: resetFastPathData, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDataChars, java.text.DigitList, result: DigitList.set(boolean, String, boolean, boolean, int, boolean)@14 -> DigitList.getDataChars(int)
method: parseInt, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.DecimalFormat$FastPathData, result: DecimalFormat.resetFastPathData(boolean)@19 -> DecimalFormat$FastPathData.<init>()
method: fastDoubleFormat, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exactRoundUp, java.text.DecimalFormat, result: DecimalFormat.fastDoubleFormat(double, boolean)@71 -> DecimalFormat.exactRoundUp(double, int)
method: collectFractionalDigits, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: collectIntegralDigits, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: localizeDigits, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addAffixes, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prependPrefix, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendSuffix, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getValue, java.time.format.DateTimePrintContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTemporal, java.time.format.DateTimePrintContext, result: DateTimeFormatterBuilder$InstantPrinterParser.format(DateTimePrintContext, StringBuilder)@12 -> DateTimePrintContext.getTemporal()
method: getSecond, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSecond, java.time.LocalTime, result: LocalDateTime.getSecond()@4 -> LocalTime.getSecond()
method: getYear, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, java.lang.AbstractStringBuilder, result: StringBuilder.insert(int, String)@3 -> AbstractStringBuilder.insert(int, String)
method: insert, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, sun.util.locale.provider.DateFormatProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCalendar, java.text.DateFormat, result: DateFormatProviderImpl.getInstance(int, int, Locale)@33 -> DateFormat.getCalendar()
method: applyPattern, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: orElseGet, java.util.Optional, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setTimeZone, java.text.DateFormat, result: DateFormatProviderImpl.getInstance(int, int, Locale)@124 -> DateFormat.setTimeZone(TimeZone)
method: applyPatternImpl, java.text.SimpleDateFormat, result: SimpleDateFormat.applyPattern(String)@2 -> SimpleDateFormat.applyPatternImpl(String)
method: getDateTimePattern, sun.util.locale.provider.LocaleResources, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDateTimePattern, sun.util.locale.provider.LocaleResources, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: eq, java.util.AbstractMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.text.AttributedCharacterIterator$Attribute, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseDouble, java.lang.Double, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseDouble, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.text.DateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readJavaFormatString, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singletonIterator, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$1, result: Collections.singletonIterator(Object)@5 -> Collections$1.<init>(Object)
method: createRunAttributeDataVectors, java.text.AttributedString, result: AttributedString.setAttributes(Map, int)@8 -> AttributedString.createRunAttributeDataVectors()
method: ensureRunBreak, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCValue, com.oracle.svm.core.posix.headers.Signal$GregEnum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseHexString, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCValue, com.oracle.svm.core.posix.headers.Signal$SignalEnum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer, result: FloatingDecimal.readJavaFormatString(String)@788 -> FloatingDecimal$ASCIIToBinaryBuffer.<init>(boolean, int, char[], int)
method: <init>, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributedString$AttributedStringIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Date, result: DateFormat.format(Object, StringBuffer, FieldPosition)@37 -> Date.<init>(long)
method: updateRunInfo, java.text.AttributedString$AttributedStringIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: useDateFormatSymbols, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rangeCheckForAdd, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasNext, java.util.ImmutableCollections$SetN$SetNIterator, result: ImmutableCollections$SetN$SetNIterator.next()@1 -> ImmutableCollections$SetN$SetNIterator.hasNext()
method: outOfBoundsMsg, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subFormat, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compile, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextIndex, java.util.ImmutableCollections$SetN$SetNIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rangeCheckForAdd, java.util.AbstractList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBoundsMsg, java.util.AbstractList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.AbstractList$ListItr, result: AbstractList.listIterator(int)@11 -> AbstractList$ListItr.<init>(AbstractList, int)
method: <init>, java.util.AbstractList$Itr, result: AbstractList$ListItr.<init>(AbstractList, int)@7 -> AbstractList$Itr.<init>(AbstractList)
method: encode, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clone, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stripLeadingZeros, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeDefaultCentury, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHexDigit, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureRunBreak, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.ReferencePipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makeRef, java.util.stream.ForEachOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addAttributeRunData, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ForEachOps$ForEachOp$OfRef, result: ForEachOps.makeRef(Consumer, boolean)@11 -> ForEachOps$ForEachOp$OfRef.<init>(Consumer, boolean)
method: <init>, java.lang.AssertionError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: evaluate, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.AssertionError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isParallel, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: combineOpFlags, java.util.stream.StreamOpFlag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer, result: FloatingDecimal.parseHexString(String)@1408 -> FloatingDecimal$PreparedASCIIToBinaryBuffer.<init>(double, float)
method: sourceSpliterator, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkForComodification, java.util.LinkedList$ListItr, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMask, java.util.stream.StreamOpFlag, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deleteEntry, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.provider.DateFormatProviderImpl, result: JRELocaleProviderAdapter.lambda$getDateFormatProvider$2()@14 -> DateFormatProviderImpl.<init>(LocaleProviderAdapter$Type, Set)
method: <init>, java.text.spi.DateFormatProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isKnown, java.util.stream.StreamOpFlag, result: AbstractPipeline.sourceSpliterator(int)@144 -> StreamOpFlag.isKnown(int)
method: fixAfterDeletion, java.util.TreeMap, result: TreeMap.deleteEntry(TreeMap$Entry)@158 -> TreeMap.fixAfterDeletion(TreeMap$Entry)
method: doubleArraySize, java.text.ChoiceFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doubleArraySize, java.text.ChoiceFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.FieldPosition$Delegate, result: FieldPosition.getFieldDelegate()@5 -> FieldPosition$Delegate.<init>(FieldPosition)
method: nextDouble, java.text.ChoiceFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextDouble, java.text.ChoiceFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTime, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseAmbiguousDatesAsAfter, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.AbstractStringBuilder, result: StringBuilder.getChars(int, int, char[], int)@6 -> AbstractStringBuilder.getChars(int, int, char[], int)
method: fractionOnly, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ForEachOps$ForEachOp, result: ForEachOps$ForEachOp$OfRef.<init>(Consumer, boolean)@2 -> ForEachOps$ForEachOp.<init>(boolean)
method: toISODayOfWeek, java.text.CalendarBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: zeroPaddingNumber, java.text.SimpleDateFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clone, java.text.Format, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clone, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZoneIndex, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isStandaloneStyle, java.util.Calendar, result: Calendar.getDisplayName(int, int, Locale)@32 -> Calendar.isStandaloneStyle(int)
method: isNarrowFormatStyle, java.util.Calendar, result: Calendar.getDisplayName(int, int, Locale)@40 -> Calendar.isNarrowFormatStyle(int)
method: getFieldStrings, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: retrieveFieldValueName, sun.util.locale.provider.CalendarDataUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalizeCalendarType, sun.util.locale.provider.CalendarDataUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toStandaloneStyle, java.util.Calendar, result: Calendar.getDisplayName(int, int, Locale)@89 -> Calendar.toStandaloneStyle(int)
method: loadLookup, java.util.ListResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.resources.BreakIteratorInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ListResourceBundle, result: BreakIteratorInfo.<init>()@1 -> ListResourceBundle.<init>()
method: loadLookup, sun.util.resources.OpenListResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ResourceBundle, result: ListResourceBundle.<init>()@1 -> ResourceBundle.<init>()
method: handleGetObject, sun.util.resources.OpenListResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPackageName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getResourceAsStream, sun.util.resources.BreakIteratorResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doPrivileged, java.security.AccessController, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTimeImpl, java.util.Date, result: Date.getTime()@1 -> Date.getTimeImpl()
method: normalize, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Number, result: AtomicLong.<init>(long)@1 -> Number.<init>()
method: getCalendarSystem, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getJulianCalendar, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getModule, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: evaluateParallel, java.util.stream.ForEachOps$ForEachOp, result: ForEachOps$ForEachOp$OfRef.evaluateParallel(PipelineHelper, Spliterator)@3 -> ForEachOps$ForEachOp.evaluateParallel(PipelineHelper, Spliterator)
method: getResourceAsStream, java.lang.Module, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Vector$ListItr, result: Vector.listIterator()@6 -> Vector$ListItr.<init>(Vector, int)
method: <init>, java.util.Vector$Itr, result: Vector.iterator()@5 -> Vector$Itr.<init>(Vector)
method: normalize, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getString, java.text.AttributedString$AttributedStringIterator, result: AttributedString$AttributedStringIterator.equals(Object)@26 -> AttributedString$AttributedStringIterator.getString()
method: getCalendarSystem, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCalendarSystem, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: grow, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: grow, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clear, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newCapacity, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hugeCapacity, java.util.Vector, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: convertToAbbr, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ForEachOps$ForEachOrderedTask, result: ForEachOps$ForEachOp.evaluateParallel(PipelineHelper, Spliterator)@14 -> ForEachOps$ForEachOrderedTask.<init>(PipelineHelper, Spliterator, Sink)
method: invoke, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMillisOf, java.util.Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ForEachOps$ForEachTask, result: ForEachOps$ForEachOp.evaluateParallel(PipelineHelper, Spliterator)@35 -> ForEachOps$ForEachTask.<init>(PipelineHelper, Spliterator, Sink)
method: internalSetIndex, java.text.AttributedString$AttributedStringIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charAt, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fromClass, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wrapSink, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReferencePipeline$2$1, result: ReferencePipeline$2.opWrapSink(int, Sink)@6 -> ReferencePipeline$2$1.<init>(ReferencePipeline$2, Sink)
method: <init>, java.util.stream.Sink$ChainedReference, result: ReferencePipeline$2$1.<init>(ReferencePipeline$2, Sink)@7 -> Sink$ChainedReference.<init>(Sink)
method: matchesField, java.text.FieldPosition, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributedString$AttributeMap, result: AttributedString$AttributedStringIterator.getAttributes()@61 -> AttributedString$AttributeMap.<init>(AttributedString, int, int, int)
method: getTypeID, java.lang.Class, result: Class.isAssignableFromHub(Class)@1 -> Class.getTypeID()
method: <init>, java.util.concurrent.CountedCompleter, result: ForEachOps$ForEachTask.<init>(PipelineHelper, Spliterator, Sink)@2 -> CountedCompleter.<init>(CountedCompleter)
method: suggestTargetSize, java.util.stream.AbstractTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Hashtable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLeafTarget, java.util.stream.AbstractTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Hashtable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Dictionary, result: Hashtable.<init>(int, float)@1 -> Dictionary.<init>()
method: matchesField, java.text.FieldPosition, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doInvoke, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reportException, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkForComodification, java.util.AbstractList$Itr, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ForkJoinTask, result: CountedCompleter.<init>(CountedCompleter)@1 -> ForkJoinTask.<init>()
method: evaluateSequential, java.util.stream.ForEachOps$ForEachOp, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasRememberedSet, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: GreyToBlackObjRefVisitor.visitObjectReferenceInline(Pointer, int, boolean, Object)@161 -> ObjectHeaderImpl.hasRememberedSet(UnsignedWord)
method: getAttribute, java.text.AttributedString$AttributedStringIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAttributeCheckRange, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAttribute, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: testUnalignedBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: ObjectHeaderImpl.isUnalignedObject(Object)@32 -> ObjectHeaderImpl.testUnalignedBit(UnsignedWord)
method: valuesMatch, java.text.AttributedString, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnclosingAlignedHeapChunkFromPointer, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyInto, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getStreamAndOpFlags, java.util.stream.AbstractPipeline, result: AbstractPipeline.copyInto(Sink, Spliterator)@9 -> AbstractPipeline.getStreamAndOpFlags()
method: copyIntoWithCancel, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCardTableStart, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getResourceKey, sun.util.locale.provider.CalendarNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectIndex, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectOffset, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectsStart, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFence, java.util.HashMap$HashMapSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, result: AlignedHeapChunk.getObjectIndex(AlignedHeapChunk$AlignedHeader, Pointer)@7 -> CardTable.memoryOffsetToIndex(UnsignedWord)
method: isDirtyEntryAtIndexUnchecked, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multAddMe, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readEntryAtIndexUnchecked, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, result: CardTable.cleanEntryAtIndex(Pointer, UnsignedWord)@2 -> CardTable.indexToTableOffset(UnsignedWord)
method: multByPow52, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDirtyEntry, com.oracle.svm.core.genscavenge.CardTable, result: CardTable.isDirtyEntryAtIndexUnchecked(Pointer, UnsignedWord)@5 -> CardTable.isDirtyEntry(int)
method: <init>, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dirtyEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnclosingUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnclosingUnalignedHeapChunkFromPointer, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: UnalignedHeapChunk.getEnclosingUnalignedHeapChunk(Object)@6 -> UnalignedHeapChunk.getEnclosingUnalignedHeapChunkFromPointer(Pointer)
method: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, result: CalendarNameProviderImpl.getDisplayNameImpl(String, int, int, int, Locale, boolean)@262 -> CalendarNameProviderImpl.getBaseStyle(int)
method: getCardTableStart, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectIndex, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(Object, boolean)@10 -> UnalignedHeapChunk.getObjectIndex()
method: toStyleName, sun.util.locale.provider.CalendarNameProviderImpl, result: CalendarNameProviderImpl.getResourceKeyFor(LocaleProviderAdapter$Type, String, int, int, boolean)@315 -> CalendarNameProviderImpl.toStyleName(int)
method: doExec, java.util.concurrent.ForkJoinTask, result: ForkJoinTask.doInvoke()@1 -> ForkJoinTask.doExec()
method: isNamed, java.lang.Module, result: Module.toString()@1 -> Module.isNamed()
method: checkForComodification, java.util.Vector$Itr, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.AttributeEntry, result: AttributedString$AttributeMap.entrySet()@128 -> AttributeEntry.<init>(AttributedCharacterIterator$Attribute, Object)
method: newMultiArrayRecursion, com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: awaitJoin, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: externalAwaitDone, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getThrowableException, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.CancellationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rethrow, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expungeStaleExceptions, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getParameterTypes, java.lang.reflect.Constructor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newInstance, java.lang.reflect.Constructor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: uncheckedThrow, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setExceptionalCompletion, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setDone, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: recordExceptionalCompletion, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, result: ForkJoinPool.awaitJoin(ForkJoinPool$WorkQueue, ForkJoinTask, long)@3 -> ThreadLocalRandom.nextSecondarySeed()
method: helpCC, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryRemoveAndExec, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAndBitwiseOr, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAcquire, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSet, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkAccess, java.lang.reflect.AccessibleObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getModifiers, java.lang.Class, result: Constructor.newInstance(Object[])@32 -> Class.getModifiers()
method: toMillis, java.util.concurrent.TimeUnit, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: acquireConstructorAccessor, java.lang.reflect.Constructor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryCompensate, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: internalWait, java.util.concurrent.ForkJoinTask, result: ForkJoinPool.awaitJoin(ForkJoinPool$WorkQueue, ForkJoinTask, long)@366 -> ForkJoinTask.internalWait(long)
method: copy, java.lang.reflect.Constructor, result: ReflectAccess.copyConstructor(Constructor)@1 -> Constructor.copy()
method: <init>, java.lang.reflect.Constructor, result: Constructor.copy()@53 -> Constructor.<init>(Class, Class[], Class[], int, int, String, byte[], byte[])
method: getAndAdd, java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryExternalHelp, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ForkJoinTask$ExceptionNode, result: ForkJoinTask.recordExceptionalCompletion(Throwable)@71 -> ForkJoinTask$ExceptionNode.<init>(ForkJoinTask, Throwable, ForkJoinTask$ExceptionNode, ReferenceQueue)
method: abnormalCompletion, java.util.concurrent.ForkJoinTask, result: ForkJoinTask.recordExceptionalCompletion(Throwable)@121 -> ForkJoinTask.abnormalCompletion(int)
method: getAndBitwiseOrInt, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeCommonPool, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, result: ForkJoinTask.tryExternalHelp()@20 -> ForkJoinPoolCommonAccessor.get()
method: externalHelpComplete, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: weakCompareAndSetInt, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryExternalUnpush, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: weakCompareAndSet, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doCompute, java.util.stream.ForEachOps$ForEachOrderedTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ForEachOps$ForEachOrderedTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addToPendingCount, java.util.concurrent.CountedCompleter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fork, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPendingCount, java.util.concurrent.CountedCompleter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryLockedUnpush, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExceptionalStatus, java.util.concurrent.ForkJoinTask, result: CountedCompleter.internalPropagateException(Throwable)@36 -> ForkJoinTask.isExceptionalStatus(int)
method: tryComplete, java.util.concurrent.CountedCompleter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.AbstractExecutorService, result: ForkJoinPool.<init>(byte)@1 -> AbstractExecutorService.<init>()
method: newInstanceFromSystemProperty, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ForEachOps$ForEachTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAndAdd, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: push, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: externalPush, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: propagateCompletion, java.util.concurrent.CountedCompleter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: quietlyComplete, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: availableProcessors, java.lang.Runtime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trySplit, java.util.HashMap$KeySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAlignment, com.oracle.svm.core.config.ObjectLayout, result: UnalignedHeapChunk.getChunkSizeForObject(UnsignedWord)@7 -> ObjectLayout.getAlignment()
method: setRelease, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAcquire, java.lang.invoke.VarHandleInts$FieldInstanceReadOnly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fullFence, java.lang.invoke.VarHandle, result: ForkJoinPool$WorkQueue.push(ForkJoinTask)@75 -> VarHandle.fullFence()
method: signalWork, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: growArray, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ForkJoinPool$WorkQueue, result: ForkJoinPool.externalPush(ForkJoinTask)@103 -> ForkJoinPool$WorkQueue.<init>(ForkJoinPool, ForkJoinWorkerThread)
method: tryLockPhase, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lockedPush, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.RejectedExecutionException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: builder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exactOutputSizeIfKnown, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$FixedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: builder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$ArrayNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstanceSize, com.oracle.svm.core.hub.LayoutEncoding, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@67 -> LayoutEncoding.getInstanceSize(int)
method: <init>, java.util.stream.Nodes$SpinedNodeBuilder, result: Nodes.builder()@4 -> Nodes$SpinedNodeBuilder.<init>()
method: <init>, java.util.stream.SpinedBuffer, result: Nodes$SpinedNodeBuilder.<init>()@1 -> SpinedBuffer.<init>()
method: <init>, java.util.stream.AbstractSpinedBuffer, result: SpinedBuffer.<init>()@1 -> AbstractSpinedBuffer.<init>()
method: clear, java.util.stream.SpinedBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClass, java.lang.reflect.Constructor, result: Constructor.equals(Object)@17 -> Constructor.getDeclaringClass()
method: ensureCapacity, java.util.stream.SpinedBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inflateSpine, java.util.stream.SpinedBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: primitiveCopyForward, com.oracle.svm.core.graal.jdk.ArraycopySnippets, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: constructorModifiers, java.lang.reflect.Modifier, result: Constructor.toString()@1 -> Modifier.constructorModifiers()
method: queueSize, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isApparentlyUnblocked, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.SpinedBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: accept, java.util.stream.SpinedBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releasePhaseLock, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSet, java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAddWorker, java.util.concurrent.ForkJoinPool, result: ForkJoinPool.signalWork()@33 -> ForkJoinPool.tryAddWorker(long)
method: toString, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createWorker, java.util.concurrent.ForkJoinPool, result: ForkJoinPool.tryAddWorker(long)@42 -> ForkJoinPool.createWorker()
method: forName, com.oracle.svm.core.hub.ClassForNameSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forNameOrNull, com.oracle.svm.core.hub.ClassForNameSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ClassNotFoundException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ReflectiveOperationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deregisterWorker, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: weakCompareAndSet, java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cancelAll, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryTerminate, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: helpExpungeStaleExceptions, java.util.concurrent.ForkJoinTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNaN, java.lang.Float, result: HashMap.<init>(int, float)@51 -> Float.isNaN(float)
method: weakCompareAndSetLong, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNaN, java.lang.Double, result: Formatter$FormatSpecifier.print(double, Locale)@26 -> Double.isNaN(double)
method: poll, java.util.concurrent.ForkJoinPool$WorkQueue, result: ForkJoinPool$WorkQueue.cancelAll()@1 -> ForkJoinPool$WorkQueue.poll()
method: cancelIgnoringExceptions, java.util.concurrent.ForkJoinTask, result: ForkJoinPool$WorkQueue.cancelAll()@10 -> ForkJoinTask.cancelIgnoringExceptions(ForkJoinTask)
method: verifyAccess, java.lang.reflect.AccessibleObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newIllegalAccessException, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printStackTraceWhenAccessFails, java.lang.reflect.AccessibleObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isProtected, java.lang.reflect.Modifier, result: AccessibleObject.verifyAccess(Class, Class, Class, int)@19 -> Modifier.isProtected(int)
method: slowVerifyAccess, java.lang.reflect.AccessibleObject, result: AccessibleObject.verifyAccess(Class, Class, Class, int)@80 -> AccessibleObject.slowVerifyAccess(Class, Class, Class, int)
method: isExported, java.lang.Module, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCallerClass, com.oracle.svm.core.jdk.StackTraceUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCallerClass, com.oracle.svm.core.jdk.StackTraceUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.jdk.GetCallerClassVisitor, result: StackTraceUtils.getCallerClass(Pointer, int)@5 -> GetCallerClassVisitor.<init>(int)
method: <init>, java.lang.IllegalAccessException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initLevel, jdk.internal.misc.VM, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: privilegedGetProperty, sun.security.action.GetPropertyAction, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: verifyMemberAccess, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logIfExportedForIllegalAccess, java.lang.reflect.AccessibleObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: illegalAccessLogger, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logIfExportedForIllegalAccess, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExportedForIllegalAccess, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isReflectivelyExported, java.lang.System$2, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: log, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: verifyModuleAccess, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getClassAccessFlags, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSameClassPackage, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getClassLoader, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPrivate, java.lang.reflect.Modifier, result: Reflection.verifyMemberAccess(Class, Class, Class, int)@63 -> Modifier.isPrivate(int)
method: areNestMates, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSubclassOf, jdk.internal.reflect.Reflection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implIsExportedOrOpen, java.lang.Module, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1, result: ForkJoinPool$DefaultForkJoinWorkerThreadFactory.newThread(ForkJoinPool)@6 -> ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1.<init>(ForkJoinPool$DefaultForkJoinWorkerThreadFactory, ForkJoinPool)
method: doPrivileged, java.security.AccessController, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAndSet, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releaseFence, java.lang.invoke.VarHandle, result: ForkJoinPool$WorkQueue.growArray(boolean)@123 -> VarHandle.releaseFence()
method: <init>, java.util.concurrent.RejectedExecutionException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: runtimeTypeCheck, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reflectiveTypeCheck, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setRelease, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setOpaque, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equalContext, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ForkJoinWorkerThread, result: ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1.run()@11 -> ForkJoinWorkerThread.<init>(ForkJoinPool, ClassLoader)
method: equalPDs, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setContextClassLoader, java.lang.Thread, result: ForkJoinWorkerThread.<init>(ForkJoinPool, ClassLoader)@8 -> Thread.setContextClassLoader(ClassLoader)
method: registerWorker, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equalLimitedContext, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setDaemon, java.lang.Thread, result: ForkJoinPool.registerWorker(ForkJoinWorkerThread)@2 -> Thread.setDaemon(boolean)
method: <init>, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: containsAllLimits, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlive, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNextPC, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: concat, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setName, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: containsAllPDs, java.security.AccessControlContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isReflectivelyExported, java.lang.Module, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: log, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loudWarning, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hash, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.module.IllegalAccessLogger$Usage, result: IllegalAccessLogger.log(Class, String, Supplier)@86 -> IllegalAccessLogger$Usage.<init>(String, int)
method: isReflectivelyExportedOrOpen, java.lang.Module, result: Module.isReflectivelyExported(String, Module)@4 -> Module.isReflectivelyExportedOrOpen(String, Module, boolean)
method: <init>, java.lang.Thread, result: Thread.<init>(ThreadGroup, Runnable, String, long)@8 -> Thread.<init>(ThreadGroup, Runnable, String, long, AccessControlContext, boolean)
method: initializeNewThread, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, result: StackWalker.walk(Function)@23 -> Target_java_lang_StackWalker$StackFrameSpliterator.<init>(StackWalker, JavaStackWalk)
method: <init>, java.util.WeakHashMap$EntrySet, result: WeakHashMap.entrySet()@19 -> WeakHashMap$EntrySet.<init>(WeakHashMap)
method: runWorker, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: invalidate, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, result: StackWalker.walk(Function)@50 -> Target_java_lang_StackWalker$StackFrameSpliterator.invalidate()
method: codeSource, jdk.internal.module.IllegalAccessLogger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scan, java.util.concurrent.ForkJoinPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setPriority, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMaxPriority, java.lang.ThreadGroup, result: Thread.setPriority(int)@34 -> ThreadGroup.getMaxPriority()
method: setPriority0, java.lang.Thread, result: Thread.setPriority(int)@52 -> Thread.setPriority0(int)
method: parkUntil, java.util.concurrent.locks.LockSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setNativeName, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setNativeName, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maskNull, java.util.WeakHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expungeStaleEntries, java.util.WeakHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexFor, java.util.WeakHashMap, result: WeakHashMap.put(Object, Object)@23 -> WeakHashMap.indexFor(int, int)
method: hasThreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hash, java.util.WeakHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCodeSource, java.security.ProtectionDomain, result: IllegalAccessLogger.codeSource(Class)@19 -> ProtectionDomain.getCodeSource()
method: getTable, java.util.WeakHashMap, result: WeakHashMap.put(Object, Object)@13 -> WeakHashMap.getTable()
method: getLocation, java.security.CodeSource, result: IllegalAccessLogger.codeSource(Class)@28 -> CodeSource.getLocation()
method: toList, java.util.stream.Collectors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: eq, java.util.WeakHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.WeakHashMap$Entry, result: WeakHashMap.put(Object, Object)@129 -> WeakHashMap$Entry.<init>(Object, Object, ReferenceQueue, int, WeakHashMap$Entry)
method: start0, java.lang.Thread, result: Thread.start()@26 -> Thread.start0()
method: yellowAndRedZoneSize, com.oracle.svm.core.graal.snippets.StackOverflowCheckImpl, result: Thread.start0()@79 -> StackOverflowCheckImpl.yellowAndRedZoneSize()
method: newTable, java.util.WeakHashMap, result: WeakHashMap.resize(int)@23 -> WeakHashMap.newTable(int)
method: startThread, com.oracle.svm.core.thread.JavaThreads, result: Thread.start0()@105 -> JavaThreads.startThread(Thread, long)
method: transfer, java.util.WeakHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mix32, java.util.concurrent.ThreadLocalRandom, result: ThreadLocalRandom.nextSecondarySeed()@51 -> ThreadLocalRandom.mix32(long)
method: getPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: PosixJavaThreads.getPthreadIdentifier(Thread)@1 -> PosixJavaThreads.toTarget(Thread)
method: max, com.oracle.svm.core.util.UnsignedUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malloc, org.graalvm.nativeimage.UnmanagedMemory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prepareStartData, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGlobal, org.graalvm.nativeimage.ObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGlobalHandles, com.oracle.svm.core.handles.ObjectHandlesFeature$ObjectHandlesSupportImpl, result: ObjectHandles.getGlobal()@8 -> ObjectHandlesFeature$ObjectHandlesSupportImpl.getGlobalHandles()
method: setVolatile, java.lang.invoke.VarHandleObjects$Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Collectors$CollectorImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makeDropWhileRef, java.util.stream.WhileOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: castingIdentity, java.util.stream.Collectors, result: Collectors$CollectorImpl.<init>(Supplier, BiConsumer, BinaryOperator, Set)@4 -> Collectors.castingIdentity()
method: <init>, java.util.stream.Collectors$CollectorImpl, result: Collectors$CollectorImpl.<init>(Supplier, BiConsumer, BinaryOperator, Set)@9 -> Collectors$CollectorImpl.<init>(Supplier, BiConsumer, BinaryOperator, Function, Set)
method: <init>, java.util.stream.WhileOps$1Op, result: WhileOps.makeDropWhileRef(AbstractPipeline, Predicate)@17 -> WhileOps$1Op.<init>(AbstractPipeline, StreamShape, int, Predicate)
method: <init>, java.util.stream.ReferencePipeline$StatefulOp, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextLocalTask, java.util.concurrent.ForkJoinPool$WorkQueue, result: ForkJoinPool$WorkQueue.topLevelExec(ForkJoinTask, ForkJoinPool$WorkQueue, int)@27 -> ForkJoinPool$WorkQueue.nextLocalTask()
method: threadStartRoutine, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decrementAndGet, java.util.concurrent.atomic.AtomicInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: beforeThreadRun, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: noteThreadStart, com.oracle.svm.core.jdk.ManagementSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exit, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: noteThreadFinish, com.oracle.svm.core.jdk.ManagementSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.module.IllegalAccessLogger$Usages, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedHashMap, result: IllegalAccessLogger$Usages.<init>()@1 -> LinkedHashMap.<init>()
method: singleton, com.oracle.svm.core.jdk.SubstrateThreadMXBean, result: ManagementSupport.noteThreadFinish(Thread)@0 -> SubstrateThreadMXBean.singleton()
method: noteThreadStart, com.oracle.svm.core.jdk.SubstrateThreadMXBean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: noteThreadFinish, com.oracle.svm.core.jdk.SubstrateThreadMXBean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: max, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.util.concurrent.atomic.AtomicInteger, result: SubstrateThreadMXBean.noteThreadStart(Thread)@31 -> AtomicInteger.set(int)
method: unmaskNull, java.util.WeakHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.WeakHashMap$EntryIterator, result: WeakHashMap$EntrySet.iterator()@8 -> WeakHashMap$EntryIterator.<init>(WeakHashMap)
method: <init>, java.util.WeakHashMap$HashIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: castingArray, java.util.stream.Nodes, result: WhileOps$1Op.opEvaluateParallelLazy(PipelineHelper, Spliterator)@16 -> Nodes.castingArray()
method: makeRef, java.util.stream.SliceOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flags, java.util.stream.SliceOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SliceOps$1, result: SliceOps.makeRef(AbstractPipeline, long, long)@47 -> SliceOps$1.<init>(AbstractPipeline, StreamShape, int, long, long)
method: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef, result: WhileOps$UnorderedWhileSpliterator$OfRef$Dropping.<init>(Spliterator, boolean, Predicate)@4 -> WhileOps$UnorderedWhileSpliterator$OfRef.<init>(Spliterator, boolean, Predicate)
method: <init>, java.util.stream.WhileOps$DropWhileTask, result: WhileOps$1Op.opEvaluateParallel(PipelineHelper, Spliterator, IntFunction)@8 -> WhileOps$DropWhileTask.<init>(AbstractPipeline, PipelineHelper, Spliterator, IntFunction)
method: <init>, java.util.stream.AbstractTask, result: WhileOps$DropWhileTask.<init>(AbstractPipeline, PipelineHelper, Spliterator, IntFunction)@3 -> AbstractTask.<init>(PipelineHelper, Spliterator)
method: <init>, java.util.stream.StreamSpliterators$WrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, result: StreamSpliterators$WrappingSpliterator.<init>(PipelineHelper, Supplier, boolean)@4 -> StreamSpliterators$AbstractWrappingSpliterator.<init>(PipelineHelper, Supplier, boolean)
method: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, result: Target_java_lang_StackWalker$StackFrameSpliterator.tryAdvance(Consumer)@122 -> Target_java_lang_StackWalker$StackFrameImpl.<init>(StackWalker, FrameInfoQueryResult)
method: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator, result: WhileOps$UnorderedWhileSpliterator$OfRef.<init>(Spliterator, boolean, Predicate)@3 -> WhileOps$UnorderedWhileSpliterator.<init>(Spliterator, boolean)
method: getTargetSize, java.util.stream.AbstractTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.Permissions, result: Class.lambda$static$0()@4 -> Permissions.<init>()
method: <init>, java.util.concurrent.atomic.AtomicBoolean, result: WhileOps$UnorderedWhileSpliterator.<init>(Spliterator, boolean)@24 -> AtomicBoolean.<init>()
method: <init>, java.security.PermissionCollection, result: Permissions.<init>()@1 -> PermissionCollection.<init>()
method: setPendingCount, java.util.concurrent.CountedCompleter, result: AbstractTask.compute()@74 -> CountedCompleter.setPendingCount(int)
method: setLocalResult, java.util.stream.AbstractTask, result: WhileOps$DropWhileTask.onCompletion(CountedCompleter)@112 -> AbstractTask.setLocalResult(Object)
method: init, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toStackTraceElement, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, result: Target_java_lang_StackWalker$StackFrameImpl.toString()@1 -> Target_java_lang_StackWalker$StackFrameImpl.toStackTraceElement()
method: calcSliceFence, java.util.stream.SliceOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$SliceSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toStreamFlags, java.util.stream.StreamOpFlag, result: StreamSpliterators$AbstractWrappingSpliterator.characteristics()@11 -> StreamOpFlag.toStreamFlags(int)
method: <init>, java.util.stream.StreamSpliterators$SliceSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toCharacteristics, java.util.stream.StreamOpFlag, result: StreamSpliterators$AbstractWrappingSpliterator.characteristics()@14 -> StreamOpFlag.toCharacteristics(int)
method: doLeaf, java.util.stream.WhileOps$DropWhileTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isOrdered, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SliceOps$SliceTask, result: SliceOps$1.opEvaluateParallelLazy(PipelineHelper, Spliterator)@102 -> SliceOps$SliceTask.<init>(AbstractPipeline, PipelineHelper, Spliterator, IntFunction, long, long)
method: <init>, java.util.stream.AbstractShortCircuitTask, result: SliceOps$SliceTask.<init>(AbstractPipeline, PipelineHelper, Spliterator, IntFunction, long, long)@3 -> AbstractShortCircuitTask.<init>(PipelineHelper, Spliterator)
method: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef, result: WhileOps$UnorderedWhileSpliterator$OfRef$Dropping.<init>(Spliterator, WhileOps$UnorderedWhileSpliterator$OfRef$Dropping)@3 -> WhileOps$UnorderedWhileSpliterator$OfRef.<init>(Spliterator, WhileOps$UnorderedWhileSpliterator$OfRef)
method: makeRef, java.util.stream.ReduceOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReduceOps$3, result: ReduceOps.makeRef(Collector)@38 -> ReduceOps$3.<init>(StreamShape, BinaryOperator, BiConsumer, Supplier, Collector)
method: wrap, java.util.stream.StreamSpliterators$WrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$WrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, result: StreamSpliterators$WrappingSpliterator.<init>(PipelineHelper, Spliterator, boolean)@4 -> StreamSpliterators$AbstractWrappingSpliterator.<init>(PipelineHelper, Spliterator, boolean)
method: isRoot, java.util.stream.AbstractTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPreserved, java.util.stream.StreamOpFlag, result: WhileOps$DropWhileTask.doLeaf()@34 -> StreamOpFlag.isPreserved(int)
method: <init>, java.util.stream.WhileOps$1Op$1OpSink, result: WhileOps$1Op.opWrapSink(Sink, boolean)@7 -> WhileOps$1Op$1OpSink.<init>(WhileOps$1Op, Sink, boolean)
method: <init>, java.util.stream.SliceOps$1$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.atomic.AtomicReference, result: AbstractShortCircuitTask.<init>(PipelineHelper, Spliterator)@12 -> AtomicReference.<init>(Object)
method: makeChild, java.util.stream.WhileOps$DropWhileTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkCancelOnCount, java.util.stream.WhileOps$UnorderedWhileSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.WhileOps$DropWhileTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLeaf, java.util.stream.AbstractTask, result: WhileOps$DropWhileTask.onCompletion(CountedCompleter)@1 -> AbstractTask.isLeaf()
method: <init>, java.util.stream.AbstractTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReduceOps$ReduceOp, result: ReduceOps$3.<init>(StreamShape, BinaryOperator, BiConsumer, Supplier, Collector)@24 -> ReduceOps$ReduceOp.<init>(StreamShape)
method: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: merge, java.util.stream.WhileOps$DropWhileTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator, result: StreamSpliterators$UnorderedSliceSpliterator$OfRef.<init>(Spliterator, long, long)@5 -> StreamSpliterators$UnorderedSliceSpliterator.<init>(Spliterator, long, long)
method: getLocalResult, java.util.stream.AbstractTask, result: WhileOps$DropWhileTask.merge()@22 -> AbstractTask.getLocalResult()
method: getParent, java.util.stream.AbstractTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: conc, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doTruncate, java.util.stream.WhileOps$DropWhileTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeBci, com.oracle.svm.core.code.FrameInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: elementAt, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: onCompletion, java.util.stream.AbstractTask, result: WhileOps$DropWhileTask.onCompletion(CountedCompleter)@117 -> AbstractTask.onCompletion(CountedCompleter)
method: tryAdvance, java.util.stream.StreamSpliterators$WrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doAdvance, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fillBuffer, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, java.lang.Module, result: IllegalAccessLogger.isJavaBase(StackWalker$StackFrame)@13 -> Module.getName()
method: getCompleter, java.util.concurrent.CountedCompleter, result: AbstractTask.getParent()@1 -> CountedCompleter.getCompleter()
method: spliterator, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.Spliterators, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.security.Permissions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isReadOnly, java.security.PermissionCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadImpl, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.SecurityException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, java.net.NetworkInterface, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPermissionCollection, java.security.Permissions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.SpinedBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkFromToBounds, java.util.Spliterators, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getExecutableName, org.graalvm.nativeimage.ProcessProperties, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Spliterators$ArraySpliterator, result: Spliterators.spliterator(Object[], int, int, int)@21 -> Spliterators$ArraySpliterator.<init>(Object[], int, int, int)
method: <init>, java.util.stream.SpinedBuffer$1Splitr, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getExecutableName, com.oracle.svm.core.posix.linux.LinuxProcessPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$ConcNode$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$ConcNode$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initIDs, sun.nio.ch.FileChannelImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$ConcNode$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toURI, java.io.File, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, sun.nio.fs.UnixNativeDispatcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$ConcNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initIDs, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: slashify, java.io.File, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newInstance, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$ConcNode$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredMethod, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredMethods, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$AbstractConcNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toURL, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getConstructor, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fromURI, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.CodeSource, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getConstructors, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredConstructors, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: urlNoFragString, sun.net.util.URLUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.ProtectionDomain, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.ProtectionDomain$Key, result: ProtectionDomain.<init>(CodeSource, PermissionCollection)@15 -> ProtectionDomain$Key.<init>(ProtectionDomain)
method: realpath, com.oracle.svm.core.posix.PosixProcessPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.URI, result: URI.<init>(String, String, String, String)@9 -> URI.<init>(String, String, String, int, String, String, String)
method: <init>, java.io.File, result: File.getAbsoluteFile()@17 -> File.<init>(String, int)
method: getBooleanAttributes, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadLibrary, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProtocol, java.net.URL, result: URLUtil.urlNoFragString(URL)@9 -> URL.getProtocol()
method: hashCode, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHost, java.net.URL, result: URLUtil.urlNoFragString(URL)@36 -> URL.getHost()
method: getPort, java.net.URL, result: URLUtil.urlNoFragString(URL)@56 -> URL.getPort()
method: isObjectArray, com.oracle.svm.core.hub.LayoutEncoding, result: InteriorObjRefWalker.walkObjectInline(Object, ObjectReferenceVisitor)@17 -> LayoutEncoding.isObjectArray(int)
method: getDefaultPort, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAssignableFromHub, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ArrayStoreException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFile, java.net.URL, result: URLUtil.urlNoFragString(URL)@92 -> URL.getFile()
method: <init>, java.lang.NullPointerException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashIgnoringCase, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLower, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hash, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.NullPointerException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalizedHash, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isOpaque, java.net.URI, result: URI.hashCode()@28 -> URI.isOpaque()
method: <init>, java.lang.InstantiationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalArgumentException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, result: HeapPolicy.samplePhysicalMemorySize()@3 -> HeapImpl.getGCImpl()
method: <init>, java.security.Permissions$1, result: Permissions.getPermissionCollection(Permission, boolean)@40 -> Permissions$1.<init>(Permissions, Permission, boolean)
method: <init>, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTypeName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: calcSize, java.util.stream.SliceOps, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setLocalResult, java.util.stream.AbstractShortCircuitTask, result: SliceOps$SliceTask.onCompletion(CountedCompleter)@155 -> AbstractShortCircuitTask.setLocalResult(Object)
method: guaranteeOkayToBlock, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getArrayIndexScale, com.oracle.svm.core.hub.LayoutEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSet, java.security.Policy, result: ProtectionDomain.toString()@132 -> Policy.isSet()
method: equalIgnoringCase, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equal, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLocalResult, java.util.stream.AbstractShortCircuitTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: seeAllp, java.security.ProtectionDomain, result: ProtectionDomain.toString()@138 -> ProtectionDomain.seeAllp()
method: count, java.util.stream.Nodes$AbstractConcNode, result: Nodes$ConcNode.truncate(long, long, IntFunction)@8 -> Nodes$AbstractConcNode.count()
method: <init>, java.lang.NegativeArraySizeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$SliceSpliterator, result: StreamSpliterators$SliceSpliterator$OfRef.<init>(Spliterator, long, long, long, long)@9 -> StreamSpliterators$SliceSpliterator.<init>(Spliterator, long, long, long, long)
method: getEmptyResult, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptyNode, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: longBuilder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makeChild, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StackOverflowError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getShape, java.util.stream.Node, result: Nodes$ConcNode.truncate(long, long, IntFunction)@77 -> Node.getShape()
method: <init>, java.lang.VirtualMachineError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$LongFixedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, result: HeapPolicy.samplePhysicalMemorySize()@6 -> GCImpl.getCollectionEpoch()
method: longBuilder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mergePermissions, java.security.ProtectionDomain, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getYoungUsedBytes, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.AbstractShortCircuitTask, result: SliceOps$SliceTask.<init>(SliceOps$SliceTask, Spliterator)@3 -> AbstractShortCircuitTask.<init>(AbstractShortCircuitTask, Spliterator)
method: getAllocationBeforePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapPolicy.samplePhysicalMemorySize()@26 -> HeapPolicy.getAllocationBeforePhysicalMemorySize()
method: <init>, java.security.ProtectionDomain$1, result: ProtectionDomain.mergePermissions()@17 -> ProtectionDomain$1.<init>(ProtectionDomain)
method: toUpper, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: size, com.oracle.svm.core.heap.PhysicalMemory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getComponentHub, java.lang.Class, result: SubstrateAllocationSnippets.newMultiArrayRecursion(Class, int, Word)@7 -> Class.getComponentHub()
method: getUnsafe, org.graalvm.compiler.serviceprovider.GraalUnsafeAccess, result: IdentityHashCodeSupport.generateIdentityHashCode(Object, int)@9 -> GraalUnsafeAccess.getUnsafe()
method: intBuilder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: permitStatus, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: string, com.oracle.svm.core.log.Log$NoopLog, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@8 -> Log$NoopLog.string(String)
method: checkPath, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.Nodes$ConcNode$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReduceOps$ReduceTask, result: ReduceOps$ReduceOp.evaluateParallel(PipelineHelper, Spliterator)@7 -> ReduceOps$ReduceTask.<init>(ReduceOps$ReduceOp, PipelineHelper, Spliterator)
method: <init>, java.net.URI$Parser, result: URI.<init>(String, String, String, int, String, String, String)@43 -> URI$Parser.<init>(URI, String)
method: getReferenceMapIndex, java.lang.Class, result: InteriorObjRefWalker.walkObjectInline(Object, ObjectReferenceVisitor)@100 -> Class.getReferenceMapIndex()
method: getS4, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parse, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, java.security.Permission, result: ProtectionDomain.mergePermissions()@261 -> Permission.getName()
method: <init>, java.util.stream.Nodes$IntFixedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: intBuilder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: acquirePermits, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$LongArrayNode, result: Nodes$LongFixedNodeBuilder.<init>(long)@2 -> Nodes$LongArrayNode.<init>(long)
method: compareAndSet, java.util.concurrent.atomic.AtomicLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hex, com.oracle.svm.core.log.Log$NoopLog, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@27 -> Log$NoopLog.hex(WordBase)
method: remove, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ArrayIndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newline, com.oracle.svm.core.log.Log$NoopLog, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@30 -> Log$NoopLog.newline()
method: <init>, java.util.stream.Nodes$LongSpinedNodeBuilder, result: Nodes.longBuilder()@4 -> Nodes$LongSpinedNodeBuilder.<init>()
method: <init>, java.lang.IndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doTruncate, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendSchemeSpecificPart, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exitIfAllocationDisallowed, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fatalError, com.oracle.svm.core.posix.PosixLogHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SpinedBuffer$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exit, com.oracle.svm.core.heap.NoAllocationVerifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getU4, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: quote, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SpinedBuffer$OfPrimitive, result: SpinedBuffer$OfDouble.<init>()@1 -> SpinedBuffer$OfPrimitive.<init>()
method: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@49 -> HeapImpl.getHeapPolicy()
method: <init>, java.util.stream.ReduceOps$3ReducingSink, result: ReduceOps$3.makeSink()@16 -> ReduceOps$3ReducingSink.<init>(Supplier, BiConsumer, BinaryOperator)
method: appendAuthority, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReduceOps$Box, result: ReduceOps$3ReducingSink.<init>(Supplier, BiConsumer, BinaryOperator)@16 -> ReduceOps$Box.<init>()
method: doubleBuilder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: safeToInt, org.graalvm.compiler.core.common.NumUtil, result: NonmovableByteArrayReader.pointerTo(NonmovableArray, long)@56 -> NumUtil.safeToInt(long)
method: isLeftCompleted, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCollectOnAllocationPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@52 -> HeapPolicy.getCollectOnAllocationPolicy()
method: completedSize, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendFragment, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.Nodes$ConcNode$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeCauseCollection, com.oracle.svm.core.genscavenge.HeapPolicy$CollectOnAllocationPolicy$Sometimes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$InternalNodeSpliterator, result: Nodes$InternalNodeSpliterator$OfPrimitive.<init>(Node$OfPrimitive)@2 -> Nodes$InternalNodeSpliterator.<init>(Node)
method: <init>, java.util.stream.Nodes$IntArrayNode, result: Nodes$IntFixedNodeBuilder.<init>(long)@2 -> Nodes$IntArrayNode.<init>(long)
method: cancelLaterNodes, java.util.stream.AbstractShortCircuitTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.Nodes$ConcNode$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$DoubleFixedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doubleBuilder, java.util.stream.Nodes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cancel, java.util.stream.AbstractShortCircuitTask, result: SliceOps$SliceTask.cancel()@1 -> AbstractShortCircuitTask.cancel()
method: <init>, java.util.stream.Nodes$IntSpinedNodeBuilder, result: Nodes.intBuilder()@4 -> Nodes$IntSpinedNodeBuilder.<init>()
method: support, com.oracle.svm.core.heap.PhysicalMemory, result: PhysicalMemory.size()@0 -> PhysicalMemory.support()
method: <init>, java.util.stream.SpinedBuffer$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match, java.net.URI, result: URI.quote(String, long, long)@50 -> URI.match(char, long, long)
method: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendEscape, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSpaceChar, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isISOControl, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, result: NativeLibrarySupport.addLibrary(boolean, String, boolean)@249 -> PlatformNativeLibrarySupport.singleton()
method: compareIgnoringCase, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendEncoded, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pointerTo, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Nodes$DoubleArrayNode, result: Nodes$DoubleFixedNodeBuilder.<init>(long)@2 -> Nodes$DoubleArrayNode.<init>(long)
method: <init>, java.util.stream.Nodes$DoubleSpinedNodeBuilder, result: Nodes.doubleBuilder()@4 -> Nodes$DoubleSpinedNodeBuilder.<init>()
method: <init>, java.util.stream.SpinedBuffer$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAbsolute, java.net.URI, result: URL.fromURI(URI)@1 -> URI.isAbsolute()
method: getScheme, java.net.URI, result: URL.fromURI(URI)@18 -> URI.getScheme()
method: getRawFragment, java.net.URI, result: URL.fromURI(URI)@39 -> URI.getRawFragment()
method: size, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRawQuery, java.net.URI, result: URL.fromURI(URI)@46 -> URI.getRawQuery()
method: string, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRawPath, java.net.URI, result: URL.fromURI(URI)@51 -> URI.getRawPath()
method: getHost, java.net.URI, result: URL.fromURI(URI)@89 -> URI.getHost()
method: getPort, java.net.URI, result: URL.fromURI(URI)@104 -> URI.getPort()
method: <init>, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasSize, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl, result: PhysicalMemory.hasSize()@3 -> LinuxPhysicalMemory$PhysicalMemorySupportImpl.hasSize()
method: rawString, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.net.URI, result: URL.fromURI(URI)@135 -> URI.toString()
method: <init>, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doLeaf, java.util.stream.SliceOps$SliceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEnabled, com.oracle.svm.core.log.RealLog, result: CEntryPointSnippets.logException(Throwable)@5 -> RealLog.isEnabled()
method: autoflush, com.oracle.svm.core.log.RealLog, result: VMErrorSubstitutions.doShutdown(String, Throwable)@6 -> RealLog.autoflush(boolean)
method: <init>, java.net.URISyntaxException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scan, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: at, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: currentJavaThreadInitialized, com.oracle.svm.core.thread.JavaThreads, result: LinuxPhysicalMemory$PhysicalMemorySupportImpl.size()@27 -> JavaThreads.currentJavaThreadInitialized()
method: failExpecting, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkChar, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkChars, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.StringWriter, result: CEntryPointSnippets.logException(Throwable)@30 -> StringWriter.<init>()
method: equals, java.security.CodeSigner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseHierarchical, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scan, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.Writer, result: StringWriter.<init>()@1 -> Writer.<init>()
method: <init>, java.security.PermissionsEnumerator, result: Permissions.elements()@16 -> PermissionsEnumerator.<init>(Iterator)
method: getNextEnumWithMore, java.security.PermissionsEnumerator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fail, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureJavaThread, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newline, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$ValuesView, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.URISyntaxException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCase, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$ArrayBuffer$OfRef, result: StreamSpliterators$UnorderedSliceSpliterator$OfRef.forEachRemaining(Consumer)@38 -> StreamSpliterators$ArrayBuffer$OfRef.<init>(int)
method: flush, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$ArrayBuffer, result: StreamSpliterators$ArrayBuffer$OfRef.<init>(int)@1 -> StreamSpliterators$ArrayBuffer.<init>()
method: <init>, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encoderFor, sun.nio.cs.ThreadLocalCoders, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printDiagnostics, com.oracle.svm.core.SubstrateUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.MalformedURLException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.StreamSpliterators$ArrayBuffer$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fromTarget, com.oracle.svm.core.thread.JavaThreads, result: JavaThreads.ensureJavaThread(String, ThreadGroup, boolean)@19 -> JavaThreads.fromTarget(Thread)
method: wrap, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: assignJavaThread, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encode, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prepareNewAllocationChunk, com.oracle.svm.core.genscavenge.ThreadLocalAllocation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getURLStreamHandler, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isBuiltinStreamHandler, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkExternalForm, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.PrintWriter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fastRemove, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: defineString, java.net.URI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.PrintWriter, result: PrintWriter.<init>(Writer)@3 -> PrintWriter.<init>(Writer, boolean)
method: wrap, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: averageBytesPerChar, java.nio.charset.CharsetEncoder, result: CharsetEncoder.encode(CharBuffer)@6 -> CharsetEncoder.averageBytesPerChar()
method: isValidProtocol, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: put, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.StringCharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.io.StringWriter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseURL, java.net.URLStreamHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doLeaf, java.util.stream.ReduceOps$ReduceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, result: Thread.<init>(String, ThreadGroup, boolean)@9 -> UninterruptibleUtils$AtomicReference.<init>()
method: get, java.nio.StringCharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextThreadID, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRawMessage, com.oracle.svm.core.jdk.JDKUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toExternalForm, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: executeHooks, com.oracle.svm.core.jdk.RuntimeSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextThreadNum, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$ValueIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAndSet, java.util.concurrent.atomic.AtomicReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSystemClassLoader, java.lang.ClassLoader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: signed, com.oracle.svm.core.log.Log$NoopLog, result: ThreadLocalAllocation.allocateNewArray(Class, int, ThreadLocalAllocation$Descriptor, boolean)@27 -> Log$NoopLog.signed(int)
method: isPrintDiagnosticsInProgress, com.oracle.svm.core.SubstrateUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptySpliterator, java.util.Spliterators, result: Nodes$EmptyNode$OfRef.spliterator()@0 -> Spliterators.emptySpliterator()
method: toString, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makeChild, java.util.stream.ReduceOps$ReduceTask, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReduceOps$ReduceTask, result: ReduceOps$ReduceTask.makeChild(Spliterator)@6 -> ReduceOps$ReduceTask.<init>(ReduceOps$ReduceTask, Spliterator)
method: object, com.oracle.svm.core.log.Log$NoopLog, result: ThreadLocalAllocation.allocateNewInstance(Class, ThreadLocalAllocation$Descriptor, boolean)@93 -> Log$NoopLog.object(Object)
method: scan, java.net.URI$Parser, result: URI$Parser.checkChars(int, int, long, long, String)@6 -> URI$Parser.scan(int, int, long, long)
method: clear, java.util.stream.SpinedBuffer$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, result: JavaThreads.assignJavaThread(Thread, boolean)@32 -> JavaThreads.setThreadStatus(Thread, int)
method: spliterator, java.util.stream.Nodes$EmptyNode$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getThreadGroup, java.lang.Thread, result: JavaThreads.assignJavaThread(Thread, boolean)@36 -> Thread.getThreadGroup()
method: toTarget, com.oracle.svm.core.thread.JavaThreads, result: JavaThreads.assignJavaThread(Thread, boolean)@41 -> JavaThreads.toTarget(ThreadGroup)
method: spliterator, java.util.stream.Nodes$EmptyNode$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptyDoubleSpliterator, java.util.Spliterators, result: Nodes$EmptyNode$OfDouble.spliterator()@0 -> Spliterators.emptyDoubleSpliterator()
method: emptyIntSpliterator, java.util.Spliterators, result: Nodes$EmptyNode$OfInt.spliterator()@0 -> Spliterators.emptyIntSpliterator()
method: ensureCapacity, java.util.stream.SpinedBuffer$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDaemon, java.lang.Thread, result: JavaThreads.assignJavaThread(Thread, boolean)@56 -> Thread.isDaemon()
method: spliterator, java.util.stream.Nodes$EmptyNode$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.AbstractStringBuilder, result: StringBuilder.<init>()@3 -> AbstractStringBuilder.<init>(int)
method: <init>, java.lang.ClassCastException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptyLongSpliterator, java.util.Spliterators, result: Nodes$EmptyNode$OfLong.spliterator()@0 -> Spliterators.emptyLongSpliterator()
method: inflateSpine, java.util.stream.SpinedBuffer$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsupportedFeature, com.oracle.svm.core.util.VMError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.Nodes$IntSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asPrimitiveArray, java.util.stream.SpinedBuffer$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.jdk.UnsupportedFeatureError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.SpinedBuffer$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Error, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.Nodes$LongSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.SpinedBuffer$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getXmx, com.oracle.svm.core.option.XOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseAuthority, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.Nodes$DoubleSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.stream.SpinedBuffer$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAdvance, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initTryAdvance, java.util.stream.Nodes$InternalNodeSpliterator, result: Nodes$InternalNodeSpliterator$OfPrimitive.tryAdvance(Object)@1 -> Nodes$InternalNodeSpliterator.initTryAdvance()
method: <init>, java.util.stream.SpinedBuffer$OfInt$1Splitr, result: SpinedBuffer$OfInt.spliterator()@15 -> SpinedBuffer$OfInt$1Splitr.<init>(SpinedBuffer$OfInt, int, int, int, int)
method: <init>, java.util.stream.SpinedBuffer$OfDouble$1Splitr, result: SpinedBuffer$OfDouble.spliterator()@15 -> SpinedBuffer$OfDouble$1Splitr.<init>(SpinedBuffer$OfDouble, int, int, int, int)
method: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findNextLeafNode, java.util.stream.Nodes$InternalNodeSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initStack, java.util.stream.Nodes$InternalNodeSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.Spliterators, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Spliterators$LongArraySpliterator, result: Spliterators.spliterator(long[], int, int, int)@21 -> Spliterators$LongArraySpliterator.<init>(long[], int, int, int)
method: spliterator, java.util.Spliterators, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasSize, com.oracle.svm.core.heap.PhysicalMemory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMaximumHeapSizePercent, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Spliterators$DoubleArraySpliterator, result: Spliterators.spliterator(double[], int, int, int)@21 -> Spliterators$DoubleArraySpliterator.<init>(double[], int, int, int)
method: spliterator, java.util.Spliterators, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Spliterators$IntArraySpliterator, result: Spliterators.spliterator(int[], int, int, int)@21 -> Spliterators$IntArraySpliterator.<init>(int[], int, int, int)
method: getObjectEnd, com.oracle.svm.core.hub.LayoutEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSizeFromObject, com.oracle.svm.core.hub.LayoutEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asPrimitiveArray, java.util.stream.Nodes$LongSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChunkSizeForObject, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.SpinedBuffer$OfLong$1Splitr, result: SpinedBuffer$OfLong.spliterator()@15 -> SpinedBuffer$OfLong$1Splitr.<init>(SpinedBuffer$OfLong, int, int, int, int)
method: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: HeapChunkProvider.produceUnalignedChunk(UnsignedWord)@5 -> HeapChunkProvider.log()
method: scanEscape, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: noteFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: HeapChunkProvider.produceUnalignedChunk(UnsignedWord)@31 -> HeapChunkProvider.noteFirstAllocationTime()
method: copyInto, java.util.stream.SpinedBuffer$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocate, com.oracle.svm.core.os.OSCommittedMemoryProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resetUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasMoreElements, java.security.PermissionsEnumerator, result: PermissionsEnumerator.nextElement()@1 -> PermissionsEnumerator.hasMoreElements()
method: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapChunkProvider.produceUnalignedChunk(UnsignedWord)@102 -> HeapPolicy.getZapProducedHeapChunks()
method: copyInto, java.util.stream.Nodes$LongSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ArrayDeque, result: Nodes$InternalNodeSpliterator.initStack()@6 -> ArrayDeque.<init>(int)
method: nextElement, java.security.PermissionsEnumerator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dumpToLog, com.oracle.svm.core.threadlocal.VMThreadLocalInfos, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyOf, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnresolvedPermissions, java.security.Permissions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendTo, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnresolvedPermissions, java.security.UnresolvedPermissionCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSigners, java.lang.Class, result: Permissions.getUnresolvedPermissions(Permission)@38 -> Class.getSigners()
method: parseServer, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resolve, java.security.UnresolvedPermission, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asPrimitiveArray, java.util.stream.Nodes$DoubleSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEachRemaining, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.PermissionsHash, result: Permissions$1.apply(Class)@53 -> PermissionsHash.<init>()
method: resetAlignedHeapChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyInto, java.util.stream.Nodes$DoubleSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: attachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, result: JNIInvocationInterface.DetachCurrentThread(JNIJavaVM)@5 -> JNIFunctionTables.singleton()
method: getGlobalJavaVM, com.oracle.svm.jni.functions.JNIFunctionTables, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPolicyNoCheck, java.security.Policy, result: ProtectionDomain$1.run()@0 -> Policy.getPolicyNoCheck()
method: getPermissions, com.oracle.svm.core.jdk.AllPermissionsPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAddress, com.oracle.svm.jni.JNIThreadLocalEnvironment, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allPermissions, com.oracle.svm.core.jdk.AllPermissionsPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.Nodes$EmptyNode, result: Nodes$EmptyNode$OfRef.forEach(Consumer)@2 -> Nodes$EmptyNode.forEach(Object)
method: getObject, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAdvance, java.util.stream.Nodes$InternalNodeSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asByteBuffer, org.graalvm.nativeimage.c.type.CTypeConversion, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: utf8ToString, com.oracle.svm.core.util.Utf8, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.Nodes$LongSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.SpinedBuffer$OfPrimitive, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dataAddress, com.oracle.svm.jni.functions.JNIFunctionTables, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.util.stream.Nodes$IntSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleton, com.oracle.svm.core.option.XOptions, result: XOptions.getXmx()@0 -> XOptions.singleton()
method: forEach, java.util.stream.Nodes$DoubleSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releaseCurrentThreadOwnedMonitors, com.oracle.svm.jni.functions.JNIInvocationInterface$Support, result: JNIInvocationInterface.DetachCurrentThread(JNIJavaVM)@23 -> JNIInvocationInterface$Support.releaseCurrentThreadOwnedMonitors()
method: joinAllNonDaemons, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getValue, com.oracle.svm.core.option.RuntimeOptionKey, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGlobalFunctionTable, com.oracle.svm.jni.functions.JNIFunctionTables, result: JNIThreadLocalEnvironment.getAddress()@28 -> JNIFunctionTables.getGlobalFunctionTable()
method: nullHandle, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInLocalRange, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLocals, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeLocal, com.oracle.svm.jni.JNIObjectHandles, result: JNIObjectHandles.deleteLocalRef(JNIObjectHandle)@17 -> JNIObjectHandles.decodeLocal(JNIObjectHandle)
method: unsigned, com.oracle.svm.core.log.Log$NoopLog, result: HeapPolicy.setMaximumHeapSize(UnsignedWord)@24 -> Log$NoopLog.unsigned(WordBase)
method: getURLStreamHandler, com.oracle.svm.core.jdk.JavaNetSubstitutions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInRange, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseIPv6Reference, java.net.URI$Parser, result: URI$Parser.parseServer(int, int)@134 -> URI$Parser.parseIPv6Reference(int, int)
method: getAndSet, java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fail, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseIPv4Address, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: accept, java.util.stream.SpinedBuffer$OfDouble, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseHostname, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: handleException, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, com.oracle.svm.jni.JNIThreadLocalPendingException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObject, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asPrimitiveArray, java.util.stream.Nodes$IntSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deleteLocalRef, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: delete, com.oracle.svm.core.handles.ThreadLocalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureLocalCapacity, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureCapacity, com.oracle.svm.core.handles.ThreadLocalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newLocalRef, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyInto, java.util.stream.Nodes$IntSpinedNodeBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLocal, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, com.oracle.svm.core.handles.ThreadLocalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeLocal, com.oracle.svm.jni.JNIObjectHandles, result: JNIObjectHandles.newLocalRef(JNIObjectHandle)@28 -> JNIObjectHandles.encodeLocal(ObjectHandle)
method: <init>, com.oracle.svm.core.handles.ThreadLocalHandles, result: JNIObjectHandles.getLocals()@18 -> ThreadLocalHandles.<init>(int)
method: toRange, com.oracle.svm.jni.JNIImageHeapHandles, result: JNIImageHeapHandles.toLocal(JNIObjectHandle)@4 -> JNIImageHeapHandles.toRange(JNIObjectHandle, SignedWord)
method: isBuiltinStreamHandler, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pushLocalFrame, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUserInfo, java.net.URL, result: IPAddressUtil.checkExternalForm(URL)@7 -> URL.getUserInfo()
method: pushFrame, com.oracle.svm.core.handles.ThreadLocalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scan, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInRange, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: describeChar, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkHostString, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObject, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.RuntimeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: accept, java.util.stream.SpinedBuffer$OfLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasRemaining, java.nio.Buffer, result: Utf8.utf8ToString(boolean, ByteBuffer)@9 -> Buffer.hasRemaining()
method: accept, java.util.stream.SpinedBuffer$OfInt, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInRange, com.oracle.svm.core.handles.ThreadLocalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.CharConversionException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.AllPermissionCollection, result: AllPermission.newPermissionCollection()@4 -> AllPermissionCollection.<init>()
method: get, com.oracle.svm.core.jdk.URLProtocolsSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: popLocalFrame, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, java.util.Arrays$ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match, sun.net.util.IPAddressUtil, result: IPAddressUtil.scan(String, long, long)@40 -> IPAddressUtil.match(char, long, long)
method: popFrame, com.oracle.svm.core.handles.ThreadLocalHandles, result: JNIObjectHandles.popLocalFrame()@3 -> ThreadLocalHandles.popFrame()
method: createLocal, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInImageHeap, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsupported, com.oracle.svm.core.jdk.JavaNetSubstitutions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: asLocal, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanHexSeq, java.net.URI$Parser, result: URI$Parser.parseIPv6Reference(int, int)@8 -> URI$Parser.scanHexSeq(int, int)
method: decode, com.oracle.svm.jni.JNIGlobalHandles, result: JNIGlobalHandles.getObject(JNIObjectHandle)@4 -> JNIGlobalHandles.decode(JNIObjectHandle)
method: at, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanHexPost, java.net.URI$Parser, result: URI$Parser.parseIPv6Reference(int, int)@41 -> URI$Parser.scanHexPost(int, int)
method: append, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: takeIPv4Address, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Exception, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.IOException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initialSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.lookupCodeInfo(CodeInfo, long, SimpleCodeInfoQueryResult)@0 -> CodeInfoDecoder.initialSizeEncoding()
method: scan, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupEntryIP, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: binarySearch, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadEntryOffset, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanIPv4Address, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadEntryFlags, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: binarySearch0, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scan, java.net.URI$Parser, result: URI$Parser.parseHostname(int, int)@94 -> URI$Parser.scan(int, int, char)
method: isLatin1, java.lang.AbstractStringBuilder, result: AbstractStringBuilder.appendNull()@21 -> AbstractStringBuilder.isLatin1()
method: scanByte, java.net.URI$Parser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: advanceIP, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newString, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: moveToFront, sun.nio.cs.ThreadLocalCoders$Cache, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: advanceOffset, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newString, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadExceptionOffset, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadReferenceMapIndex, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forName, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookup, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.loadEntryOffset(CodeInfo, long)@10 -> CodeInfoDecoder.indexGranularity()
method: <init>, java.nio.charset.UnsupportedCharsetException, result: Charset.forName(String)@16 -> UnsupportedCharsetException.<init>(String)
method: checkName, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.IllegalCharsetNameException, result: Charset.checkName(String)@14 -> IllegalCharsetNameException.<init>(String)
method: getCodeInfoIndex, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCodeInfoEncodings, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createSameBufferException, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getU1, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractFS, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.updateSizeEncoding(CodeInfo, long, int, long)@1 -> CodeInfoDecoder.extractFS(int)
method: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.updateSizeEncoding(CodeInfo, long, int, long)@73 -> CodeInfoDecoder.offsetFS(long, int)
method: <init>, java.util.Arrays$ArrayItr, result: Arrays$ArrayList.iterator()@8 -> Arrays$ArrayItr.<init>(Object[])
method: popFramesIncluding, com.oracle.svm.core.handles.ThreadLocalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getS2, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getS1, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offsetIP, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.advanceIP(CodeInfo, long, long)@5 -> CodeInfoDecoder.offsetIP(long)
method: <init>, java.nio.DirectByteBuffer, result: JNIFunctions.NewDirectByteBuffer(JNIEnvironment, WordPointer, long)@12 -> DirectByteBuffer.<init>(long, int)
method: next, java.util.concurrent.ConcurrentHashMap$ValueIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getU1, com.oracle.svm.core.util.ByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.security.AllPermissionCollection$1, result: AllPermissionCollection.elements()@5 -> AllPermissionCollection$1.<init>(AllPermissionCollection)
method: getByteOrder, jdk.vm.ci.code.Architecture, result: CTypeConversionSupportImpl.asByteBuffer(PointerBase, int)@30 -> Architecture.getByteOrder()
method: getSuperclass, java.lang.Class, result: JNIFunctions.GetSuperclass(JNIEnvironment, JNIObjectHandle)@9 -> Class.getSuperclass()
method: forEachRemaining, java.util.Spliterators$EmptySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newGlobalRef, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doGet, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractEX, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.loadExceptionOffset(CodeInfo, long, int)@1 -> CodeInfoDecoder.extractEX(int)
method: tryAdvance, java.util.Spliterators$EmptySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toGlobal, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.lang.ref.Reference, result: ObjectHandlesImpl.get(ObjectHandle)@17 -> Reference.get()
method: offsetEX, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: order, java.nio.ByteBuffer, result: CTypeConversionSupportImpl.asByteBuffer(PointerBase, int)@33 -> ByteBuffer.order(ByteOrder)
method: extractRM, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoDecoder.loadReferenceMapIndex(CodeInfo, long, int)@1 -> CodeInfoDecoder.extractRM(int)
method: offsetRM, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getU2, com.oracle.svm.core.util.NonmovableByteArrayReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAdvance, java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAssignableFrom, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEachRemaining, java.util.stream.SpinedBuffer$OfPrimitive$BaseSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.RuntimeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.RuntimeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAdvance, java.util.Spliterators$IntArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encode, com.oracle.svm.jni.JNIGlobalHandles, result: JNIGlobalHandles.createWeak(Object)@7 -> JNIGlobalHandles.encode(ObjectHandle)
method: newWeakGlobalRef, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deleteGlobalRef, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: destroy, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trySplit, java.util.Spliterators$IntArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toWeakGlobal, com.oracle.svm.jni.JNIImageHeapHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createWeak, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deleteWeakGlobalRef, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAdvance, java.util.Spliterators$DoubleArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: destroyWeak, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBucketIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getIndexInBucket, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trySplit, java.util.Spliterators$DoubleArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBucket, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: destroy, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEachRemaining, java.util.Spliterators$IntArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectArrayByteOffset, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: destroyWeak, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, result: ObjectHandlesImpl.doGet(ObjectHandle)@35 -> ObjectHandlesImpl.toIndex(WordBase)
method: createWeak, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInRange, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEachRemaining, java.util.Spliterators$DoubleArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.handles.ObjectHandlesImpl$HandleWeakReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, result: ObjectHandlesImpl.create(Object)@108 -> ObjectHandlesImpl.toIndex(int, int)
method: toHandle, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toJavaString, org.graalvm.nativeimage.c.type.CTypeConversion, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEachRemaining, java.util.Spliterators$LongArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalStateException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryAdvance, java.util.Spliterators$LongArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trySplit, java.util.Spliterators$LongArraySpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toJavaString, com.oracle.svm.core.c.CTypeConversionSupportImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: startsWith, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: startsWith, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toInternalName, jdk.vm.ci.meta.MetaUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: StringBuilder.append(String)@2 -> AbstractStringBuilder.append(String)
method: replace, java.lang.String, result: MetaUtil.toInternalName(String)@14 -> String.replace(char, char)
method: endsWith, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: length, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, com.oracle.svm.jni.JNIThreadOwnedMonitors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, result: JNIFunctions.FindClass(JNIEnvironment, CCharPointer)@39 -> JNIReflectionDictionary.singleton()
method: dispatchUncaughtException, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getClassObjectByName, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: substring, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logValues, com.oracle.svm.core.util.Counter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMethodID, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, result: JNIReflectionDictionary.getClassObjectByName(String)@26 -> JNIReflectionDictionary.dump(boolean, String)
method: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, result: JNIFunctions.ToReflectedMethod(JNIEnvironment, JNIObjectHandle, JNIMethodId, boolean)@35 -> JNIAccessibleClass.getClassObject()
method: getMethodID, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: coder, java.lang.String, result: String.length()@6 -> String.coder()
method: <init>, java.lang.NoClassDefFoundError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mutableMap, com.oracle.svm.jni.JNIThreadOwnedMonitors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.US_ASCII$Encoder, result: US_ASCII.newEncoder()@5 -> US_ASCII$Encoder.<init>(Charset)
method: getAuthority, java.net.URL, result: URLStreamHandler.parseURL(URL, String, int, int)@7 -> URL.getAuthority()
method: <init>, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPath, java.net.URL, result: URLStreamHandler.parseURL(URL, String, int, int)@31 -> URL.getPath()
method: getQuery, java.net.URL, result: URLStreamHandler.parseURL(URL, String, int, int)@37 -> URL.getQuery()
method: <init>, java.util.AbstractMap, result: IdentityHashMap.<init>()@1 -> AbstractMap.<init>()
method: getRef, java.net.URL, result: URLStreamHandler.parseURL(URL, String, int, int)@43 -> URL.getRef()
method: init, java.util.IdentityHashMap, result: IdentityHashMap.<init>()@7 -> IdentityHashMap.init(int)
method: isIPv6LiteralAddress, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: textToNumericFormatV6, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMethodID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getByName, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAllByName, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAllByName, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.LinkageError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hostsEqual, java.net.URLStreamHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFieldID, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.UnknownHostException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getU1, org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: textToNumericFormatV4, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFieldID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.NoSuchMethodError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkNumericZone, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toJavaStringUnchecked, com.oracle.svm.core.c.CTypeConversionSupportImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.Inet4Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.Inet6Address, result: InetAddress.getAllByName(String, InetAddress)@316 -> Inet6Address.<init>(String, byte[], String)
method: <init>, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, result: JNIAccessibleMethodDescriptor.of(Executable)@122 -> JNIAccessibleMethodDescriptor.<init>(String, String)
method: <init>, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findMethod, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAllByName0, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isStatic, com.oracle.svm.jni.access.JNIAccessibleMethod, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: convertFromIPv4MappedAddress, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHandleType, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.InetAddress, result: Inet6Address.<init>(String, byte[], String)@1 -> InetAddress.<init>()
method: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: holder, java.net.InetAddress, result: Inet4Address.equals(Object)@22 -> InetAddress.holder()
method: toMethodID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.Inet6Address$Inet6AddressHolder, result: Inet6Address.<init>(String, byte[], String)@10 -> Inet6Address$Inet6AddressHolder.<init>(Inet6Address)
method: <init>, java.lang.NoSuchFieldError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initstr, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHandleType, com.oracle.svm.jni.JNIImageHeapHandles, result: JNIObjectHandles.getHandleType(JNIObjectHandle)@25 -> JNIImageHeapHandles.getHandleType(JNIObjectHandle)
method: getHandleType, com.oracle.svm.jni.JNIGlobalHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readOffset, org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader, result: UnsafeArrayTypeReader.getU1(byte[], long)@7 -> UnsafeArrayTypeReader.readOffset(byte[], long, int)
method: <init>, java.net.InetAddress$InetAddressHolder, result: InetAddress.<init>()@14 -> InetAddress$InetAddressHolder.<init>()
method: <init>, java.net.InetAddress$NameServiceAddresses, result: InetAddress.getAllByName0(String, InetAddress, boolean, boolean)@180 -> InetAddress$NameServiceAddresses.<init>(String, InetAddress)
method: toUnsignedInt, java.lang.Short, result: JNIFunctions.NewString(JNIEnvironment, CShortPointer, int)@24 -> Short.toUnsignedInt(short)
method: findField, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getByName, java.net.NetworkInterface, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initif, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getId, com.oracle.svm.jni.access.JNIAccessibleField, result: JNIReflectionDictionary.getFieldID(Class, String, boolean)@27 -> JNIAccessibleField.getId()
method: <init>, java.lang.String, result: String.<init>(char[])@6 -> String.<init>(char[], int, int, Void)
method: isIPv4MappedAddress, sun.net.util.IPAddressUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IncompatibleClassChangeError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.net.URL, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.net.Inet4Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: utf8Length, com.oracle.svm.core.util.Utf8, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNulTerminatedStringCharsAndPin, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: utf8Length, com.oracle.svm.core.util.Utf8, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isWeak, com.oracle.svm.core.handles.ObjectHandlesImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.String, result: JNIFunctions$Support.getNulTerminatedStringCharsAndPin(JNIObjectHandle, CCharPointer)@52 -> String.getChars(int, int, char[], int)
method: getAddressesFromNameService, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unpinString, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pinArrayAndGetAddress, com.oracle.svm.jni.JNIThreadLocalPinnedObjects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.net.Inet4Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unpinArrayByAddress, com.oracle.svm.jni.JNIThreadLocalPinnedObjects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charAt, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringIndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stringToUtf8, com.oracle.svm.core.util.Utf8, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocate, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getByName0, java.net.NetworkInterface, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logValues, com.oracle.svm.core.util.Counter$Group, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unpinFirst, com.oracle.svm.jni.JNIThreadLocalPinnedObjects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, sun.net.InetAddressCachePolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: substringToUtf8, com.oracle.svm.core.util.Utf8, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: max, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: array, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, org.graalvm.nativeimage.PinnedObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNegative, sun.net.InetAddressCachePolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLatin1, java.lang.String, result: String.replace(char, char)@6 -> String.isLatin1()
method: <init>, java.net.InetAddress$CachedAddresses, result: InetAddress$NameServiceAddresses.get()@120 -> InetAddress$CachedAddresses.<init>(String, InetAddress[], long)
method: charAt, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.US_ASCII$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charAt, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.jni.JNIThreadLocalPinnedObjects$PinnedObjectListNode, result: JNIThreadLocalPinnedObjects.pinArrayAndGetAddress(Object)@22 -> JNIThreadLocalPinnedObjects$PinnedObjectListNode.<init>(PinnedObject, JNIThreadLocalPinnedObjects$PinnedObjectListNode)
method: getAddress, java.net.Inet4Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: numericToTextFormat, java.net.Inet4Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deriveNumericScope, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createCapacityException, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInetAddresses, java.net.NetworkInterface, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAddress, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: numericToTextFormat, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, SimpleMethods, result: SimpleMethods.main(String[])@8 -> SimpleMethods.<init>(int, int)
method: isDifferentLocalAddressType, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.HeapByteBuffer, result: ByteBuffer.allocate(int)@15 -> HeapByteBuffer.<init>(int, int)
method: getScopeId, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getX, SimpleMethods, result: SimpleMethods.main(String[])@14 -> SimpleMethods.getX()
method: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setX, SimpleMethods, result: SimpleMethods.main(String[])@19 -> SimpleMethods.setX(int)
method: getName, java.net.NetworkInterface, result: Inet6Address$Inet6AddressHolder.getHostAddress()@35 -> NetworkInterface.getName()
method: getCheckedInetAddresses, java.net.NetworkInterface, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getY, SimpleMethods, result: SimpleMethods.main(String[])@24 -> SimpleMethods.getY()
method: enumerationFromArray, java.net.NetworkInterface, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLinkLocalAddress, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setY, SimpleMethods, result: SimpleMethods.main(String[])@30 -> SimpleMethods.setY(int)
method: isSiteLocalAddress, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UTF_16BE$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsetEntryPoints, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UnicodeEncoder, result: UTF_16LE$Encoder.<init>(Charset)@4 -> UnicodeEncoder.<init>(Charset, int, boolean)
method: two, SimpleMethods, result: SimpleMethods.main(String[])@38 -> SimpleMethods.two()
method: <init>, sun.nio.cs.UTF_16LE$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNumber, SimpleMethods, result: SimpleMethods.main(String[])@46 -> SimpleMethods.getNumber()
method: <init>, sun.nio.cs.UTF_16$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: callAverage, SimpleMethods, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClassName, com.oracle.svm.jni.access.JNINativeLinkage, result: JNIReflectionDictionary.unsetEntryPoints(String)@36 -> JNINativeLinkage.getDeclaringClassName()
method: compareTo, java.net.InetAddress$CachedAddresses, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: empty, SimpleMethods, result: SimpleMethods.main(String[])@60 -> SimpleMethods.empty()
method: <init>, sun.nio.cs.UTF_16LE$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.UnsupportedOperationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UnicodeDecoder, result: UTF_16$Decoder.<init>(Charset)@3 -> UnicodeDecoder.<init>(Charset, int)
method: sumOfTwo, SimpleMethods, result: SimpleMethods.main(String[])@69 -> SimpleMethods.sumOfTwo(double, double)
method: <init>, java.nio.ReadOnlyBufferException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UTF_16$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UTF_16BE$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: put, sun.nio.cs.UnicodeEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsetEntryPoint, com.oracle.svm.jni.access.JNINativeLinkage, result: JNIReflectionDictionary.unsetEntryPoints(String)@46 -> JNINativeLinkage.unsetEntryPoint()
method: checkBoundsBeginEnd, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sumOfTen, SimpleMethods, result: SimpleMethods.main(String[])@109 -> SimpleMethods.sumOfTen(int, int, int, int, int, int, int, int, int, int)
method: decode, sun.nio.cs.UnicodeDecoder, result: UnicodeDecoder.decodeLoop(ByteBuffer, CharBuffer)@100 -> UnicodeDecoder.decode(int, int)
method: checkBoundsOffCount, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sumOfTenWithLocal, SimpleMethods, result: SimpleMethods.main(String[])@133 -> SimpleMethods.sumOfTenWithLocal(int, int, int, int, int, int, int, int, int, int)
method: replace, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replace, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLinkage, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.jni.access.JNINativeLinkage, result: JNIReflectionDictionary.getLinkage(String, String, String)@7 -> JNINativeLinkage.<init>(String, String, String)
method: setEntryPoint, com.oracle.svm.jni.access.JNINativeLinkage, result: JNIFunctions.RegisterNatives(JNIEnvironment, JNIObjectHandle, JNINativeMethod, int)@97 -> JNINativeLinkage.setEntryPoint(CFunctionPointer)
method: <init>, java.nio.ByteBuffer, result: HeapByteBuffer.<init>(int, int)@9 -> ByteBuffer.<init>(int, int, int, int, byte[], int)
method: <init>, java.nio.MappedByteBuffer, result: DirectByteBuffer.<init>(long, int)@5 -> MappedByteBuffer.<init>(int, int, int, int)
method: append, java.lang.AbstractStringBuilder, result: StringBuilder.append(int)@2 -> AbstractStringBuilder.append(int)
method: <init>, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nativeOrder, java.nio.ByteOrder, result: ByteBuffer.<init>(int, int, int, int, byte[], int)@15 -> ByteOrder.nativeOrder()
method: fromVMThread, com.oracle.svm.core.thread.JavaThreads, result: SubstrateUtil.dumpVMThreads(Log)@60 -> JavaThreads.fromVMThread(IsolateThread)
method: <init>, java.lang.StringIndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: capacity, java.nio.Buffer, result: JNIFunctions.GetDirectBufferCapacity(JNIEnvironment, JNIObjectHandle)@9 -> Buffer.capacity()
method: limit, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: position, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maxUtf8ByteLength, com.oracle.svm.core.util.Utf8, result: JNIFunctions.GetStringUTFRegion(JNIEnvironment, JNIObjectHandle, int, int, CCharPointer)@59 -> Utf8.maxUtf8ByteLength(int, boolean)
method: fill, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.genscavenge.PinnedObjectImpl, result: PinnedObjectImpl$PinnedObjectSupportImpl.create(Object)@26 -> PinnedObjectImpl.<init>(Object)
method: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringIndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefaultUncaughtExceptionHandler, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkBoundsOffCount, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: length, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, com.oracle.svm.jni.JNIThreadLocalPendingException, result: JNIFunctions.ExceptionOccurred(JNIEnvironment)@0 -> JNIThreadLocalPendingException.get()
method: printStackTrace, java.lang.Throwable, result: Cleaner$1.run()@19 -> Throwable.printStackTrace()
method: clear, com.oracle.svm.jni.JNIThreadLocalPendingException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$000, com.oracle.svm.jni.functions.JNIFunctions$Support, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCanonicalName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCanonicalName0, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleton, com.oracle.svm.core.option.RuntimeOptionParser, result: RuntimeOptionParser.parseAndConsumeAllOptions(String[])@17 -> RuntimeOptionParser.singleton()
method: invoke, com.oracle.svm.jni.functions.JNIFunctions$NewObjectWithObjectArrayArgFunctionPointer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: println, java.io.PrintStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parse, com.oracle.svm.core.option.RuntimeOptionParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getModifiers, java.lang.reflect.Field, result: JNIFunctions.FromReflectedField(JNIEnvironment, JNIObjectHandle)@29 -> Field.getModifiers()
method: newOptionMap, org.graalvm.compiler.options.OptionValues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isStatic, java.lang.reflect.Modifier, result: JNIFunctions.FromReflectedField(JNIEnvironment, JNIObjectHandle)@32 -> Modifier.isStatic(int)
method: canEncode, java.lang.StringLatin1, result: StringUTF16.replace(byte[], char, char)@117 -> StringLatin1.canEncode(int)
method: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFieldNameByID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: update, org.graalvm.compiler.options.ModifiableOptionValues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFieldsByName, com.oracle.svm.jni.access.JNIAccessibleClass, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.String, result: StringUTF16.replace(byte[], char, char)@151 -> String.<init>(byte[], byte)
method: newBytesFor, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClass, java.lang.reflect.Field, result: JNIFunctions.FromReflectedField(JNIEnvironment, JNIObjectHandle)@41 -> Field.getDeclaringClass()
method: getName, java.lang.reflect.Field, result: JNIFunctions.FromReflectedField(JNIEnvironment, JNIObjectHandle)@45 -> Field.getName()
method: getDeclaredFieldID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredField, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredField, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compress, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMethodByID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSourcePC, com.oracle.svm.core.deopt.DeoptimizedFrame, result: SubstrateUtil.dumpTopFrame(Log, Pointer, CodePointer)@83 -> DeoptimizedFrame.getSourcePC()
method: getMethodDescriptor, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClass, com.oracle.svm.jni.access.JNIAccessibleMethod, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getReturnType, java.lang.reflect.Method, result: JNIAccessibleMethodDescriptor.of(Executable)@85 -> Method.getReturnType()
method: getMethodsByDescriptor, com.oracle.svm.jni.access.JNIAccessibleClass, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClass, com.oracle.svm.jni.access.JNIAccessibleMember, result: JNIAccessibleMethod.getDeclaringClass()@1 -> JNIAccessibleMember.getDeclaringClass()
method: isConstructor, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: holdsLock, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: requireNonNull, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: entered, com.oracle.svm.jni.JNIThreadOwnedMonitors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: holdsLock, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalMonitorStateException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exited, com.oracle.svm.jni.JNIThreadOwnedMonitors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: privateGetDeclaredConstructors, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyConstructors, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOrCreateMonitor, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parse, com.oracle.svm.core.option.XOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAndClearPendingException, com.oracle.svm.jni.JNIGeneratedMethodSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: length, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseWithNameAndPrefix, com.oracle.svm.core.option.XOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logStream, com.oracle.svm.core.log.Log, result: XOptions.parse(String[], boolean)@71 -> Log.logStream()
method: <init>, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOffsetFromId, com.oracle.svm.jni.access.JNIAccessibleField, result: JNIGeneratedMethodSupport.getFieldOffsetFromId(JNIFieldId)@1 -> JNIAccessibleField.getOffsetFromId(JNIFieldId)
method: <init>, java.util.AbstractList, result: ArrayList.<init>()@1 -> AbstractList.<init>()
method: exit, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalArgumentException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.ArrayList, result: JNIInvocationInterface$Exports.JNI_CreateJavaVM(JNIJavaVMPointer, JNIEnvironmentPointer, JNIJavaVMInitArgs)@98 -> ArrayList.add(Object)
method: add, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupTotalFrameSize, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parse, com.oracle.svm.core.properties.RuntimePropertyParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toArray, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logRecentEvents, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: substring, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseProperty, com.oracle.svm.core.properties.RuntimePropertyParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, com.oracle.svm.core.thread.VMOperation, result: VMOperationControl.logRecentEvents(Log)@36 -> VMOperation.getName()
method: notifyOptionsParsed, com.oracle.svm.core.option.RuntimeOptionParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: privateGetDeclaredMethods, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyMethods, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.OutOfMemoryError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, result: JNIFunctions.ToReflectedMethod(JNIEnvironment, JNIObjectHandle, JNIMethodId, boolean)@137 -> JNIAccessibleMethodDescriptor.getName()
method: getName, java.lang.reflect.Method, result: JNIFunctions.ToReflectedMethod(JNIEnvironment, JNIObjectHandle, JNIMethodId, boolean)@142 -> Method.getName()
method: iterator, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addJavaVM, com.oracle.svm.jni.JNIJavaVMList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: calloc, org.graalvm.nativeimage.UnmanagedMemory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredMethodID, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaredMethod, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isArray, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isArray, com.oracle.svm.core.hub.HubType, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.VirtualMachineError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLength, java.lang.reflect.Array, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getArrayElementOffset, com.oracle.svm.core.config.ObjectLayout, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getArrayBaseOffset, com.oracle.svm.core.config.ObjectLayout, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sizeInBytes, com.oracle.svm.core.config.ObjectLayout, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: free, org.graalvm.nativeimage.UnmanagedMemory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyMemory, sun.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports$1, result: JNIInvocationInterface$Exports.JNI_CreateJavaVM(JNIJavaVMPointer, JNIEnvironmentPointer, JNIJavaVMInitArgs)@143 -> JNIInvocationInterface$Exports$1.<init>(JNIJavaVM)
method: initializeProperty, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addTearDownHook, com.oracle.svm.core.jdk.RuntimeSupport, result: JNIInvocationInterface$Exports.JNI_CreateJavaVM(JNIJavaVMPointer, JNIEnvironmentPointer, JNIJavaVMInitArgs)@146 -> RuntimeSupport.addTearDownHook(Runnable)
method: addHook, com.oracle.svm.core.jdk.RuntimeSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyMemory, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalArgumentException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: assertionErrorName, com.oracle.svm.core.snippets.FatalAssertions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ArithmeticException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ArrayIndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ClassCastException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.concurrent.atomic.AtomicReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: grow, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptyMap, java.util.Collections, result: LocaleExtensions.<init>(Map, Set, Map)@68 -> Collections.emptyMap()
method: compareAndSet, java.util.concurrent.atomic.AtomicReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ReflectiveOperationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSet, java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Throwable$WrappedPrintWriter, result: Throwable.printStackTrace(PrintWriter)@6 -> Throwable$WrappedPrintWriter.<init>(PrintWriter)
method: <init>, java.lang.Throwable$PrintStreamOrWriter, result: Throwable$WrappedPrintWriter.<init>(PrintWriter)@1 -> Throwable$PrintStreamOrWriter.<init>()
method: getComponentType, java.lang.Class, result: Class.getTypeName()@15 -> Class.getComponentType()
method: privateGetDeclaredFields, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printStackTrace, java.lang.Throwable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: searchFields, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newSetFromMap, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Throwable$WrappedPrintStream, result: Throwable.printStackTrace(PrintStream)@6 -> Throwable$WrappedPrintStream.<init>(PrintStream)
method: getOurStackTrace, java.lang.Throwable, result: Throwable.printStackTrace(Throwable$PrintStreamOrWriter)@32 -> Throwable.getOurStackTrace()
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSuppressed, java.lang.Throwable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printEnclosedStackTrace, java.lang.Throwable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCause, java.lang.Throwable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maskNull, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hash, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.NoSuchFieldException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: identityHashCode, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getReflectionFactory, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Exception, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getReflectionFactory, jdk.internal.reflect.ReflectionFactory, result: Class.getReflectionFactory()@0 -> ReflectionFactory.getReflectionFactory()
method: nextKeyIndex, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unmaskNull, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Throwable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: closeDeletion, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ConcurrentModificationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$SetFromMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkIndex, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getValue, com.oracle.svm.core.hub.HubType, result: HubType.isArray(int)@4 -> HubType.getValue()
method: appendNull, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkIndex, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureCapacityInternal, java.lang.AbstractStringBuilder, result: AbstractStringBuilder.appendNull()@7 -> AbstractStringBuilder.ensureCapacityInternal(int)
method: putStringAt, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMonitorOffset, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newCapacity, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMonitorOffset, java.lang.Class, result: MultiThreadedMonitorSupport.getMonitorOffset(Object)@7 -> Class.getMonitorOffset()
method: getInstanceIdentityHashCodeOffset, com.oracle.svm.core.config.ObjectLayout, result: System.identityHashCode(Object)@11 -> ObjectLayout.getInstanceIdentityHashCodeOffset()
method: hugeCapacity, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHashCodeOffset, java.lang.Class, result: System.identityHashCode(Object)@42 -> Class.getHashCodeOffset()
method: copyOf, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: min, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, result: Class.ensureInitialized()@4 -> ClassInitializationInfo.isInitialized()
method: newMonitorLock, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resize, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.ReentrantLock, result: MultiThreadedMonitorSupport.newMonitorLock()@4 -> ReentrantLock.<init>()
method: equals, java.lang.StackTraceElement, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: generateIdentityHashCode, com.oracle.svm.core.jdk.IdentityHashCodeSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Throwable, result: Exception.<init>(String)@2 -> Throwable.<init>(String)
method: putCharsAt, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkBoundsBeginEnd, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: generateHashCode, com.oracle.svm.core.jdk.IdentityHashCodeSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCoder, java.lang.AbstractStringBuilder, result: AbstractStringBuilder.putStringAt(int, String)@1 -> AbstractStringBuilder.getCoder()
method: inflate, java.lang.AbstractStringBuilder, result: AbstractStringBuilder.putStringAt(int, String)@12 -> AbstractStringBuilder.inflate()
method: <init>, java.util.SplittableRandom, result: IdentityHashCodeSupport.generateHashCode()@18 -> SplittableRandom.<init>()
method: nextInt, java.util.SplittableRandom, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: highestOneBit, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toIntExact, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: arrayBaseOffset, sun.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: arrayIndexScale, sun.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.ReentrantLock$NonfairSync, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBytes, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefaultGen, com.oracle.svm.core.jdk.SplittableRandomAccessors, result: SplittableRandom.<init>()@4 -> SplittableRandomAccessors.getDefaultGen()
method: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.AbstractSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAndAdd, java.util.concurrent.atomic.AtomicLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mix64, java.util.SplittableRandom, result: SplittableRandomAccessors.initialize()@79 -> SplittableRandom.mix64(long)
method: mixGamma, java.util.SplittableRandom, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.ReentrantLock$Sync, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Object, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: arrayBaseOffset, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextSeed, java.util.SplittableRandom, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mix32, java.util.SplittableRandom, result: SplittableRandom.nextInt(int)@18 -> SplittableRandom.mix32(long)
method: arrayIndexScale, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyOfRange, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getStackTrace, com.oracle.svm.core.jdk.StackTraceUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bitCount, java.lang.Long, result: SplittableRandom.mixGamma(long)@36 -> Long.bitCount(long)
method: <init>, com.oracle.svm.core.jdk.BuildStackTraceVisitor, result: StackTraceUtils.getStackTrace(boolean, Pointer)@5 -> BuildStackTraceVisitor.<init>(boolean)
method: hashCode, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.stack.JavaStackFrameVisitor, result: BuildStackTraceVisitor.<init>(boolean)@1 -> JavaStackFrameVisitor.<init>()
method: <init>, java.util.ArrayList, result: BuildStackTraceVisitor.<init>(boolean)@14 -> ArrayList.<init>()
method: hashCode, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.atomic.AtomicLong, result: SplittableRandomAccessors.initialize()@95 -> AtomicLong.<init>(long)
method: <init>, java.lang.OutOfMemoryError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.AbstractCollection, result: AbstractList.<init>()@1 -> AbstractCollection.<init>()
method: roundUp, org.graalvm.compiler.core.common.NumUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Error, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stringSize, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rawBytes, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flush, com.oracle.svm.core.posix.PosixLogHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOutputFile, com.oracle.svm.core.posix.PosixLogHandler, result: PosixLogHandler.log(CCharPointer, UnsignedWord)@4 -> PosixLogHandler.getOutputFile()
method: flush, com.oracle.svm.core.posix.PosixUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRawStackTrace, com.oracle.svm.core.jdk.JDKUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getClassName, java.lang.StackTraceElement, result: RealLog.exception(Throwable, int)@89 -> StackTraceElement.getClassName()
method: getMethodName, java.lang.StackTraceElement, result: RealLog.exception(Throwable, int)@102 -> StackTraceElement.getMethodName()
method: log, com.oracle.svm.core.posix.PosixLogHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFileName, java.lang.StackTraceElement, result: RealLog.exception(Throwable, int)@117 -> StackTraceElement.getFileName()
method: writeBytes, com.oracle.svm.core.posix.PosixUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLineNumber, java.lang.StackTraceElement, result: RealLog.exception(Throwable, int)@130 -> StackTraceElement.getLineNumber()
method: getFD, com.oracle.svm.core.posix.PosixUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: number, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: digit, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: string, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ref.WeakReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putCharSB, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMessage, java.lang.Throwable, result: URISyntaxException.getReason()@1 -> Throwable.getMessage()
method: isClassInitializer, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findSuperinterfaceMethod, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getXmn, com.oracle.svm.core.option.XOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.lang.Object, result: Method.equals(Object)@46 -> Object.equals(Object)
method: setMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapPolicy.getMaximumYoungGenerationSize()@97 -> HeapPolicy.setMaximumYoungGenerationSize(UnsignedWord)
method: isInterface, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logVirtualFrames, com.oracle.svm.core.stack.ThreadStackPrinter$Stage1StackFrameVisitor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInterfaces, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logFrameRaw, com.oracle.svm.core.stack.ThreadStackPrinter$Stage0StackFrameVisitor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMaximumYoungGenerationSizePercent, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logFrameInfo, com.oracle.svm.core.stack.ThreadStackPrinter$Stage1StackFrameVisitor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: m, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setTearingDown, com.oracle.svm.core.thread.VMThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation, result: JavaThreads.tearDownJavaThreads()@31 -> JavaThreads$FetchApplicationThreadsOperation.<init>(List)
method: shutdown, java.lang.Shutdown, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueue, com.oracle.svm.core.thread.JavaVMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, com.oracle.svm.core.code.ReusableTypeReader, result: ThreadStackPrinter$AllocationFreeStackFrameVisitor.logFrame(Log, Pointer, CodePointer, CodeInfo, DeoptimizedFrame)@29 -> ReusableTypeReader.reset()
method: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupCodeInfoEntryOffset, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: waitForTearDown, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextGetIndex, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: runHooks, java.lang.Shutdown, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMethod, com.oracle.svm.jni.access.JNIAccessibleClass, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.BufferUnderflowException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ix, java.nio.DirectByteBuffer, result: DirectByteBuffer.get()@8 -> DirectByteBuffer.ix(int)
method: reachabilityFence, java.lang.ref.Reference, result: DirectByteBuffer.get()@23 -> Reference.reachabilityFence(Object)
method: unsigned, com.oracle.svm.core.log.Log$NoopLog, result: HeapPolicy.getMaximumYoungGenerationSize()@74 -> Log$NoopLog.unsigned(long)
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isShutdown, jdk.internal.misc.VM, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextFrameInfo, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, result: CodeInfoAccess.nextFrameInfo(CodeInfo, long, ReusableTypeReader, FrameInfoDecoder$FrameInfoQueryResultAllocator, FrameInfoDecoder$ValueInfoAllocator, boolean)@9 -> CodeInfoDecoder.extractFI(int)
method: decodeFrameInfo, com.oracle.svm.core.code.FrameInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shutdown, jdk.internal.misc.VM, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextPutIndex, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.BufferOverflowException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocate, com.oracle.svm.core.os.OSCommittedMemoryProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: defaultProtection, com.oracle.svm.core.os.OSCommittedMemoryProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trackVirtualMemory, com.oracle.svm.core.os.OSCommittedMemoryProvider, result: OSCommittedMemoryProvider.allocate(UnsignedWord, UnsignedWord, boolean)@82 -> OSCommittedMemoryProvider.trackVirtualMemory(UnsignedWord)
method: initLevel, jdk.internal.misc.VM, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: grow, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decode, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnalignedStart, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resetChunkHeader, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCardTableLimit, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanTableToPointer, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: notifyAll, java.lang.Object, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.InternalError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPublic, com.oracle.svm.jni.access.JNIAccessibleMethod, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dumpReg, com.oracle.svm.core.RegisterDumper, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: defaultCharset, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: notify, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeUTF8, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFrameInfoObjectConstants, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectStart, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flush, com.oracle.svm.core.log.Log$NoopLog, result: JavaThreads.tearDownJavaThreads()@11 -> Log$NoopLog.flush()
method: decodeLatin1, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tableOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, result: CardTable.cleanTableToPointer(Pointer, Pointer)@9 -> CardTable.tableOffsetToIndex(UnsignedWord)
method: cleanTableToIndex, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.InterruptedIOException, result: SocketTimeoutException.<init>(String)@2 -> InterruptedIOException.<init>(String)
method: decodeASCII, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deref, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: name, java.nio.charset.Charset, result: StringCoding.decode(byte[], int, int)@64 -> Charset.name()
method: encodeDebugNames, com.oracle.svm.core.code.FrameInfoDecoder, result: FrameInfoDecoder.decodeFrameInfo(boolean, TypeReader, CodeInfo, FrameInfoDecoder$FrameInfoQueryResultAllocator, FrameInfoDecoder$ValueInfoAllocator, boolean)@338 -> FrameInfoDecoder.encodeDebugNames()
method: encodeSourceReferences, com.oracle.svm.core.code.FrameInfoDecoder, result: FrameInfoDecoder.decodeFrameInfo(boolean, TypeReader, CodeInfo, FrameInfoDecoder$FrameInfoQueryResultAllocator, FrameInfoDecoder$ValueInfoAllocator, boolean)@356 -> FrameInfoDecoder.encodeSourceReferences()
method: newCapacity, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFrameInfoSourceClasses, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFrameInfoSourceMethodNames, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringCoding$StringDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: m, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.thread.JavaVMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hugeCapacity, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueue, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ArrayList$Itr, result: ArrayList.iterator()@5 -> ArrayList$Itr.<init>(ArrayList)
method: getInterfaces, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTearDownWarningNanos, com.oracle.svm.core.SubstrateOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTearDownFailureNanos, com.oracle.svm.core.SubstrateOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.SocketException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: signalAll, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.atomic.AtomicBoolean, result: JavaThreads.waitForTearDown()@67 -> AtomicBoolean.<init>(boolean)
method: <init>, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation, result: JavaThreads.waitForTearDown()@95 -> JavaThreads$CheckReadyForTearDownOperation.<init>(Log, AtomicBoolean)
method: limit, java.nio.MappedByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isReadyForTearDown, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation, result: JavaThreads.waitForTearDown()@111 -> JavaThreads$CheckReadyForTearDownOperation.isReadyForTearDown()
method: limit, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doNotLoopTooLong, com.oracle.svm.core.util.TimeUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeFatallyTooLong, com.oracle.svm.core.util.TimeUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.util.concurrent.atomic.AtomicBoolean, result: JavaThreads.waitForTearDown()@184 -> AtomicBoolean.set(boolean)
method: position, java.nio.MappedByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: position, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPublic, java.lang.reflect.Modifier, result: ReflectionFactory.langReflectAccess()@7 -> Modifier.isPublic(int)
method: hasNegatives, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractType, com.oracle.svm.core.code.FrameInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractKind, com.oracle.svm.core.code.FrameInfoDecoder, result: FrameInfoDecoder.decodeValues(FrameInfoDecoder$ValueInfoAllocator, int, TypeReader, NonmovableObjectArray)@69 -> FrameInfoDecoder.extractKind(int)
method: get, java.lang.ThreadLocal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractIsCompressedReference, com.oracle.svm.core.code.FrameInfoDecoder, result: FrameInfoDecoder.decodeValues(FrameInfoDecoder$ValueInfoAllocator, int, TypeReader, NonmovableObjectArray)@79 -> FrameInfoDecoder.extractIsCompressedReference(int)
method: extractIsEliminatedMonitor, com.oracle.svm.core.code.FrameInfoDecoder, result: FrameInfoDecoder.decodeValues(FrameInfoDecoder$ValueInfoAllocator, int, TypeReader, NonmovableObjectArray)@89 -> FrameInfoDecoder.extractIsEliminatedMonitor(int)
method: decodeUTF8_0, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createPositionException, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueueBlockingSafepoint, com.oracle.svm.core.thread.JavaVMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation, result: JavaVMOperation.enqueueBlockingSafepoint(String, SubstrateUtil$Thunk)@9 -> JavaVMOperation$ThunkOperation.<init>(String, VMOperation$SystemEffect, SubstrateUtil$Thunk)
method: <init>, com.oracle.svm.core.thread.VMOperation, result: JavaVMOperation.<init>(String, VMOperation$SystemEffect)@3 -> VMOperation.<init>(String, VMOperation$SystemEffect)
method: m, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findSuperinterfaceField, com.oracle.svm.jni.access.JNIReflectionDictionary, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: k, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapPolicy.m(UnsignedWord)@1 -> HeapPolicy.k(UnsignedWord)
method: yield, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createLimitException, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLocalOrAnonymousClass, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnclosingClass, java.lang.Class, result: Class.getCanonicalName0()@55 -> Class.getEnclosingClass()
method: bool, com.oracle.svm.core.log.Log$NoopLog, result: JavaThreads.tearDownJavaThreads()@122 -> Log$NoopLog.bool(boolean)
method: getSimpleName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: onMalformedInput, java.nio.charset.CharsetDecoder, result: StringCoding$StringDecoder.<init>(Charset, String)@22 -> CharsetDecoder.onMalformedInput(CodingErrorAction)
method: onUnmappableCharacter, java.nio.charset.CharsetDecoder, result: StringCoding$StringDecoder.<init>(Charset, String)@28 -> CharsetDecoder.onUnmappableCharacter(CodingErrorAction)
method: <init>, java.lang.StringCoding$Result, result: StringCoding$1.initialValue()@4 -> StringCoding$Result.<init>()
method: getField, com.oracle.svm.jni.access.JNIAccessibleClass, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: signal, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isStatic, com.oracle.svm.jni.access.JNIAccessibleField, result: JNIReflectionDictionary.getDeclaredField(Class, String, boolean, String)@56 -> JNIAccessibleField.isStatic()
method: <init>, java.lang.ref.SoftReference, result: StringCoding.set(ThreadLocal, Object)@6 -> SoftReference.<init>(Object)
method: isLocalClass, java.lang.Class, result: Class.isLocalOrAnonymousClass()@1 -> Class.isLocalClass()
method: isAnonymousClass, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEntry, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doSignalAll, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSimpleName0, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setInitialValue, java.lang.ThreadLocal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nanoSecondsSince, com.oracle.svm.core.util.TimeUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, result: TimeUtils.doNotLoopTooLong(long, long, long, String)@20 -> TimeUtils.nanoTimeLessThan(long, long)
method: doSignal, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAlignedHeapChunkStart, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCardTableLimit, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFirstObjectTableStart, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNotContinuation, java.lang.StringCoding, result: StringCoding.decodeUTF8_0(byte[], int, int, boolean)@94 -> StringCoding.isNotContinuation(int)
method: getFirstObjectTableLimit, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeTableToPointer, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: yield, com.oracle.svm.core.posix.thread.PosixJavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: throwMalformed, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newLine, java.io.PrintStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSimpleBinaryName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRuntime, java.lang.Runtime, result: System.exit(int)@0 -> Runtime.getRuntime()
method: <init>, java.lang.IllegalMonitorStateException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exit, java.lang.Runtime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMalformed3, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malformedN, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSurrogate, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: signed, com.oracle.svm.core.log.Log$NoopLog, result: HeapChunkProvider.popUnusedAlignedChunk()@30 -> Log$NoopLog.signed(WordBase)
method: isMalformed3_2, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMalformed4, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSupplementaryCodePoint, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: highSurrogate, java.lang.Character, result: StringCoding.decodeUTF8_0(byte[], int, int, boolean)@711 -> Character.highSurrogate(int)
method: lowSurrogate, java.lang.Character, result: StringCoding.decodeUTF8_0(byte[], int, int, boolean)@726 -> Character.lowSurrogate(int)
method: isMalformed4_2, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMalformed4_3, java.lang.StringCoding, result: StringCoding.decodeUTF8_0(byte[], int, int, boolean)@835 -> StringCoding.isMalformed4_3(int)
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseLong, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isTopLevelClass, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trim, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSimpleBinaryName0, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCase, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseLong, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ordinal, java.lang.Enum, result: EnumRuntimeData.convertJavaToCLong(Enum)@5 -> Enum.ordinal()
method: compress, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trim, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toBytes, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trim, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isFirstIsolate, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, result: PosixNativeLibrarySupport.initializeBuiltinLibraries()@1 -> PlatformNativeLibrarySupport.isFirstIsolate()
method: getDefault, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClass0, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLetter, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.InternalError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClassInternal, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadJavaLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadJavaLibrary, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initIDs, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLetter, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.VirtualMachineError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: incrementAndGet, java.util.concurrent.atomic.AtomicLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: log, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.MalformedInputException, result: StringCoding.throwMalformed(int, int)@39 -> MalformedInputException.<init>(int)
method: tableOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.initializeTableToPointer(Pointer, Pointer)@7 -> FirstObjectTable.tableOffsetToIndex(UnsignedWord)
method: initializeTableToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.initializeTableToPointer(Pointer, Pointer)@13 -> FirstObjectTable.initializeTableToIndex(Pointer, UnsignedWord)
method: incrementAndGet, java.util.concurrent.atomic.AtomicInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: highestOneBit, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offsetFI, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setByteIndex, com.oracle.svm.core.code.ReusableTypeReader, result: CodeInfoDecoder.initFrameInfoReader(CodeInfo, long, ReusableTypeReader)@26 -> ReusableTypeReader.setByteIndex(long)
method: getFrameInfoEncodings, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setData, com.oracle.svm.core.code.ReusableTypeReader, result: CodeInfoDecoder.initFrameInfoReader(CodeInfo, long, ReusableTypeReader)@34 -> ReusableTypeReader.setData(NonmovableArray)
method: zhex, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadZipLibrary, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport, result: PosixNativeLibrarySupport.initializeBuiltinLibraries()@117 -> JNIPlatformNativeLibrarySupport.loadZipLibrary()
method: determineHostCPUFeatures, com.oracle.svm.core.amd64.AMD64CPUFeatureAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: noneOf, java.util.EnumSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getType, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.lang.CharacterData, result: Character.toLowerCase(int)@1 -> CharacterData.of(int)
method: loadNetLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: singleton, com.oracle.svm.core.jdk.NativeLibrarySupport, result: PosixNativeLibrarySupport.loadNetLibrary()@15 -> NativeLibrarySupport.singleton()
method: isSupported, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: registerInitializedBuiltinLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, java.net.Inet4Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setProperty, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, java.net.Inet6Address, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyMemoryChecks, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.NetworkInterface$1, result: NetworkInterface.<clinit>()@4 -> NetworkInterface$1.<init>()
method: checkKey, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.security.action.GetPropertyAction, result: InetAddress.<clinit>()@10 -> GetPropertyAction.<init>(String)
method: loadLibrary, java.util.zip.ZipUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setProperty, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.ObjectStreamField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.ObjectStreamField, result: ObjectStreamField.<init>(String, Class)@4 -> ObjectStreamField.<init>(String, Class, boolean)
method: getDefault, java.net.DefaultInterface, result: NetworkInterface.<clinit>()@14 -> DefaultInterface.getDefault()
method: getIndex, java.net.NetworkInterface, result: NetworkInterface.<clinit>()@29 -> NetworkInterface.getIndex()
method: getUnsafe, jdk.internal.misc.Unsafe, result: Inet6Address.<clinit>()@83 -> Unsafe.getUnsafe()
method: parseBoolean, java.lang.Boolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: objectFieldOffset, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.InetAddress$1, result: InetAddress.<clinit>()@87 -> InetAddress$1.<init>()
method: containsAll, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.InetAddress$2, result: InetAddress.<clinit>()@98 -> InetAddress$2.<init>()
method: setJavaNetInetAddressAccess, jdk.internal.misc.SharedSecrets, result: InetAddress.<clinit>()@101 -> SharedSecrets.setJavaNetInetAddressAccess(JavaNetInetAddressAccess)
method: create, org.graalvm.collections.EconomicMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListSet, result: InetAddress.<clinit>()@121 -> ConcurrentSkipListSet.<init>()
method: objectFieldOffset, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap, result: ConcurrentSkipListSet.<init>()@9 -> ConcurrentSkipListMap.<init>()
method: create, java.net.InetAddressImplFactory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isIPv6Supported, java.net.InetAddressImplFactory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createNameService, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.InetAddress$HostsFileNameService, result: InetAddress.createNameService()@15 -> InetAddress$HostsFileNameService.<init>(String)
method: <init>, java.net.InetAddress$PlatformNameService, result: InetAddress.createNameService()@26 -> InetAddress$PlatformNameService.<init>()
method: encode, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: requestedCharsetName, java.lang.StringCoding$StringEncoder, result: StringCoding.encode(String, byte, byte[])@29 -> StringCoding$StringEncoder.requestedCharsetName()
method: privilegedGetProperty, sun.security.action.GetPropertyAction, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnsafeParkEvent, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupCharset, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.UnsupportedEncodingException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPinHead, com.oracle.svm.core.genscavenge.HeapImpl, result: PinnedObjectImpl.pushPinnedObject(PinnedObjectImpl)@23 -> HeapImpl.getPinHead()
method: <init>, java.io.Writer, result: PrintWriter.<init>(Writer, boolean)@2 -> Writer.<init>(Object)
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decode, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: requestedCharsetName, java.lang.StringCoding$StringDecoder, result: StringCoding.decode(String, byte[], int, int)@32 -> StringCoding$StringDecoder.requestedCharsetName()
method: min, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSleepParkEvent, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUniverse, java.util.EnumSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.RegularEnumSet, result: EnumSet.noneOf(Class)@49 -> RegularEnumSet.<init>(Class, Enum[])
method: <init>, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: strerror, sun.nio.fs.UnixNativeDispatcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, sun.nio.fs.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isBeingInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, result: ClassInitializationInfo.initialize(Class)@12 -> ClassInitializationInfo.isBeingInitialized()
method: <init>, java.util.JumboEnumSet, result: EnumSet.noneOf(Class)@59 -> JumboEnumSet.<init>(Class, Enum[])
method: isReentrantInitialization, com.oracle.svm.core.hub.ClassInitializationInfo, result: ClassInitializationInfo.initialize(Class)@20 -> ClassInitializationInfo.isReentrantInitialization(Thread)
method: release, com.oracle.svm.core.thread.ParkEvent, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCase, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSingleton, com.oracle.svm.core.thread.ParkEventList, result: ParkEvent.release(ParkEvent)@0 -> ParkEventList.getSingleton()
method: baseHead, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addSuppressed, java.lang.Throwable, result: JNIPlatformNativeLibrarySupport.initializeEncoding()@59 -> Throwable.addSuppressed(Throwable)
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: push, com.oracle.svm.core.thread.ParkEventList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: acquireFence, java.lang.invoke.VarHandle, result: ConcurrentSkipListMap.baseHead()@0 -> VarHandle.acquireFence()
method: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isValid, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAdderCount, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getError, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: RuntimeOptionParser.parseOptionAtRuntime(String, String, SubstrateOptionsParser$BooleanOptionFormat, EconomicMap, boolean)@86 -> SubstrateOptionsParser$OptionParseResult.getError()
method: isInErrorState, com.oracle.svm.core.hub.ClassInitializationInfo, result: ClassInitializationInfo.initialize(Class)@95 -> ClassInitializationInfo.isInErrorState()
method: parseLong, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.NumberFormatException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decode, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setNext, com.oracle.svm.core.thread.ParkEventConsCell, result: ParkEventList.push(ParkEvent)@18 -> ParkEventConsCell.setNext(ParkEventConsCell)
method: cpr, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSuperHub, java.lang.Class, result: ClassInitializationInfo.initialize(Class)@171 -> Class.getSuperHub()
method: create, org.graalvm.collections.EconomicMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasDefaultMethods, java.lang.Class, result: ClassInitializationInfo.initialize(Class)@185 -> Class.hasDefaultMethods()
method: initializeSuperInterfaces, com.oracle.svm.core.hub.ClassInitializationInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forInputString, java.lang.NumberFormatException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: declaresDefaultMethods, java.lang.Class, result: ClassInitializationInfo.initializeSuperInterfaces(Class)@58 -> Class.declaresDefaultMethods()
method: setInitializationStateAndNotify, com.oracle.svm.core.hub.ClassInitializationInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: digit, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: invokeClassInitializer, com.oracle.svm.core.hub.ClassInitializationInfo, result: ClassInitializationInfo.initialize(Class)@211 -> ClassInitializationInfo.invokeClassInitializer()
method: encodeNull, org.graalvm.compiler.options.OptionValues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.atomic.LongAdder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ExceptionInInitializerError, result: ClassInitializationInfo.initialize(Class)@248 -> ExceptionInInitializerError.<init>(Throwable)
method: disableThreadLocalAllocation, com.oracle.svm.core.genscavenge.ThreadLocalAllocation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.LinkageError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAllocationSpace, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeLazyValue, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exit, java.lang.Shutdown, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$EntrySet, result: ConcurrentSkipListMap.entrySet()@17 -> ConcurrentSkipListMap$EntrySet.<init>(ConcurrentNavigableMap)
method: ensureOpen, java.io.PrintStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, result: HeapImpl.report(Log, boolean)@19 -> HeapImpl.getYoungGeneration()
method: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, result: HeapImpl.getAllocationSpace()@4 -> YoungGeneration.getEden()
method: <init>, java.util.concurrent.atomic.Striped64, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getClassSignature, java.io.ObjectStreamField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ref.Reference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPrimitiveSignature, java.io.ObjectStreamField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.CharacterCodingException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendClassSignature, java.io.ObjectStreamField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.IOException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$KeySet, result: ConcurrentSkipListMap.navigableKeySet()@17 -> ConcurrentSkipListMap$KeySet.<init>(ConcurrentNavigableMap)
method: toString, java.util.AbstractCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Exception, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doPut, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Throwable, result: Exception.<init>(String, Throwable)@3 -> Throwable.<init>(String, Throwable)
method: write, java.io.PrintStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doGet, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: digit, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doRemove, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findPredecessor, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: error, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unlinkNode, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOfSupplementary, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toDecoder, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getJavaLangAccess, jdk.internal.misc.SharedSecrets, result: EnumSet.getUniverse(Class)@0 -> SharedSecrets.getJavaLangAccess()
method: hasNextLine, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: saveState, java.util.Scanner, result: Scanner.hasNextLine()@1 -> Scanner.saveState()
method: linePattern, java.util.Scanner, result: Scanner.hasNextLine()@15 -> Scanner.linePattern()
method: collectFuzzyMatches, org.graalvm.compiler.options.OptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findWithinHorizon, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isValidCodePoint, java.lang.Character, result: StringUTF16.lastIndexOfSupplementary(byte[], int, int)@1 -> Character.isValidCodePoint(int)
method: tryReduceLevel, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.EnumSet, result: JumboEnumSet.<init>(Class, Enum[])@3 -> EnumSet.<init>(Class, Enum[])
method: match, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addCount, java.util.concurrent.ConcurrentSkipListMap, result: ConcurrentSkipListMap.doRemove(Object, Object)@174 -> ConcurrentSkipListMap.addCount(long)
method: isEmpty, java.util.ArrayList, result: SubstrateOptionsParser.parseOption(SortedMap, String, EconomicMap, String, SubstrateOptionsParser$BooleanOptionFormat)@290 -> ArrayList.isEmpty()
method: cacheResult, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cacheResult, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkAccess, java.lang.Thread, result: Thread.interrupt()@8 -> Thread.checkAccess()
method: revertState, java.util.Scanner, result: Scanner.hasNextLine()@72 -> Scanner.revertState()
method: nextLine, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, org.graalvm.compiler.options.OptionDescriptor, result: SubstrateOptionsParser.parseOption(SortedMap, String, EconomicMap, String, SubstrateOptionsParser$BooleanOptionFormat)@346 -> OptionDescriptor.getName()
method: getCachedResult, java.util.Scanner, result: Scanner.nextLine()@21 -> Scanner.getCachedResult()
method: clearCaches, java.util.Scanner, result: Scanner.nextLine()@26 -> Scanner.clearCaches()
method: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, result: ConcurrentSkipListMap.doPut(Object, Object, boolean)@41 -> ConcurrentSkipListMap$Node.<init>(Object, Object, ConcurrentSkipListMap$Node)
method: interrupt0, java.lang.Thread, result: Thread.interrupt()@28 -> Thread.interrupt0()
method: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, result: ConcurrentSkipListMap.doPut(Object, Object, boolean)@54 -> ConcurrentSkipListMap$Index.<init>(ConcurrentSkipListMap$Node, ConcurrentSkipListMap$Index, ConcurrentSkipListMap$Index)
method: getName, org.graalvm.compiler.options.OptionKey, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removeComments, java.net.InetAddress$HostsFileNameService, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: extractHostAddr, java.net.InetAddress$HostsFileNameService, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: split, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: interrupt, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unpark, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wakeUpVMConditionWaiters, com.oracle.svm.core.thread.JavaThreads, result: Thread.interrupt0()@35 -> JavaThreads.wakeUpVMConditionWaiters(Thread)
method: getOptionValueType, org.graalvm.compiler.options.OptionDescriptor, result: SubstrateOptionsParser.printFlags(Predicate, SortedMap, String, PrintStream)@435 -> OptionDescriptor.getOptionValueType()
method: initIDs, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createAddressByteArray, java.net.InetAddress$HostsFileNameService, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initIDs, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getByAddress, java.net.InetAddress, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initIDs, java.io.FileOutputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addIndices, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.Inet6Address, result: InetAddress.getByAddress(String, byte[])@100 -> Inet6Address.<init>(String, byte[])
method: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, result: SubstrateOptionsParser.printFlags(Predicate, SortedMap, String, PrintStream)@121 -> OptionDescriptor.getOptionKey()
method: close, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeEncoding, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseValue, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInterface, com.oracle.svm.core.hub.LayoutEncoding, result: Class.isInterface()@4 -> LayoutEncoding.isInterface(int)
method: findFirst, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPrimitive, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPrimitive, com.oracle.svm.core.hub.LayoutEncoding, result: Class.isPrimitive()@4 -> LayoutEncoding.isPrimitive(int)
method: loadLibrary, java.lang.Runtime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProperty, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: split, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toCString, org.graalvm.nativeimage.c.type.CTypeConversion, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: casBase, java.util.concurrent.atomic.Striped64, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureUnsafeParkEvent, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProperty, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProbe, java.util.concurrent.atomic.Striped64, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeOnce, com.oracle.svm.core.thread.ParkEvent, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: popLocalFramesIncluding, com.oracle.svm.jni.JNIObjectHandles, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toCString, com.oracle.svm.core.c.CTypeConversionSupportImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$KeyIterator, result: ConcurrentSkipListMap$KeySet.iterator()@26 -> ConcurrentSkipListMap$KeyIterator.<init>(ConcurrentSkipListMap)
method: acquire, com.oracle.svm.core.thread.ParkEvent, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$Iter, result: ConcurrentSkipListMap$EntryIterator.<init>(ConcurrentSkipListMap)@7 -> ConcurrentSkipListMap$Iter.<init>(ConcurrentSkipListMap)
method: <init>, com.oracle.svm.core.thread.ParkEventConsCell, result: ParkEvent.initializeOnce(UninterruptibleUtils$AtomicReference, boolean)@22 -> ParkEventConsCell.<init>(ParkEvent)
method: get, java.lang.invoke.VarHandleInts$FieldInstanceReadOnly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allOf, java.util.EnumSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cas, java.util.concurrent.atomic.Striped64$Cell, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: split, com.oracle.svm.core.SubstrateUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$EntryIterator, result: ConcurrentSkipListMap$EntrySet.iterator()@26 -> ConcurrentSkipListMap$EntryIterator.<init>(ConcurrentSkipListMap)
method: pop, com.oracle.svm.core.thread.ParkEventList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findPatternInBuffer, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, org.graalvm.compiler.options.OptionType, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, com.oracle.svm.core.posix.thread.PosixParkEventFactory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator, result: ConcurrentSkipListMap$KeySet.iterator()@48 -> ConcurrentSkipListMap$SubMap$SubMapKeyIterator.<init>(ConcurrentSkipListMap$SubMap)
method: values, org.graalvm.compiler.options.OptionType, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readInput, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: name, java.lang.Enum, result: SubstrateOptionsParser.parseOption(SortedMap, String, EconomicMap, String, SubstrateOptionsParser$BooleanOptionFormat)@866 -> Enum.name()
method: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: longAccumulate, java.util.concurrent.atomic.Striped64, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: correct, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toMatchResult, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.c.CCharPointerHolderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: current, java.util.concurrent.ThreadLocalRandom, result: Striped64.longAccumulate(long, LongBinaryOperator, boolean)@9 -> ThreadLocalRandom.current()
method: getBytes, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.atomic.Striped64$Cell, result: Striped64.longAccumulate(long, LongBinaryOperator, boolean)@71 -> Striped64$Cell.<init>(long)
method: casCellsBusy, java.util.concurrent.atomic.Striped64, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exit, java.lang.Thread, result: JavaThreads.cleanupBeforeDetach(IsolateThread)@31 -> Thread.exit()
method: indexOf, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator, result: ConcurrentSkipListMap$EntrySet.iterator()@48 -> ConcurrentSkipListMap$SubMap$SubMapEntryIterator.<init>(ConcurrentSkipListMap$SubMap)
method: isPresent, java.lang.ThreadLocal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: advanceProbe, java.util.concurrent.atomic.Striped64, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNext, com.oracle.svm.core.thread.ParkEventConsCell, result: ParkEventList.pop()@18 -> ParkEventConsCell.getNext()
method: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hiNode, java.util.concurrent.ConcurrentSkipListMap$SubMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: threadTerminated, jdk.internal.misc.TerminatingThreadLocal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loNode, java.util.concurrent.ConcurrentSkipListMap$SubMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inBounds, java.util.concurrent.ConcurrentSkipListMap$SubMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: advance, java.util.concurrent.ConcurrentSkipListMap$Iter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getElement, com.oracle.svm.core.thread.ParkEventConsCell, result: ParkEventList.pop()@35 -> ParkEventConsCell.getElement()
method: <init>, com.oracle.svm.core.posix.thread.PosixParkEvent, result: PosixParkEventFactory.create()@4 -> PosixParkEvent.<init>()
method: indexOfChar, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChannel, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOfSupplementary, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makeReadable, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Scanner, result: Scanner.<init>(File, CharsetDecoder)@16 -> Scanner.<init>(Readable)
method: getZapConsumedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapChunkProvider.cleanAlignedChunk(AlignedHeapChunk$AlignedHeader)@4 -> HeapPolicy.getZapConsumedHeapChunks()
method: open, sun.nio.ch.FileChannelImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newReader, java.nio.channels.Channels, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toMatchResult, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHelp, org.graalvm.compiler.options.OptionDescriptor, result: SubstrateOptionsParser.printFlags(Predicate, SortedMap, String, PrintStream)@63 -> OptionDescriptor.getHelp()
method: <init>, java.util.Scanner$PatternLRUCache, result: Scanner.<init>(Readable, Pattern)@63 -> Scanner$PatternLRUCache.<init>(int)
method: useTransparentBounds, java.util.regex.Matcher, result: Scanner.<init>(Readable, Pattern)@223 -> Matcher.useTransparentBounds(boolean)
method: usePattern, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: useAnchoringBounds, java.util.regex.Matcher, result: Scanner.<init>(Readable, Pattern)@232 -> Matcher.useAnchoringBounds(boolean)
method: <init>, sun.nio.ch.FileChannelImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: region, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hitEnd, java.util.regex.Matcher, result: Scanner.findPatternInBuffer(Pattern, int)@78 -> Matcher.hitEnd()
method: getDefaultValue, org.graalvm.compiler.options.OptionKey, result: SubstrateOptionsParser.printFlags(Predicate, SortedMap, String, PrintStream)@124 -> OptionKey.getDefaultValue()
method: requireEnd, java.util.regex.Matcher, result: Scanner.findPatternInBuffer(Pattern, int)@116 -> Matcher.requireEnd()
method: useLocale, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: _threadTerminated, jdk.internal.misc.TerminatingThreadLocal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makeSpace, java.util.Scanner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forDecoder, sun.nio.cs.StreamDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.create(Equivalence, boolean)@6 -> EconomicMapImpl.<init>(Equivalence, boolean)
method: <init>, java.nio.channels.FileChannel, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: intercept, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.create(Equivalence, boolean)@9 -> EconomicMapImpl.intercept(EconomicMapImpl)
method: toLowerCase, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.ch.NativeThreadSet, result: FileChannelImpl.<init>(FileDescriptor, String, boolean, boolean, boolean, Object)@10 -> NativeThreadSet.<init>(int)
method: toLowerCase, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: join, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCase, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLanguage, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.StreamDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getXms, com.oracle.svm.core.option.XOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCaseEx, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapPolicy.getMinimumHeapSize()@97 -> HeapPolicy.setMinimumHeapSize(UnsignedWord)
method: printOption, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.Reader, result: StreamDecoder.<init>(ReadableByteChannel, CharsetDecoder, int)@1 -> Reader.<init>()
method: toLowerCaseEx, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charset, java.nio.charset.CharsetDecoder, result: StreamDecoder.<init>(ReadableByteChannel, CharsetDecoder, int)@26 -> CharsetDecoder.charset()
method: <init>, sun.nio.ch.FileChannelImpl$Closer, result: FileChannelImpl.<init>(FileDescriptor, String, boolean, boolean, boolean, Object)@134 -> FileChannelImpl$Closer.<init>(FileDescriptor)
method: isBmpCodePoint, java.lang.Character, result: StringUTF16.toLowerCase(String, byte[], Locale)@228 -> Character.isBmpCodePoint(int)
method: translateSavedIndexes, java.util.Scanner, result: Scanner.makeSpace()@47 -> Scanner.translateSavedIndexes(int)
method: put, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLanguage, sun.util.locale.BaseLocale, result: Locale.toString()@4 -> BaseLocale.getLanguage()
method: reset, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointAt, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charCount, java.lang.Character, result: StringUTF16.toLowerCaseEx(String, byte[], byte[], int, Locale, boolean)@90 -> Character.charCount(int)
method: getChunkUsedBytes, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: discardMark, java.nio.Buffer, result: HeapCharBuffer.compact()@47 -> Buffer.discardMark()
method: toLowerCaseEx, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, result: HeapImpl.report(Log, boolean)@32 -> HeapImpl.getOldGeneration()
method: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, result: GCImpl$Accounting.beforeCollection()@37 -> OldGeneration.getFromSpace()
method: checkIndex, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.HeapCharBuffer, result: HeapCharBuffer.subSequence(int, int)@53 -> HeapCharBuffer.<init>(char[], int, int, int, int, int)
method: <init>, java.util.regex.Matcher$ImmutableMatchResult, result: Matcher.toMatchResult(String)@27 -> Matcher$ImmutableMatchResult.<init>(int, int, int, int[], String)
method: split, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyOfRange, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.channels.spi.AbstractInterruptibleChannel, result: FileChannel.<init>()@1 -> AbstractInterruptibleChannel.<init>()
method: isEnabled, com.oracle.svm.core.log.Log$NoopLog, result: HeapImpl.getOldUsedChunkBytes()@74 -> Log$NoopLog.isEnabled()
method: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: SubstrateOptionsParser$OptionParseResult.error(String)@10 -> SubstrateOptionsParser$OptionParseResult.<init>(EnumSet, String)
method: <init>, sun.nio.ch.FileDispatcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCaseCharArray, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: advance, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toChars, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findNear, java.util.concurrent.ConcurrentSkipListMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: descend, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stringSimiliarity, org.graalvm.compiler.options.OptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ascend, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, org.graalvm.compiler.options.OptionKey$Lazy, result: OptionKey.getName()@7 -> OptionKey$Lazy.init()
method: next, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.StringJoiner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.StringJoiner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tooLow, java.util.concurrent.ConcurrentSkipListMap$SubMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.util.StringJoiner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookUpTable, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tooHigh, java.util.concurrent.ConcurrentSkipListMap$SubMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointAt, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toSurrogates, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: next, java.util.concurrent.ConcurrentSkipListMap$EntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkMatch, java.util.regex.Matcher$ImmutableMatchResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printOption, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: iterator, java.util.HashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: position, java.nio.channels.FileLock, result: FileChannelImpl.implCloseChannel()@70 -> FileLock.position()
method: <init>, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: size, java.nio.channels.FileLock, result: FileChannelImpl.implCloseChannel()@74 -> FileLock.size()
method: codePointAt, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isConditionMet, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, sun.nio.cs.StreamDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefault, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseDouble, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Formatter, result: Formatter.<init>()@14 -> Formatter.<init>(Locale, Appendable)
method: read0, sun.nio.cs.StreamDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: format, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isBeforeDot, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAfterI, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMoreAbove, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inReady, sun.nio.cs.StreamDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAfterSoftDotted, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isFinalCased, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readBytes, sun.nio.cs.StreamDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isHighSurrogate, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLowSurrogate, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toCodePoint, java.lang.Character, result: StringUTF16.codePointAt(byte[], int, int, boolean)@79 -> Character.toCodePoint(char, char)
method: getCombiningClass, sun.text.Normalizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointBefore, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, org.graalvm.compiler.core.CompilationWrapper$ExceptionAction, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, sun.nio.ch.FileChannelImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSoftDotted, java.lang.ConditionalSpecialCasing, result: ConditionalSpecialCasing.isAfterSoftDotted(String, int)@16 -> ConditionalSpecialCasing.isSoftDotted(int)
method: isOpen, java.nio.channels.spi.AbstractInterruptibleChannel, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getWordInstance, java.text.BreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.channels.ClosedChannelException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.channels.NonReadableChannelException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isCased, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkChannelPositionAligned, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: beginBlocking, sun.nio.ch.FileChannelImpl, result: FileChannelImpl.read(ByteBuffer)@50 -> FileChannelImpl.beginBlocking()
method: codePointBefore, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: begin, java.nio.channels.spi.AbstractInterruptibleChannel, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCombiningClass, sun.text.normalizer.UCharacter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.StringJoiner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.channels.spi.AbstractInterruptibleChannel$1, result: AbstractInterruptibleChannel.begin()@13 -> AbstractInterruptibleChannel$1.<init>(AbstractInterruptibleChannel)
method: getNFDInstance, sun.text.normalizer.Normalizer2, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: blockedOn, java.nio.channels.spi.AbstractInterruptibleChannel, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointBefore, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: endBlocking, sun.nio.ch.FileChannelImpl, result: FileChannelImpl.read(ByteBuffer)@91 -> FileChannelImpl.endBlocking(boolean)
method: spaces, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: end, java.nio.channels.spi.AbstractInterruptibleChannel, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wrap, com.oracle.svm.core.option.SubstrateOptionsParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: read, sun.nio.ch.IOUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lineSeparator, java.lang.System, result: SubstrateOptionsParser.printOption(Consumer, String, String, int, int, int)@23 -> System.lineSeparator()
method: <init>, java.nio.channels.ClosedByInterruptException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNFCInstance, sun.text.normalizer.Norm2AllModes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.channels.AsynchronousCloseException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readIntoNativeBuffer, sun.nio.ch.IOUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clone, java.text.BreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkRemainingBufferSizeAligned, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compactElts, java.util.StringJoiner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTemporaryAlignedDirectBuffer, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clone, sun.text.RuleBasedBreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTemporaryDirectBuffer, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.util.StringJoiner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offerFirstTemporaryDirectBuffer, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, org.graalvm.compiler.debug.DebugOptions$PrintGraphTarget, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.nio.ch.IOStatus, result: FileChannelImpl.read(ByteBuffer)@158 -> IOStatus.normalize(int)
method: length, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkBufferPositionAligned, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replace, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isBufferTooLarge, sun.nio.ch.Util, result: Util.getTemporaryAlignedDirectBuffer(int, int)@1 -> Util.isBufferTooLarge(int)
method: size, java.util.ArrayList, result: MessageFormat.formatToCharacterIterator(Object)@43 -> ArrayList.size()
method: allocateDirect, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: blockedOn, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: alignedSlice, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: length, java.lang.AbstractStringBuilder, result: StringBuilder.length()@1 -> AbstractStringBuilder.length()
method: alignmentOffset, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.Enum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: free, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstanceFromSingleton, sun.text.normalizer.Norm2AllModes, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replace, java.lang.AbstractStringBuilder, result: StringBuilder.replace(int, int, String)@4 -> AbstractStringBuilder.replace(int, int, String)
method: lastIndexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.nio.ch.IOStatus, result: FileChannelImpl.position()@157 -> IOStatus.normalize(long)
method: checkRangeSIOOBE, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isBufferTooLarge, sun.nio.ch.Util, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shift, java.lang.AbstractStringBuilder, result: AbstractStringBuilder.replace(int, int, String)@52 -> AbstractStringBuilder.shift(int, int)
method: lastIndexOf, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.DirectByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lastIndexOf, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDirectMemoryPageAligned, jdk.internal.misc.VM, result: DirectByteBuffer.<init>(int)@8 -> VM.isDirectMemoryPageAligned()
method: lastIndexOfLatin1, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pageSize, java.nio.Bits, result: DirectByteBuffer.<init>(int)@12 -> Bits.pageSize()
method: reserveMemory, java.nio.Bits, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUnsignedInt, java.lang.Byte, result: InflaterInputStream.read()@28 -> Byte.toUnsignedInt(byte)
method: allocateMemory, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unreserveMemory, java.nio.Bits, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMemory, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.DirectByteBuffer$Deallocator, result: DirectByteBuffer.<init>(int)@130 -> DirectByteBuffer$Deallocator.<init>(long, long, int)
method: create, jdk.internal.ref.Cleaner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flip, java.nio.MappedByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maxDirectMemory, jdk.internal.misc.VM, result: Bits.reserveMemory(long, int)@13 -> VM.maxDirectMemory()
method: indexOf, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryReserveMemory, java.nio.Bits, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOfLatin1, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getJavaLangRefAccess, jdk.internal.misc.SharedSecrets, result: Bits.reserveMemory(long, int)@32 -> SharedSecrets.getJavaLangRefAccess()
method: getEnumConstantsShared, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: gc, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sleep, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocateMemoryChecks, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocateMemory0, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decrementAndGet, java.util.concurrent.atomic.AtomicLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.DirectByteBuffer, result: DirectByteBuffer.slice(int, int)@51 -> DirectByteBuffer.<init>(DirectBuffer, int, int, int, int, int)
method: addAndGet, java.util.concurrent.atomic.AtomicLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, com.oracle.svm.core.util.LazyFinalReference, result: Class.getEnumConstantsShared()@17 -> LazyFinalReference.get()
method: setMemory, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.ref.Cleaner, result: Cleaner.create(Object, Runnable)@12 -> Cleaner.<init>(Object, Runnable)
method: add, jdk.internal.ref.Cleaner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMemoryChecks, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malloc, org.graalvm.nativeimage.UnmanagedMemory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: gc, java.lang.Runtime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Double, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sleep, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUserRequestedGCPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, result: Runtime.gc()@6 -> HeapPolicy.getUserRequestedGCPolicy()
method: removeJavaVM, com.oracle.svm.jni.JNIJavaVMList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toJavaFormatString, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeCauseCollection, com.oracle.svm.core.genscavenge.HeapPolicy$AlwaysCollectCompletely, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGC, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, jdk.internal.ref.Cleaner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.ref.Cleaner$1, result: Cleaner.clean()@27 -> Cleaner$1.<init>(Cleaner, Throwable)
method: current, sun.nio.ch.NativeThread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: freeMemory, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBinaryToASCIIBuffer, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: freeMemoryChecks, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setSign, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: FloatingDecimal.getBinaryToASCIIConverter(double, boolean)@165 -> FloatingDecimal$BinaryToASCIIBuffer.setSign(boolean)
method: freeMemory0, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dtoa, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.genscavenge.GCImpl$Timer, result: GCImpl.possibleCollectionEpilogue(UnsignedWord)@35 -> GCImpl$Timer.<init>(String)
method: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, result: GCImpl.possibleCollectionEpilogue(UnsignedWord)@40 -> GCImpl$Timer.open()
method: signal, sun.nio.ch.NativeThread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: processPendingReferences, com.oracle.svm.core.heap.ReferenceInternals, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: processCleaners, com.oracle.svm.core.heap.ReferenceHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.ch.Util$BufferCache, result: Util$1.initialValue()@4 -> Util$BufferCache.<init>()
method: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, result: ReferenceHandler.maybeProcessCurrentlyPending()@47 -> ThreadingSupportImpl.resumeRecurringCallback()
method: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, result: GCImpl.possibleCollectionEpilogue(UnsignedWord)@65 -> GCImpl$Timer.close()
method: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, result: GCImpl.collectCompletely(GCCause)@10 -> GCImpl.setPolicy(CollectionPolicy)
method: getFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: GCImpl$Timer.close()@10 -> HeapChunkProvider.getFirstAllocationTime()
method: logOneTimer, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.ch.NativeDispatcher, result: FileDispatcher.<init>()@1 -> NativeDispatcher.<init>()
method: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: size0, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueueBlockingNoSafepoint, com.oracle.svm.core.thread.JavaVMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: read0, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pread0, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setDirect0, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: release0, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: seek0, sun.nio.ch.FileDispatcherImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.UnsupportedOperationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasQueue, com.oracle.svm.core.heap.ReferenceInternals, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: waitForReferenceProcessing, java.lang.ref.Reference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueueDirectly, com.oracle.svm.core.heap.ReferenceInternals, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: waitForReferenceProcessing, com.oracle.svm.core.heap.ReferenceInternals, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insignificantDigitsForPow2, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: developLongDigits, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: estimateDecExp, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wait, java.lang.Object, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleaner, jdk.internal.ref.CleanerFactory, result: ReferenceHandler.processCleaners()@8 -> CleanerFactory.cleaner()
method: next, sun.nio.ch.Util$BufferCache, result: Util$BufferCache.removeFirst()@47 -> Util$BufferCache.next(int)
method: rewind, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rewind, java.nio.MappedByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rewind, java.nio.Buffer, result: ByteBuffer.rewind()@1 -> Buffer.rewind()
method: valueOfPow52, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: leftShift, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOfMulPow52, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: roundup, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isHeldExclusively, java.util.concurrent.locks.ReentrantLock$Sync, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, result: ReentrantLock$Sync.isHeldExclusively()@1 -> AbstractOwnableSynchronizer.getExclusiveOwnerThread()
method: newCondition, java.util.concurrent.locks.ReentrantLock$Sync, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: ReentrantLock$Sync.newCondition()@5 -> AbstractQueuedSynchronizer$ConditionObject.<init>(AbstractQueuedSynchronizer)
method: size, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.isEmpty()@1 -> EconomicMapImpl.size()
method: acquire, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addWaiter, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: AbstractQueuedSynchronizer.acquire(int)@13 -> AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer$Node)
method: acquireQueued, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: selfInterrupt, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$002, com.oracle.svm.core.jdk.SubstrateRuntimeMXBean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: find, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasHashArray, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.find(Object)@1 -> EconomicMapImpl.hasHashArray()
method: findHash, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: release, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: ReentrantLock.unlock()@5 -> AbstractQueuedSynchronizer.release(int)
method: findLinear, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getValue, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRawValue, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unparkSuccessor, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalThreadStateException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHashIndex, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHashArray, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getKey, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareKeys, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findWithCollision, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSetWaitStatus, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExecutable, org.graalvm.nativeimage.ImageInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureKindAvailable, org.graalvm.nativeimage.ImageInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, java.lang.ThreadGroup, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unpark, java.util.concurrent.locks.LockSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parse, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Error, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: destroy, java.lang.ThreadGroup, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkAccess, java.lang.ThreadGroup, result: ThreadGroup.destroy()@5 -> ThreadGroup.checkAccess()
method: create, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: install, com.oracle.svm.core.posix.PosixSubstrateSegfaultHandler, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.MissingFormatArgumentException, result: Formatter.format(Locale, String, Object[])@240 -> MissingFormatArgumentException.<init>(String)
method: load, sun.nio.ch.IOUtil, result: NativeThread.<clinit>()@0 -> IOUtil.load()
method: getChars, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.fs.UnixNativeDispatcher$1, result: UnixNativeDispatcher.<clinit>()@4 -> UnixNativeDispatcher$1.<init>()
method: getJavaIOFileDescriptorAccess, jdk.internal.misc.SharedSecrets, result: FileChannelImpl.<clinit>()@16 -> SharedSecrets.getJavaIOFileDescriptorAccess()
method: remove, java.lang.ThreadGroup, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.ch.IOUtil$1, result: IOUtil.<clinit>()@20 -> IOUtil$1.<init>()
method: init, sun.nio.ch.NativeThread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureClassInitialized, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueue, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initIDs, sun.nio.ch.IOUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: iovMax, sun.nio.ch.IOUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fill, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.lang.Object, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHashTableSize, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.UnsupportedOperationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.Inet4AddressImpl, result: Inet6AddressImpl.loopbackAddress()@122 -> Inet4AddressImpl.<init>()
method: log, com.oracle.svm.core.thread.VMOperationControl, result: VMOperationControl.enqueue(VMOperation, NativeVMOperationData)@8 -> VMOperationControl.log()
method: getEntryAfterMiss, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEntries, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, org.graalvm.collections.EconomicMapImpl$2, result: EconomicMapImpl.getEntries()@5 -> EconomicMapImpl$2.<init>(EconomicMapImpl)
method: rangeCheck, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: register, jdk.internal.misc.TerminatingThreadLocal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.thread.ParkEvent, result: PosixParkEvent.<init>()@1 -> ParkEvent.<init>()
method: lock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: VMOperationControl$WorkQueues.enqueueAndExecute(VMOperation, NativeVMOperationData)@6 -> VMOperationControl$WorkQueues.lock()
method: enqueue, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: executeAllQueuedVMOperations, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.FormatterClosedException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rangeCheck, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getConstructor0, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unlock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: VMOperationControl$WorkQueues.enqueueAndExecute(VMOperation, NativeVMOperationData)@74 -> VMOperationControl$WorkQueues.unlock()
method: initDefault, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isStaticallyExportedOrOpen, java.lang.Module, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZero, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allows, java.lang.Module, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matcher, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: find, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: start, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkText, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Formatter$FixedString, result: Formatter.parse(String)@73 -> Formatter$FixedString.<init>(Formatter, String, int, int)
method: equals, sun.util.locale.BaseLocale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.text.DecimalFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextIndex, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.net.NetworkInterface$2, result: NetworkInterface.enumerationFromArray(Object[])@5 -> NetworkInterface$2.<init>(Object[])
method: <init>, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replaceStaleEntry, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: end, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, result: ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object)@37 -> ThreadLocal$ThreadLocalMap$Entry.<init>(ThreadLocal, Object)
method: cleanSomeSlots, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rehash, java.lang.ThreadLocal$ThreadLocalMap, result: ThreadLocal$ThreadLocalMap.set(ThreadLocal, Object)@132 -> ThreadLocal$ThreadLocalMap.rehash()
method: <init>, java.util.IllegalFormatException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ArrayIndexOutOfBoundsException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setThreshold, java.lang.ThreadLocal$ThreadLocalMap, result: ThreadLocal$ThreadLocalMap.<init>(ThreadLocal, Object)@49 -> ThreadLocal$ThreadLocalMap.setThreshold(int)
method: <init>, java.lang.ReflectiveOperationException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loopbackAddress, java.net.Inet4AddressImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, result: FloatingDecimal$1.initialValue()@4 -> FloatingDecimal$BinaryToASCIIBuffer.<init>()
method: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: halt, java.lang.Shutdown, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: beforeHalt, java.lang.Shutdown, result: Shutdown.exit(int)@35 -> Shutdown.beforeHalt()
method: <init>, java.util.concurrent.locks.AbstractOwnableSynchronizer, result: AbstractQueuedSynchronizer.<init>()@1 -> AbstractOwnableSynchronizer.<init>()
method: compare, java.lang.module.ModuleDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: halt0, java.lang.Shutdown, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: modsValue, java.lang.module.ModuleDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkSize, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.module.ModuleDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkPrimitivePointer, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: read0, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sort, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sort, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: countRunAndMakeAscending, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.File, result: FileInputStream.<init>(String)@10 -> File.<init>(String)
method: binarySort, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: invalidInput, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: minRunLength, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pushRun, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readDynamicHubFromObject, com.oracle.svm.core.heap.ObjectHeader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mergeCollapse, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkPointer, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mergeForceCollapse, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkPrimitiveArray, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reverseRange, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mergeAt, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: matchesFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.util.AbstractSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.lang.module.ModuleDescriptor$Version, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOptionType, org.graalvm.compiler.options.OptionDescriptor, result: SubstrateOptionsParser$OptionParseResult.matchesFlags(OptionDescriptor, boolean)@26 -> OptionDescriptor.getOptionType()
method: compareTo, java.lang.module.ModuleDescriptor$Version, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTokens, java.lang.module.ModuleDescriptor$Version, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prefixLength, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.InputStream, result: FileInputStream.<init>(File)@1 -> InputStream.<init>()
method: gallopRight, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.module.ModuleDescriptor$Provides, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: gallopLeft, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInvalid, java.io.File, result: FileInputStream.<init>(File)@54 -> File.isInvalid()
method: mergeLo, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mergeHi, java.util.ComparableTimSort, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: name, java.lang.module.ModuleDescriptor$Requires, result: ModuleDescriptor$Requires.toString()@15 -> ModuleDescriptor$Requires.name()
method: <init>, java.io.FileNotFoundException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.FileDescriptor, result: FileInputStream.<init>(File)@75 -> FileDescriptor.<init>()
method: attach, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: open, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFinalizer, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.module.ModuleDescriptor$Requires, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: modifiers, java.lang.module.ModuleDescriptor$Requires, result: ModuleDescriptor$Requires.compareTo(ModuleDescriptor$Requires)@26 -> ModuleDescriptor$Requires.modifiers()
method: toString, java.lang.module.ModuleDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: register, java.io.FileCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: transferForSignal, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encode, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.module.ModuleDescriptor$Exports, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: close, java.nio.channels.spi.AbstractInterruptibleChannel, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enq, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.FileInputStream$1, result: FileInputStream.close()@62 -> FileInputStream$1.<init>(FileInputStream)
method: closeAll, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initFrom, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: modifiers, java.lang.module.ModuleDescriptor$Exports, result: ModuleDescriptor$Exports.compareTo(ModuleDescriptor$Exports)@26 -> ModuleDescriptor$Exports.modifiers()
method: init, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)@21 -> EconomicMapImpl.init(int)
method: compareTo, java.lang.module.ModuleDescriptor$Opens, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putAll, org.graalvm.collections.EconomicMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: modifiers, java.lang.module.ModuleDescriptor$Opens, result: ModuleDescriptor$Opens.compareTo(ModuleDescriptor$Opens)@26 -> ModuleDescriptor$Opens.modifiers()
method: findAndRemoveHash, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.util.stream.Stream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: big5pow, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: concat, java.util.stream.Stream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: joining, java.util.stream.Collectors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setHashArray, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findAndRemoveWithCollision, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cmp, java.lang.module.ModuleDescriptor$Version, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.math.FDBigInteger, result: FDBigInteger.valueOfPow52(int, int)@54 -> FDBigInteger.<init>(int[], int)
method: <init>, java.util.stream.Streams$StreamBuilderImpl, result: Stream.of(Object)@5 -> Streams$StreamBuilderImpl.<init>(Object)
method: ensureCapacity, java.util.ComparableTimSort, result: ComparableTimSort.mergeHi(int, int, int, int)@39 -> ComparableTimSort.ensureCapacity(int)
method: valueOfPow2, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getState, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.removeKey(Object)@49 -> EconomicMapImpl.remove(int)
method: <init>, java.util.stream.Streams$ConcatSpliterator$OfRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: composedClose, java.util.stream.Streams, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: open0, java.io.FileInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: joining, java.util.stream.Collectors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Streams$ConcatSpliterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setKey, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Streams$2, result: Streams.composedClose(BaseStream, BaseStream)@6 -> Streams$2.<init>(BaseStream, BaseStream)
method: <init>, java.util.stream.Streams$AbstractStreamBuilderImpl, result: Streams$StreamBuilderImpl.<init>(Object)@1 -> Streams$AbstractStreamBuilderImpl.<init>()
method: setRawValue, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.FileInputStream$AltFinalizer, result: FileInputStream.getFinalizer(FileInputStream)@27 -> FileInputStream$AltFinalizer.<init>(FileInputStream)
method: mult, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: composeWithExceptions, java.util.stream.Streams, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeCompress, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.remove(int)@157 -> EconomicMapImpl.maybeCompress(int)
method: mult, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.Streams$1, result: Streams.composeWithExceptions(Runnable, Runnable)@6 -> Streams$1.<init>(Runnable, Runnable)
method: valid, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sourceStageSpliterator, java.util.stream.AbstractPipeline, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, result: ReentrantLock$Sync.tryRelease(int)@35 -> AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread)
method: get, java.io.FileDescriptor$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.StreamSpliterators$DelegatingSpliterator, result: ReferencePipeline.lazySpliterator(Supplier)@5 -> StreamSpliterators$DelegatingSpliterator.<init>(Supplier)
method: getHandle, java.io.FileDescriptor$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: spliterator, java.util.Spliterators, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Spliterators$IteratorSpliterator, result: Spliterators.spliterator(Collection, int)@12 -> Spliterators$IteratorSpliterator.<init>(Collection, int)
method: <init>, java.io.FileCleanable, result: FileCleanable.register(FileDescriptor)@42 -> FileCleanable.<init>(FileDescriptor, Cleaner, int, long)
method: setState, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: ReentrantLock$Sync.tryRelease(int)@40 -> AbstractQueuedSynchronizer.setState(int)
method: <init>, java.util.stream.ReferencePipeline$3, result: ReferencePipeline.map(Function)@22 -> ReferencePipeline$3.<init>(ReferencePipeline, AbstractPipeline, StreamShape, int, Function)
method: registerCleanup, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalStateException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compile, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.stream.ReferencePipeline$3$1, result: ReferencePipeline$3.opWrapSink(int, Sink)@6 -> ReferencePipeline$3$1.<init>(ReferencePipeline$3, Sink)
method: checkNativeAddress, jdk.internal.misc.Unsafe, result: Unsafe.checkPointer(Object, long)@6 -> Unsafe.checkNativeAddress(long)
method: checkOffset, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.UnsatisfiedLinkError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadLibrary, java.lang.ClassLoader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTextLength, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: search, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadLibrary0, com.oracle.svm.core.jdk.NativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mapLibraryName, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProperty, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.UnknownFormatConversionException, result: Formatter.checkText(String, int, int)@47 -> UnknownFormatConversionException.<init>(String)
method: <init>, java.io.File, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mapAlternativeName, java.lang.ClassLoaderHelper, result: NativeLibrarySupport.loadLibrary(String, boolean)@186 -> ClassLoaderHelper.mapAlternativeName(File)
method: compressLarge, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.InternalError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, org.graalvm.compiler.options.OptionValues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeNull, org.graalvm.compiler.options.OptionValues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getHashThreshold, org.graalvm.collections.EconomicMapImpl, result: EconomicMapImpl.compressLarge(int)@133 -> EconomicMapImpl.getHashThreshold()
method: createHash, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.VirtualMachineError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupCodeInfoQueryResult, com.oracle.svm.core.code.CodeInfoTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toHexString, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.code.CodeInfoQueryResult, result: CodeInfoTable.lookupCodeInfoQueryResult(CodeInfo, CodePointer)@24 -> CodeInfoQueryResult.<init>()
method: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shouldShowFrame, com.oracle.svm.core.jdk.StackTraceUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUnsignedString0, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAnnotationPresent, org.graalvm.util.DirectAnnotationAccess, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: formatUnsignedLong0, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.ref.PhantomCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, result: EconomicMapImpl.findAndRemoveWithCollision(Object, EconomicMapImpl$CollisionLink, int)@75 -> EconomicMapImpl$CollisionLink.<init>(Object, int)
method: with, java.lang.StringCoding$Result, result: StringCoding.decode(Charset, byte[], int, int)@108 -> StringCoding$Result.with()
method: getAdapter, sun.util.locale.provider.LocaleProviderAdapter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: requireNonNull, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forJRE, sun.util.locale.provider.LocaleProviderAdapter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maxCharsPerByte, java.nio.charset.CharsetDecoder, result: StringCoding$StringDecoder.decode(byte[], int, int)@71 -> CharsetDecoder.maxCharsPerByte()
method: scale, java.lang.StringCoding, result: StringCoding$StringDecoder.decode(byte[], int, int)@74 -> StringCoding.scale(int, float)
method: with, java.lang.StringCoding$Result, result: StringCoding.decode(Charset, byte[], int, int)@173 -> StringCoding$Result.with(char[], int, int)
method: start, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: end, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, java.nio.charset.CharsetDecoder, result: StringCoding$StringDecoder.decode(byte[], int, int)@131 -> CharsetDecoder.reset()
method: index, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@38 -> Formatter$FormatSpecifier.index(String, int, int)
method: getCleanerImpl, jdk.internal.ref.CleanerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flags, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@54 -> Formatter$FormatSpecifier.flags(String, int, int)
method: <init>, java.lang.ref.PhantomReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wrap, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: width, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, jdk.internal.ref.PhantomCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.HeapByteBuffer, result: ByteBuffer.wrap(byte[], int, int)@7 -> HeapByteBuffer.<init>(byte[], int, int)
method: precision, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefaultParent, java.io.UnixFileSystem, result: File.<init>(String, String)@41 -> UnixFileSystem.getDefaultParent()
method: wrap, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.Formatter$Flags, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@125 -> Formatter$Flags.add(Formatter$Flags)
method: wrap, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resolve, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: conversion, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decode, java.nio.charset.CharsetDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkDateTime, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isGeneral, java.util.Formatter$Conversion, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@162 -> Formatter$Conversion.isGeneral(char)
method: checkGeneral, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isCharacter, java.util.Formatter$Conversion, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@179 -> Formatter$Conversion.isCharacter(char)
method: checkCharacter, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.StringCharacterIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInteger, java.util.Formatter$Conversion, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@196 -> Formatter$Conversion.isInteger(char)
method: checkInteger, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@203 -> Formatter$FormatSpecifier.checkInteger()
method: <init>, java.text.StringCharacterIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isFloat, java.util.Formatter$Conversion, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@213 -> Formatter$Conversion.isFloat(char)
method: checkFloat, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@220 -> Formatter$FormatSpecifier.checkFloat()
method: isText, java.util.Formatter$Conversion, result: Formatter$FormatSpecifier.<init>(Formatter, String, Matcher)@230 -> Formatter$Conversion.isText(char)
method: checkText, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.text.RuleBasedBreakIterator$SafeCharIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: big5powRec, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: searchMethods, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trimLeadingZeros, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkOffset, sun.text.RuleBasedBreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: arrayContentsEq, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: methodToString, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putHashEntry, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: describeMethod, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.NoSuchMethodException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNextIndex, sun.text.RuleBasedBreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCurrentCodePointCount, sun.text.RuleBasedBreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: throwIllegalStateException, java.nio.charset.CharsetDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toBytes, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remaining, java.nio.Buffer, result: CharsetDecoder.decode(ByteBuffer, CharBuffer, boolean)@120 -> Buffer.remaining()
method: malformedForLength, java.nio.charset.CoderResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toBytes, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: put, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: position, java.nio.Buffer, result: StringCoding$StringDecoder.decode(byte[], int, int)@225 -> Buffer.position()
method: mult, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mult, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: loadFrameInfo, com.oracle.svm.core.code.CodeInfoDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.CoderMalfunctionError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forType, sun.util.locale.provider.LocaleProviderAdapter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flush, java.nio.charset.CharsetDecoder, result: StringCoding$StringDecoder.decode(byte[], int, int)@183 -> CharsetDecoder.flush(CharBuffer)
method: getPrevious, sun.text.RuleBasedBreakIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Enum, result: LocaleProviderAdapter.forType(LocaleProviderAdapter$Type)@40 -> Enum.toString()
method: size, jdk.internal.math.FDBigInteger, result: FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)@1 -> FDBigInteger.size()
method: hash, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Error, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNode, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.code.ReusableTypeReader, result: CodeInfoDecoder.loadFrameInfo(CodeInfo, long, int)@79 -> ReusableTypeReader.<init>(NonmovableArray, long)
method: <init>, java.lang.Throwable, result: Error.<init>(Throwable)@2 -> Throwable.<init>(Throwable)
method: mult, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, org.graalvm.compiler.core.common.util.AbstractTypeReader, result: ReusableTypeReader.<init>(NonmovableArray, long)@1 -> AbstractTypeReader.<init>()
method: compareAndSet, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTreeNode, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unpark, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.HeapCharBuffer, result: CharBuffer.wrap(char[], int, int)@7 -> HeapCharBuffer.<init>(char[], int, int)
method: root, java.util.HashMap$TreeNode, result: HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)@14 -> HashMap$TreeNode.root()
method: find, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.CharBuffer, result: HeapCharBuffer.<init>(char[], int, int)@10 -> CharBuffer.<init>(int, int, int, int, char[], int)
method: elementAt, sun.text.CompactByteArray, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer$Node)@5 -> AbstractQueuedSynchronizer$Node.<init>(AbstractQueuedSynchronizer$Node)
method: getValue, sun.text.SupplementaryCharacterData, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setPrevRelaxed, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSetTail, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer$Node)@40 -> AbstractQueuedSynchronizer.initializeSyncQueue()
method: asS4, org.graalvm.compiler.core.common.util.TypeConversion, result: TypeReader.getSVInt()@6 -> TypeConversion.asS4(long)
method: createLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: predecessor, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IdentityHashMap$KeySet, result: IdentityHashMap.keySet()@14 -> IdentityHashMap$KeySet.<init>(IdentityHashMap)
method: shouldParkAfterFailedAcquire, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parkAndCheckInterrupt, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setHead, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cancelAcquire, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: capacity, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyOf, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: read, org.graalvm.compiler.core.common.util.AbstractTypeReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readPacked, org.graalvm.compiler.core.common.util.AbstractTypeReader, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, result: AbstractTypeReader.getSV()@4 -> AbstractTypeReader.decodeSign(long)
method: leftShift, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: park, java.util.concurrent.locks.LockSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: interrupted, java.lang.Thread, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSetNext, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkForComodification, java.util.ArrayList$Itr, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.lang.Enum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.NoSuchElementException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.lang.Boolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.lang.Byte, result: Byte.hashCode()@4 -> Byte.hashCode(byte)
method: hashCode, java.lang.Character, result: Character.hashCode()@4 -> Character.hashCode(char)
method: hashCode, java.lang.Short, result: Short.hashCode()@4 -> Short.hashCode(short)
method: hashCode, java.lang.Integer, result: Integer.hashCode()@4 -> Integer.hashCode(int)
method: hashCode, java.lang.Long, result: Long.hashCode()@4 -> Long.hashCode(long)
method: typeCheck, java.util.EnumSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: AbstractQueuedSynchronizer.initializeSyncQueue()@9 -> AbstractQueuedSynchronizer$Node.<init>()
method: hashCode, java.lang.Float, result: Float.hashCode()@4 -> Float.hashCode(float)
method: hashCode, java.lang.Double, result: Double.hashCode()@4 -> Double.hashCode(double)
method: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareAndSetState, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: limit, java.nio.Buffer, result: ByteBuffer.hashCode()@8 -> Buffer.limit()
method: checkForComodification, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary, result: PosixNativeLibrarySupport.createLibrary(String, boolean)@7 -> PosixNativeLibrarySupport$PosixNativeLibrary.<init>(PosixNativeLibrarySupport, String, boolean)
method: newLine, java.io.PrintWriter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, java.io.PrintWriter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setBlocker, java.util.concurrent.locks.LockSupport, result: LockSupport.park(Object)@6 -> LockSupport.setBlocker(Thread, Object)
method: <init>, java.io.FileOutputStream$1, result: FileOutputStream.close()@62 -> FileOutputStream$1.<init>(FileOutputStream)
method: park, jdk.internal.misc.Unsafe, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInterrupted, java.lang.Thread, result: Thread.interrupted()@4 -> Thread.isInterrupted(boolean)
method: park, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: delayNanos, com.oracle.svm.core.util.TimeUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: park, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: StringBuffer.append(CharSequence, int, int)@9 -> AbstractStringBuilder.append(CharSequence, int, int)
method: checkRange, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendChars, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flushBuffer, java.io.BufferedOutputStream, result: BufferedOutputStream.flush()@1 -> BufferedOutputStream.flushBuffer()
method: getThreadStatus, com.oracle.svm.core.thread.JavaThreads, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeAdjustNewParkStatus, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, jdk.vm.ci.meta.JavaKind, result: JavaConstant.defaultForKind(JavaKind)@104 -> JavaKind.toString()
method: getOwner, java.util.concurrent.locks.ReentrantLock$Sync, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, java.io.BufferedWriter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, sun.util.locale.BaseLocale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBlocker, java.util.concurrent.locks.LockSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMonitorCondition, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMonitorLockSynchronizer, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putCharsSB, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasQueuedThreads, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setValue, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: grow, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$EntrySet, result: TreeMap.entrySet()@19 -> TreeMap$EntrySet.<init>(TreeMap)
method: toString, java.lang.Boolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap$EntrySet, result: HashMap.entrySet()@15 -> HashMap$EntrySet.<init>(HashMap)
method: toString, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.JumboEnumSet$EnumSetIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntrySet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntrySet, result: WeakIdentityHashMap$EntrySet.<init>(WeakIdentityHashMap, WeakIdentityHashMap$1)@2 -> WeakIdentityHashMap$EntrySet.<init>(WeakIdentityHashMap)
method: <init>, java.util.RegularEnumSet$EnumSetIterator, result: RegularEnumSet.iterator()@5 -> RegularEnumSet$EnumSetIterator.<init>(RegularEnumSet)
method: toString, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stringSize, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Float, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toJavaFormatString, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkIndex, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getShortName, com.oracle.svm.jni.access.JNINativeLinkage, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mangleName, com.oracle.svm.jni.access.JNINativeLinkage, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: internalNameToJava, jdk.vm.ci.meta.MetaUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fromPrimitiveOrVoidTypeChar, jdk.vm.ci.meta.JavaKind, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getJavaName, jdk.vm.ci.meta.JavaKind, result: MetaUtil.internalNameToJava(String, boolean, boolean)@159 -> JavaKind.getJavaName()
method: replacePackageSeparatorsWithDot, jdk.vm.ci.meta.MetaUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSignature, com.oracle.svm.jni.access.JNINativeLinkage, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLetterOrDigit, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toHexString, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLetterOrDigit, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isJavaIdentifierStart, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUnsignedString0, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, com.oracle.svm.core.c.CGlobalDataImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Hashtable$EntrySet, result: Hashtable.entrySet()@13 -> Hashtable$EntrySet.<init>(Hashtable)
method: synchronizedSet, java.util.Collections, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$SynchronizedSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$SynchronizedCollection, result: Collections$SynchronizedSet.<init>(Set, Object)@3 -> Collections$SynchronizedCollection.<init>(Collection, Object)
method: formatUnsignedInt, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPriority, java.lang.Thread, result: Thread.toString()@34 -> Thread.getPriority()
method: getName, java.lang.ThreadGroup, result: Thread.toString()@46 -> ThreadGroup.getName()
method: isJavaIdentifierStart, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: identityHashCodeString, jdk.vm.ci.meta.MetaUtil, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, org.graalvm.compiler.options.OptionValues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, org.graalvm.compiler.options.OptionValues$1, result: OptionValues.toString(UnmodifiableEconomicMap)@4 -> OptionValues$1.<init>()
method: <init>, java.util.TreeMap, result: OptionValues.toString(UnmodifiableEconomicMap)@13 -> TreeMap.<init>(Comparator)
method: put, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.util.AbstractMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$Entry, result: TreeMap.put(Object, Object)@24 -> TreeMap$Entry.<init>(Object, Object, TreeMap$Entry)
method: setValue, java.util.TreeMap$Entry, result: TreeMap.put(Object, Object)@103 -> TreeMap$Entry.setValue(Object)
method: fixAfterInsertion, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IdentityHashMap$EntrySet, result: IdentityHashMap.entrySet()@17 -> IdentityHashMap$EntrySet.<init>(IdentityHashMap)
method: valueOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.concurrent.atomic.AtomicInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.concurrent.atomic.AtomicLong, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptyIterator, java.util.Collections, result: Collections$EmptyList.iterator()@0 -> Collections.emptyIterator()
method: get, java.util.concurrent.atomic.AtomicBoolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Boolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getScript, sun.util.locale.BaseLocale, result: Locale.toString()@23 -> BaseLocale.getScript()
method: parentOf, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: leftOf, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rightOf, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: colorOf, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRegion, sun.util.locale.BaseLocale, result: Locale.toString()@42 -> BaseLocale.getRegion()
method: setColor, java.util.TreeMap, result: TreeMap.fixAfterInsertion(TreeMap$Entry)@67 -> TreeMap.setColor(TreeMap$Entry, boolean)
method: rotateLeft, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getVariant, sun.util.locale.BaseLocale, result: Locale.toString()@61 -> BaseLocale.getVariant()
method: rotateRight, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: langReflectAccess, jdk.internal.reflect.ReflectionFactory, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.CharsetDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEntry, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEntryUsingComparator, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putVal, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resize, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putTreeVal, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: min, java.io.BufferedWriter, result: BufferedWriter.write(String, int, int)@42 -> BufferedWriter.min(int, int)
method: treeifyBin, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSurvivorChunkUsedBytes, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChunkBytes, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: split, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: enqueue, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: comparableClassFor, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareComparables, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tieBreakOrder, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: balanceInsertion, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: moveRootToFront, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: treeify, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$Values, result: TreeMap.values()@14 -> TreeMap$Values.<init>(TreeMap)
method: maskNull, com.oracle.svm.core.WeakIdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hash, com.oracle.svm.core.WeakIdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTable, com.oracle.svm.core.WeakIdentityHashMap, result: WeakIdentityHashMap.get(Object)@12 -> WeakIdentityHashMap.getTable()
method: expungeStaleEntries, com.oracle.svm.core.WeakIdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexFor, com.oracle.svm.core.WeakIdentityHashMap, result: WeakIdentityHashMap.get(Object)@21 -> WeakIdentityHashMap.indexFor(int, int)
method: getNorm16, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, sun.text.normalizer.Trie2_16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: eq, com.oracle.svm.core.WeakIdentityHashMap, result: WeakIdentityHashMap.get(Object)@53 -> WeakIdentityHashMap.eq(Object, Object)
method: getCC, sun.text.normalizer.NormalizerImpl, result: Norm2AllModes$Normalizer2WithImpl.getCombiningClass(int)@12 -> NormalizerImpl.getCC(int)
method: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.getCC(int)@7 -> NormalizerImpl.getCCFromNormalYesOrMaybe(int)
method: getCCFromNoNo, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap$Node, result: HashMap.newNode(int, Object, Object, HashMap$Node)@9 -> HashMap$Node.<init>(int, Object, Object, HashMap$Node)
method: committedObjectMemoryOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAppend, java.io.FileDescriptor$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: writeBytes, java.io.FileOutputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: untreeify, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAlignedChunkBytes, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: committedObjectMemoryOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnalignedHeapChunkStart, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logImageHeapPartitionBoundaries, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnalignedChunkBytes, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnalignedHeapOverhead, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: Space.getUnalignedChunkBytes()@11 -> UnalignedHeapChunk.getUnalignedHeapOverhead()
method: report, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: report, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap$KeySet, result: HashMap.keySet()@14 -> HashMap$KeySet.<init>(HashMap)
method: report, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.WeakIdentityHashMap$Entry, result: WeakIdentityHashMap.put(Object, Object)@129 -> WeakIdentityHashMap$Entry.<init>(Object, Object, ReferenceQueue, int, WeakIdentityHashMap$Entry)
method: <init>, java.lang.ref.WeakReference, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newTable, com.oracle.svm.core.WeakIdentityHashMap, result: WeakIdentityHashMap.resize(int)@23 -> WeakIdentityHashMap.newTable(int)
method: transfer, com.oracle.svm.core.WeakIdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedHashMap$Entry, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: put, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putIfAbsent, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logPartitionBoundaries, com.oracle.svm.core.genscavenge.ImageHeapWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: groupCount, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, result: ConcurrentHashMap.hashCode()@21 -> ConcurrentHashMap$Traverser.<init>(ConcurrentHashMap$Node[], int, int, int)
method: setIndex, sun.text.RuleBasedBreakIterator$SafeCharIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: current, sun.text.RuleBasedBreakIterator$SafeCharIterator, result: RuleBasedBreakIterator$SafeCharIterator.setIndex(int)@32 -> RuleBasedBreakIterator$SafeCharIterator.current()
method: advance, java.util.concurrent.ConcurrentHashMap$Traverser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expungeStaleEntry, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tabAt, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pushState, java.util.concurrent.ConcurrentHashMap$Traverser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: eraseThreadLocals, jdk.internal.misc.InnocuousThread, result: CleanerImpl.run()@55 -> InnocuousThread.eraseThreadLocals()
method: recoverState, java.util.concurrent.ConcurrentHashMap$Traverser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rotateLeft, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rotateRight, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFirstEntry, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$ValueIterator, result: TreeMap$Values.iterator()@15 -> TreeMap$ValueIterator.<init>(TreeMap, TreeMap$Entry)
method: hashCode, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$PrivateEntryIterator, result: TreeMap$ValueIterator.<init>(TreeMap, TreeMap$Entry)@8 -> TreeMap$PrivateEntryIterator.<init>(TreeMap, TreeMap$Entry)
method: prevIndex, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, java.util.Formatter$Flags, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.UnmappableCharacterException, result: CoderResult.throwException()@72 -> UnmappableCharacterException.<init>(int)
method: toUpperCase, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCase, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expungeStaleEntries, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resize, java.lang.ThreadLocal$ThreadLocalMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCase, java.lang.CharacterDataLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Double, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.text.StringCharacterIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.vm.ci.meta.PrimitiveConstant, result: JavaConstant.forDouble(double)@35 -> PrimitiveConstant.<init>(JavaKind, long)
method: checkZeroTail, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Float, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseInt, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IdentityHashMap$KeyIterator, result: IdentityHashMap$KeySet.iterator()@8 -> IdentityHashMap$KeyIterator.<init>(IdentityHashMap)
method: parse, java.util.Formatter$Flags, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IdentityHashMap$IdentityHashMapIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printDateTime, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IllegalFormatWidthException, result: Formatter$FormatSpecifier.checkText()@148 -> IllegalFormatWidthException.<init>(int)
method: unmaskNull, com.oracle.svm.core.WeakIdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forShort, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forChar, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forByte, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IllegalFormatPrecisionException, result: Formatter$FormatSpecifier.checkText()@16 -> IllegalFormatPrecisionException.<init>(int)
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TreeMap$EntryIterator, result: TreeMap$EntrySet.iterator()@15 -> TreeMap$EntryIterator.<init>(TreeMap, TreeMap$Entry)
method: valueOf, java.util.Formatter$Flags, result: Formatter$FormatSpecifier.checkText()@162 -> Formatter$Flags.valueOf()
method: <init>, java.util.HashMap$EntryIterator, result: HashMap$EntrySet.iterator()@8 -> HashMap$EntryIterator.<init>(HashMap)
method: <init>, java.util.HashMap$HashIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setTime, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getXss, com.oracle.svm.core.option.XOptions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clone, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntryIterator, result: WeakIdentityHashMap$EntryIterator.<init>(WeakIdentityHashMap, WeakIdentityHashMap$1)@2 -> WeakIdentityHashMap$EntryIterator.<init>(WeakIdentityHashMap)
method: isValid, java.util.Formatter$Conversion, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getIterator, java.util.Hashtable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isUpperCase, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: failConversion, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Hashtable$Enumerator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLowerCase, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IdentityHashMap$EntryIterator, result: IdentityHashMap$EntrySet.iterator()@8 -> IdentityHashMap$EntryIterator.<init>(IdentityHashMap)
method: isValid, java.util.Formatter$DateTime, result: Formatter$FormatSpecifier.checkDateTime()@24 -> Formatter$DateTime.isValid(char)
method: toUpperCaseWithLocale, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendJustified, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.meta.DirectSubstrateObjectConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.meta.SubstrateObjectConstant, result: DirectSubstrateObjectConstant.<init>(Object, boolean)@2 -> SubstrateObjectConstant.<init>(boolean)
method: <init>, java.util.HashMap$KeyIterator, result: HashMap$KeySet.iterator()@8 -> HashMap$KeyIterator.<init>(HashMap)
method: isInLibgraal, com.oracle.svm.core.SubstrateUtil, result: DirectSubstrateObjectConstant.<init>(Object, boolean)@28 -> SubstrateUtil.isInLibgraal()
method: <init>, java.lang.InternalError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkBadFlags, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printHashCode, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printString, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.MissingFormatWidthException, result: Formatter$FormatSpecifier.checkText()@128 -> MissingFormatWidthException.<init>(String)
method: locale, java.util.Formatter, result: Formatter$FormatSpecifier.printString(Object, Locale)@13 -> Formatter.locale()
method: out, java.util.Formatter, result: Formatter$FormatSpecifier.printString(Object, Locale)@25 -> Formatter.out()
method: <init>, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multAndCarryBy10, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: failMismatch, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forLong, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printBoolean, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forInt, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printCharacter, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IllegalFormatCodePointException, result: Formatter$FormatSpecifier.printCharacter(Object, Locale)@78 -> IllegalFormatCodePointException.<init>(int)
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forBoolean, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printFloat, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, jdk.internal.ref.PhantomCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resolve, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clear, java.lang.ref.Reference, result: PhantomCleanable.clear()@8 -> Reference.clear()
method: getUserDir, com.oracle.svm.core.jdk.UserDirAccessors, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: canonicalize, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: canonicalize0, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: doLoad, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary, result: PosixNativeLibrarySupport$PosixNativeLibrary.load()@23 -> PosixNativeLibrarySupport$PosixNativeLibrary.doLoad()
method: dlopen, com.oracle.svm.core.posix.PosixUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: close, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unregisterCleanup, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.StringCharacterIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: close0, java.io.FileDescriptor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.CharsetDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: userDir, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: UserDirAccessors.getUserDir(FileSystem)@28 -> SystemPropertiesSupport.userDir()
method: replaceWith, java.nio.charset.CharsetDecoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multDiffMe, jdk.internal.math.FDBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: current, java.text.StringCharacterIterator, result: StringCharacterIterator.first()@9 -> StringCharacterIterator.current()
method: flushLeftoverChar, sun.nio.cs.StreamEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: allocate, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clear, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flip, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encode, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.lang.Enum, result: TargetDescription.equals(Object)@71 -> Enum.equals(Object)
method: checkNumeric, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$000, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$200, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Enum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDeclaringClass, java.lang.Enum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: writeBytes, sun.nio.cs.StreamEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flush, java.nio.charset.CharsetEncoder, result: StreamEncoder.implClose()@14 -> CharsetEncoder.flush(ByteBuffer)
method: throwIllegalStateException, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flip, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: computeIfAbsent, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: arrayOffset, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IllegalFormatFlagsException, result: Formatter$FormatSpecifier.checkText()@179 -> IllegalFormatFlagsException.<init>(String)
method: encodeUTF8, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encode8859_1, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeASCII, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mismatch, java.nio.BufferMismatch, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringCoding$StringEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeUTF8_UTF16, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, java.nio.charset.CharsetEncoder, result: StreamEncoder.implClose()@121 -> CharsetEncoder.reset()
method: encode8859_1, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: limit, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: position, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.code.FrameInfoQueryResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasArray, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$600, org.graalvm.collections.EconomicMapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasArray, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: array, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkBounds, java.nio.Buffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: arrayOffset, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNotContinuation, sun.nio.cs.UTF_8$Decoder, result: UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)@217 -> UTF_8$Decoder.isNotContinuation(int)
method: <init>, java.nio.HeapCharBuffer, result: CharBuffer.allocate(int)@15 -> HeapCharBuffer.<init>(int, int)
method: vectorizedMismatch, jdk.internal.util.ArraysSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clear, java.nio.Buffer, result: CharBuffer.clear()@1 -> Buffer.clear()
method: isMalformed3, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: onMalformedInput, java.nio.charset.CharsetEncoder, result: StringCoding.encode(Charset, byte, byte[])@120 -> CharsetEncoder.onMalformedInput(CodingErrorAction)
method: isMalformed4, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: onUnmappableCharacter, java.nio.charset.CharsetEncoder, result: StringCoding.encode(Charset, byte, byte[])@126 -> CharsetEncoder.onUnmappableCharacter(CodingErrorAction)
method: flip, java.nio.Buffer, result: CharBuffer.flip()@1 -> Buffer.flip()
method: getClassLoader0, java.lang.Class, result: StringCoding.encode(Charset, byte, byte[])@198 -> Class.getClassLoader0()
method: xflow, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malformedForLength, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malformed, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMalformed3_2, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMalformed4_2, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMalformed4_3, sun.nio.cs.UTF_8$Decoder, result: UTF_8$Decoder.decodeArrayLoop(ByteBuffer, CharBuffer)@522 -> UTF_8$Decoder.isMalformed4_3(int)
method: spread, java.util.concurrent.ConcurrentHashMap, result: ConcurrentHashMap.computeIfAbsent(Object, Function)@20 -> ConcurrentHashMap.spread(int)
method: put, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$ReservationNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: casTabAt, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$Node, result: ConcurrentHashMap.computeIfAbsent(Object, Function)@134 -> ConcurrentHashMap$Node.<init>(int, Object, Object)
method: setTabAt, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: helpTransfer, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equalsArrayList, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findTreeNode, java.util.concurrent.ConcurrentHashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: throwUnmappable, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: xflow, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malformedForLength, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: malformed, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initTable, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: treeifyBin, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addCount, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resizeStamp, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: transfer, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updatePositions, sun.nio.cs.UTF_8, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printInteger, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.FormatFlagsConversionMismatchException, result: Formatter$FormatSpecifier.failMismatch(Formatter$Flags, char)@11 -> FormatFlagsConversionMismatchException.<init>(String, char)
method: print, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.printInteger(Object, Locale)@30 -> Formatter$FormatSpecifier.print(byte, Locale)
method: malformedN, sun.nio.cs.UTF_8$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.printInteger(Object, Locale)@52 -> Formatter$FormatSpecifier.print(short, Locale)
method: print, java.util.Formatter$FormatSpecifier, result: Formatter$FormatSpecifier.printInteger(Object, Locale)@74 -> Formatter$FormatSpecifier.print(int, Locale)
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: comparableClassFor, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareComparables, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implEncodeISOArray, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tieBreakOrder, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, result: ConcurrentHashMap.treeifyBin(ConcurrentHashMap$Node[], int)@91 -> ConcurrentHashMap$TreeNode.<init>(int, Object, Object, ConcurrentHashMap$Node, ConcurrentHashMap$TreeNode)
method: equals, jdk.vm.ci.code.Architecture, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, result: ConcurrentHashMap$TreeBin.putTreeVal(int, Object, Object)@307 -> ConcurrentHashMap$TreeBin.lockRoot()
method: balanceInsertion, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, result: ConcurrentHashMap$TreeBin.putTreeVal(int, Object, Object)@333 -> ConcurrentHashMap$TreeBin.unlockRoot()
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: requireNonNullElse, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCase, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tryPresize, java.util.concurrent.ConcurrentHashMap, result: ConcurrentHashMap.treeifyBin(ConcurrentHashMap$Node[], int)@19 -> ConcurrentHashMap.tryPresize(int)
method: forCharSequence, java.lang.NumberFormatException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.io.UnixFileSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sumCount, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProbe, java.util.concurrent.ThreadLocalRandom, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: containsMapping, java.util.IdentityHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$EntrySetView, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$CollectionView, result: ConcurrentHashMap$EntrySetView.<init>(ConcurrentHashMap)@2 -> ConcurrentHashMap$CollectionView.<init>(ConcurrentHashMap)
method: isUpperCase, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Properties$EntrySet, result: Properties.entrySet()@11 -> Properties$EntrySet.<init>(Set)
method: <init>, java.util.IllegalFormatConversionException, result: Formatter$FormatSpecifier.failConversion(char, Object)@9 -> IllegalFormatConversionException.<init>(char, Class)
method: equals, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCase, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCase, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCaseEx, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fullAddCount, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCaseEx, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contains, java.util.HashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: leadingSign, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: adjustWidth, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: localizedMagnitude, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCaseEx, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getKey, java.util.HashMap$Node, result: LinkedHashMap$LinkedKeyIterator.next()@4 -> HashMap$Node.getKey()
method: getValue, java.util.TreeMap$Entry, result: TreeMap$EntrySet.contains(Object)@43 -> TreeMap$Entry.getValue()
method: trailingSign, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toOctalString, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: trailingZeros, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCaseEx, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCaseCharArray, java.lang.ConditionalSpecialCasing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpperCaseCharArray, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$ForwardingNode, result: ConcurrentHashMap.transfer(ConcurrentHashMap$Node[], ConcurrentHashMap$Node[])@79 -> ConcurrentHashMap$ForwardingNode.<init>(ConcurrentHashMap$Node[])
method: <init>, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shiftLeft, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shiftLeft, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shiftRightImpl, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$Node, result: ConcurrentHashMap$TreeNode.<init>(int, Object, Object, ConcurrentHashMap$Node, ConcurrentHashMap$TreeNode)@6 -> ConcurrentHashMap$Node.<init>(int, Object, Object, ConcurrentHashMap$Node)
method: <init>, java.util.ArrayDeque$DeqIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: untreeify, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valEquals, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.util.HashMap$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mismatch, java.nio.BufferMismatch, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZero, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNumberInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getResourceBundleBased, sun.util.locale.provider.LocaleProviderAdapter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subSequence, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: localInit, java.util.concurrent.ThreadLocalRandom, result: ConcurrentHashMap.fullAddCount(long, boolean)@9 -> ThreadLocalRandom.localInit()
method: <init>, java.util.concurrent.ConcurrentHashMap$CounterCell, result: ConcurrentHashMap.fullAddCount(long, boolean)@69 -> ConcurrentHashMap$CounterCell.<init>(long)
method: advanceProbe, java.util.concurrent.ThreadLocalRandom, result: ConcurrentHashMap.fullAddCount(long, boolean)@321 -> ThreadLocalRandom.advanceProbe(int)
method: <init>, java.util.Formatter$Flags, result: Formatter$Flags.parse(String, int, int)@5 -> Formatter$Flags.<init>(int)
method: parse, java.util.Formatter$Flags, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.DuplicateFormatFlagsException, result: Formatter$Flags.parse(String, int, int)@51 -> DuplicateFormatFlagsException.<init>(String)
method: <init>, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nonNullAppendable, java.util.Formatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addAndGet, java.util.concurrent.atomic.AtomicInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mix64, java.util.concurrent.ThreadLocalRandom, result: ThreadLocalRandom.localInit()@28 -> ThreadLocalRandom.mix64(long)
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.UnknownFormatFlagsException, result: Formatter$Flags.parse(char)@172 -> UnknownFormatFlagsException.<init>(String)
method: isInfinite, java.lang.Double, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tableSizeFor, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAdapterPreference, sun.util.locale.provider.LocaleProviderAdapter, result: LocaleProviderAdapter.getResourceBundleBased()@0 -> LocaleProviderAdapter.getAdapterPreference()
method: <init>, java.text.NumberFormat, result: DecimalFormat.<init>(String, DecimalFormatSymbols)@1 -> NumberFormat.<init>()
method: <init>, java.text.DigitList, result: DecimalFormat.<init>(String, DecimalFormatSymbols)@9 -> DigitList.<init>()
method: getMaximumIntegerDigits, java.text.NumberFormat, result: DecimalFormat.<init>(String, DecimalFormatSymbols)@71 -> NumberFormat.getMaximumIntegerDigits()
method: getMinimumIntegerDigits, java.text.NumberFormat, result: DecimalFormat.<init>(String, DecimalFormatSymbols)@79 -> NumberFormat.getMinimumIntegerDigits()
method: getMaximumFractionDigits, java.text.NumberFormat, result: DecimalFormat.<init>(String, DecimalFormatSymbols)@87 -> NumberFormat.getMaximumFractionDigits()
method: getMinimumFractionDigits, java.text.NumberFormat, result: DecimalFormat.<init>(String, DecimalFormatSymbols)@95 -> NumberFormat.getMinimumFractionDigits()
method: defaultTimeZone, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scale, java.math.BigDecimal, result: Formatter$FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Formatter$Flags, char, int, boolean)@108 -> BigDecimal.scale()
method: <init>, java.math.MathContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unscaledValue, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createCalendar, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Formatter$FormatSpecifier$BigDecimalLayout, result: Formatter$FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Formatter$Flags, char, int, boolean)@114 -> Formatter$FormatSpecifier$BigDecimalLayout.<init>(Formatter$FormatSpecifier, BigInteger, int, Formatter$BigDecimalLayoutForm)
method: mantissa, java.util.Formatter$FormatSpecifier$BigDecimalLayout, result: Formatter$FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Formatter$Flags, char, int, boolean)@121 -> Formatter$FormatSpecifier$BigDecimalLayout.mantissa()
method: hasDot, java.util.Formatter$FormatSpecifier$BigDecimalLayout, result: Formatter$FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Formatter$Flags, char, int, boolean)@134 -> Formatter$FormatSpecifier$BigDecimalLayout.hasDot()
method: exponent, java.util.Formatter$FormatSpecifier$BigDecimalLayout, result: Formatter$FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Formatter$Flags, char, int, boolean)@174 -> Formatter$FormatSpecifier$BigDecimalLayout.exponent()
method: applyPattern, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charAt, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, result: Formatter$FormatSpecifier.print(StringBuilder, BigDecimal, Locale, Formatter$Flags, char, int, boolean)@452 -> Formatter$FormatSpecifier$BigDecimalLayout.scale()
method: valueOf, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addZeros, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkOffset, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: localizedMagnitudeExp, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: iterator, java.util.Collections$UnmodifiableCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Collections$UnmodifiableCollection$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.MathContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hexDouble, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compactValFor, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bigDigitLength, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkScaleNonZero, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRoundByTenPow, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: longDigitLength, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRound, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inflated, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: layout, java.util.Formatter$FormatSpecifier$BigDecimalLayout, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: StringBuilder.append(char[])@2 -> AbstractStringBuilder.append(char[])
method: abs, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charAt, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: print, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefault, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnicodeLocaleType, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: convertLDMLShortID, sun.util.locale.provider.TimeZoneNameUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: map, java.util.Optional, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: orElse, java.util.Optional, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: localizedMagnitude, java.util.Formatter$FormatSpecifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: zeroValueOf, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigDecimal, result: BigDecimal.valueOf(long, int)@42 -> BigDecimal.<init>(BigInteger, long, int, int)
method: <init>, java.util.GregorianCalendar, result: Calendar.createCalendar(TimeZone, Locale)@6 -> GregorianCalendar.<init>(TimeZone, Locale)
method: getTimeZone, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefaultRef, java.util.TimeZone, result: TimeZone.getDefault()@0 -> TimeZone.getDefaultRef()
method: <init>, java.util.Calendar, result: GregorianCalendar.<init>(TimeZone, Locale)@3 -> Calendar.<init>(TimeZone, Locale)
method: clone, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isUnicodeExtensionKey, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasExtensions, java.util.Locale, result: Locale.getUnicodeLocaleType(String)@35 -> Locale.hasExtensions()
method: getTimeInMillis, java.util.Calendar, result: Date.normalize(BaseCalendar$Date)@122 -> Calendar.getTimeInMillis()
method: canonicalTZID, sun.util.locale.provider.TimeZoneNameUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isPresent, java.util.Optional, result: Optional.map(Function)@6 -> Optional.isPresent()
method: empty, java.util.Optional, result: Optional.ofNullable(Object)@4 -> Optional.empty()
method: ofNullable, java.util.Optional, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newCalendarDate, sun.util.calendar.Gregorian, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setDefaultZone, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlphaNumericString, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setWeekCountData, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.Gregorian$Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: privilegedGetProperties, sun.security.action.GetPropertyAction, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: retrieveFirstDayOfWeek, sun.util.locale.provider.CalendarDataUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isFinite, java.lang.Double, result: Formatter$FormatSpecifier.hexDouble(double, int)@1 -> Double.isFinite(double)
method: getExponent, java.lang.Math, result: Formatter$FormatSpecifier.hexDouble(double, int)@58 -> Math.getExponent(double)
method: getProperties, java.lang.System, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scalb, java.lang.Math, result: Formatter$FormatSpecifier.hexDouble(double, int)@86 -> Math.scalb(double, int)
method: retrieveMinimalDaysInFirstWeek, sun.util.locale.provider.CalendarDataUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlphaNumeric, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: javaHome, jdk.internal.util.StaticProperty, result: TimeZone.setDefaultZone()@22 -> StaticProperty.javaHome()
method: toHexString, java.lang.Double, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseInt, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlpha, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNumeric, sun.util.locale.LocaleUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSystemTimeZoneID, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTimeZone, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTimeZone, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseCustomTimeZone, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSystemGMTOffsetID, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZoneInfo, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProperties, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: System.getProperties()@8 -> SystemPropertiesSupport.getProperties()
method: ensureFullyInitialized, com.oracle.svm.core.jdk.SystemPropertiesSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendChars, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: powerOfTwoD, java.lang.Math, result: Math.scalb(double, int)@83 -> Math.powerOfTwoD(int)
method: putCharsSB, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copySign, java.lang.Math, result: Double.toHexString(double)@24 -> Math.copySign(double, double)
method: toCharArray, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBuffer, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replaceFirst, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: applyPrecision, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parseInt, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fillDecimal, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fillScientific, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fillCompatible, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCustomTimeZone, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.ZoneInfo, result: ZoneInfoFile.getZoneInfo(String, long[], int[], long[], int[], ZoneInfoFile$ZoneOffsetTransitionRule[])@1752 -> ZoneInfo.<init>(String, int, int, int, long[], int[], int[], boolean)
method: getZoneInfo0, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.time.temporal.TemporalAccessor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOfLatin1, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: binarySearch, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.ByteArrayInputStream, result: ZoneInfoFile.getZoneInfo0(String)@81 -> ByteArrayInputStream.<init>(byte[])
method: <init>, java.io.DataInputStream, result: ZoneInfoFile.getZoneInfo0(String)@84 -> DataInputStream.<init>(InputStream)
method: getZoneInfo, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compile, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replaceFirst, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toCustomID, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: zone, java.time.temporal.TemporalQueries, result: Formatter$FormatSpecifier.print(StringBuilder, TemporalAccessor, char, Locale)@836 -> TemporalQueries.zone()
method: <init>, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: find, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: query, java.time.temporal.TemporalAccessor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendReplacement, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendTail, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: binarySearch0, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: error, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.FilterInputStream, result: DataInputStream.<init>(InputStream)@2 -> FilterInputStream.<init>(InputStream)
method: <init>, java.util.regex.Pattern$Start, result: Pattern.<init>(String, int)@130 -> Pattern$Start.<init>(Pattern$Node)
method: readEpochSec, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: has, java.util.regex.Pattern, result: Pattern.compile()@4 -> Pattern.has(int)
method: readOffset, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getZoneInfo, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSupplementary, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: RemoveQEQuoting, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newSlice, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expr, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: peek, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: optimize, java.util.regex.Pattern$BnM, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$StartS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: from, java.time.Instant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTimeZone, java.util.TimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putVal, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDaylightSavings, java.time.zone.ZoneRules, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.PatternSyntaxException, result: Pattern.error(String)@15 -> PatternSyntaxException.<init>(String, String, int)
method: <init>, java.util.regex.Pattern$Node, result: Pattern$Start.<init>(Pattern$Node)@1 -> Pattern$Node.<init>()
method: <init>, java.util.regex.Pattern$TreeInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalizeSlice, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalizeClazz, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, java.util.regex.Pattern$TreeInfo, result: Pattern$Curly.study(Pattern$TreeInfo)@23 -> Pattern$TreeInfo.reset()
method: isAscii, java.util.regex.ASCII, result: Pattern.RemoveQEQuoting()@112 -> ASCII.isAscii(int)
method: isAlpha, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDigit, java.util.regex.ASCII, result: Pattern.RemoveQEQuoting()@140 -> ASCII.isDigit(int)
method: getYear, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getStandardOffset, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addTrans, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyOf, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexOf, sun.util.calendar.ZoneInfoFile, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$SliceUS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$SliceU, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLower, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$SliceIS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$SliceI, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$SliceS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Slice, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sequence, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BranchConn, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.regex.Pattern$Branch, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Branch, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: next, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: peekPastWhitespace, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BnMS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BnM, result: Pattern$BnM.optimize(Pattern$Node)@175 -> Pattern$BnM.<init>(int[], int[], int[], Pattern$Node)
method: ofTotalSeconds, java.time.ZoneOffset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ofEpochSecond, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTotalSeconds, java.time.ZoneOffset, result: ZoneInfoFile.getZoneInfo(String, long[], int[], long[], int[], ZoneInfoFile$ZoneOffsetTransitionRule[])@1304 -> ZoneOffset.getTotalSeconds()
method: plusSeconds, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSpace, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMonthValue, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfMonth, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: peekPastLine, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLocalTime, java.time.LocalDateTime, result: ZoneInfoFile.getZoneInfo(String, long[], int[], long[], int[], ZoneInfoFile$ZoneOffsetTransitionRule[])@1460 -> LocalDateTime.toLocalTime()
method: toSecondOfDay, java.time.LocalTime, result: ZoneInfoFile.getZoneInfo(String, long[], int[], long[], int[], ZoneInfoFile$ZoneOffsetTransitionRule[])@1463 -> LocalTime.toSecondOfDay()
method: isType, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.ZoneInfoFile$Checksum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLineSeparator, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: update, sun.util.calendar.ZoneInfoFile$Checksum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: update, sun.util.calendar.ZoneInfoFile$Checksum, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getValue, java.util.zip.CRC32, result: ZoneInfoFile.getZoneInfo(String, long[], int[], long[], int[], ZoneInfoFile$ZoneOffsetTransitionRule[])@1727 -> CRC32.getValue()
method: isBoundary, java.util.regex.Grapheme, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getType, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: atom, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ALL, java.util.regex.Pattern, result: Pattern.sequence(Pattern$Node)@478 -> Pattern.ALL()
method: <init>, java.util.regex.Pattern$CharProperty, result: Pattern.sequence(Pattern$Node)@481 -> Pattern$CharProperty.<init>(Pattern$CharPredicate)
method: UNIXDOT, java.util.regex.Pattern, result: Pattern.sequence(Pattern$Node)@501 -> Pattern.UNIXDOT()
method: DOT, java.util.regex.Pattern, result: Pattern.sequence(Pattern$Node)@516 -> Pattern.DOT()
method: <init>, java.util.regex.Pattern$UnixDollar, result: Pattern.sequence(Pattern$Node)@434 -> Pattern$UnixDollar.<init>(boolean)
method: <init>, java.util.regex.Pattern$Dollar, result: Pattern.sequence(Pattern$Node)@452 -> Pattern$Dollar.<init>(boolean)
method: <init>, java.util.regex.Pattern$UnixCaret, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Caret, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Begin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextEscaped, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unread, java.util.regex.Pattern, result: Pattern.sequence(Pattern$Node)@341 -> Pattern.unread()
method: family, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$NFCCharProperty, result: Pattern.sequence(Pattern$Node)@315 -> Pattern$NFCCharProperty.<init>(Pattern$CharPredicate)
method: newCharProperty, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clazz, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorDiv, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: closure, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: group0, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, java.text.Normalizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedHashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.HashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: produceEquivalentAlternation, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forEach, java.lang.Iterable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: delete, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: escape, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$SliceNode, result: Pattern$Slice.<init>(int[])@2 -> Pattern$SliceNode.<init>(int[])
method: isUpper, java.util.regex.ASCII, result: ASCII.toLower(int)@1 -> ASCII.isUpper(int)
method: single, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.ZoneOffset, result: ZoneOffset.ofTotalSeconds(int)@57 -> ZoneOffset.<init>(int)
method: getId, java.time.ZoneOffset, result: ZoneOffset.ofTotalSeconds(int)@89 -> ZoneOffset.getId()
method: <init>, java.time.DateTimeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkValidValue, java.time.temporal.ChronoField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorMod, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ofEpochDay, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ofNanoOfDay, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.LocalDateTime, result: LocalDateTime.ofEpochSecond(long, int, ZoneOffset)@73 -> LocalDateTime.<init>(LocalDate, LocalTime)
method: plusWithOverflow, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.text.normalizer.NormalizerBase, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMonthValue, java.time.LocalDate, result: LocalDateTime.getMonthValue()@4 -> LocalDate.getMonthValue()
method: toMode, sun.text.normalizer.NormalizerBase, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfMonth, java.time.LocalDate, result: LocalDateTime.getDayOfMonth()@4 -> LocalDate.getDayOfMonth()
method: getType, java.util.regex.Grapheme, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.text.normalizer.NormalizerBase, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.String, result: Pattern.family(boolean, boolean)@54 -> String.<init>(int[], int, int)
method: read, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mark, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.text.normalizer.Normalizer2, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.CRC32, result: ZoneInfoFile$Checksum.<init>()@1 -> CRC32.<init>()
method: <init>, java.util.HashSet, result: LinkedHashSet.<init>()@6 -> HashSet.<init>(int, float, boolean)
method: countChars, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: producePermutations, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.TimeZone, result: ZoneInfo.<init>(String, int, int, int, long[], int[], int[], boolean)@1 -> TimeZone.<init>()
method: composeOneStep, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: delete, java.lang.AbstractStringBuilder, result: StringBuilder.delete(int, int)@3 -> AbstractStringBuilder.delete(int, int)
method: forProperty, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forUnicodeBlock, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExcludedSpacingMark, java.util.regex.Grapheme, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.ZoneId, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: buildId, java.time.ZoneOffset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointAt, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.temporal.ChronoField, result: ChronoField.checkValidValue(long)@1 -> ChronoField.range()
method: checkValidValue, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getClass, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendCodePoint, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorDiv, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: countCodePoints, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkValidIntValue, java.time.temporal.ChronoField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.LocalDate, result: LocalDate.ofEpochDay(long)@232 -> LocalDate.<init>(int, int, int)
method: create, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: abs, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkValidIntValue, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.LocalTime, result: LocalTime.create(int, int, int, int)@22 -> LocalTime.<init>(int, int, int, int)
method: appendCodePoint, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getProviderInstance, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forUnicodeScript, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ofEpochSecond, java.time.Instant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.DateTimeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOffset, java.time.zone.ZoneRules, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.time.ZoneOffset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addExact, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorMod, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, java.time.Instant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.Instant, result: Instant.create(long, int)@45 -> Instant.<init>(long, int)
method: forUnicodeProperty, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forPOSIXName, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: negate, java.util.regex.Pattern$CharPredicate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BmpCharProperty, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BitClass, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: union, java.util.regex.Pattern$CharPredicate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: skip, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Curly, result: Pattern.closure(Pattern$Node)@296 -> Pattern$Curly.<init>(Pattern$Node, int, int, Pattern$Qtype)
method: curly, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Ques, result: Pattern.group0()@222 -> Pattern$Ques.<init>(Pattern$Node, Pattern$Qtype)
method: addFlag, java.util.regex.Pattern, result: Pattern.group0()@587 -> Pattern.addFlag()
method: createGroup, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: groupname, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: namedGroups, java.util.regex.Pattern, result: Pattern.group0()@260 -> Pattern.namedGroups()
method: findSupplementary, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BehindS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Behind, result: Pattern.group0()@476 -> Pattern$Behind.<init>(Pattern$Node, int, int)
method: <init>, java.util.regex.Pattern$NotBehindS, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$NotBehind, result: Pattern.group0()@526 -> Pattern$NotBehind.<init>(Pattern$Node, int, int)
method: <init>, java.util.regex.Pattern$Pos, result: Pattern.group0()@171 -> Pattern$Pos.<init>(Pattern$Node)
method: <init>, java.util.regex.Pattern$Neg, result: Pattern.group0()@185 -> Pattern$Neg.<init>(Pattern$Node)
method: accept, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$GroupCurly, result: Pattern.group0()@946 -> Pattern$GroupCurly.<init>(Pattern$Node, int, int, Pattern$Qtype, int, int, boolean)
method: <init>, java.util.regex.Pattern$Loop, result: Pattern.group0()@986 -> Pattern$Loop.<init>(int, int)
method: <init>, java.util.regex.Pattern$LazyLoop, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Prolog, result: Pattern.group0()@1038 -> Pattern$Prolog.<init>(Pattern$Loop)
method: subFlag, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parsePastWhitespace, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$GroupHead, result: Pattern.createGroup(boolean)@35 -> Pattern$GroupHead.<init>(int)
method: <init>, java.util.regex.Pattern$GroupTail, result: Pattern.createGroup(boolean)@47 -> Pattern$GroupTail.<init>(int, int)
method: isAlnum, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BitClass, result: Pattern$BitClass.<init>()@6 -> Pattern$BitClass.<init>(boolean[])
method: tableSizeFor, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parsePastLine, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subList, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subListRangeCheck, java.util.AbstractList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendTo, jdk.internal.math.FloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ArrayList$SubList, result: ArrayList.subList(int, int)@16 -> ArrayList$SubList.<init>(ArrayList, int, int)
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: StringBuilder.append(char[], int, int)@4 -> AbstractStringBuilder.append(char[], int, int)
method: append, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$BmpCharPropertyGreedy, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$CharPropertyGreedy, result: Pattern.curly(Pattern$Node, int)@95 -> Pattern$CharPropertyGreedy.<init>(Pattern$CharProperty, int)
method: bitsOrSingle, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: CIRangeU, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: CIRange, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: Range, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$End, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: x, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: WORD, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ASCII_WORD, java.util.regex.CharPredicates, result: Pattern.escape(boolean, boolean, boolean)@1257 -> CharPredicates.ASCII_WORD()
method: toBytes, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: VertWS, java.util.regex.Pattern, result: Pattern.escape(boolean, boolean, boolean)@1212 -> Pattern.VertWS()
method: u, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toBytes, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: WHITE_SPACE, java.util.regex.CharPredicates, result: Pattern.escape(boolean, boolean, boolean)@1162 -> CharPredicates.WHITE_SPACE()
method: ASCII_SPACE, java.util.regex.CharPredicates, result: Pattern.escape(boolean, boolean, boolean)@1168 -> CharPredicates.ASCII_SPACE()
method: <init>, java.util.regex.Pattern$CIBackRef, result: Pattern.escape(boolean, boolean, boolean)@1096 -> Pattern$CIBackRef.<init>(int, boolean)
method: <init>, java.util.regex.Pattern$BackRef, result: Pattern.escape(boolean, boolean, boolean)@1127 -> Pattern$BackRef.<init>(int)
method: HorizWS, java.util.regex.Pattern, result: Pattern.escape(boolean, boolean, boolean)@947 -> Pattern.HorizWS()
method: DIGIT, java.util.regex.CharPredicates, result: Pattern.escape(boolean, boolean, boolean)@903 -> CharPredicates.DIGIT()
method: ASCII_DIGIT, java.util.regex.CharPredicates, result: Pattern.escape(boolean, boolean, boolean)@909 -> CharPredicates.ASCII_DIGIT()
method: c, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$GraphemeBound, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$Bound, result: Pattern.escape(boolean, boolean, boolean)@875 -> Pattern$Bound.<init>(int, boolean)
method: <init>, java.util.regex.Pattern$XGrapheme, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$LineEnding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: N, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.regex.Pattern$LastMatch, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ref, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: o, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.util.regex.Pattern$BitClass, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ctype, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: category, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forName, java.lang.Character$UnicodeBlock, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forName, java.lang.Character$UnicodeScript, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnicodePredicate, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPosixPredicate, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.lang.Character$UnicodeScript, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toUpper, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: SingleU, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: SingleI, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: SingleS, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: Single, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isHexDigit, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toDigit, java.util.regex.ASCII, result: Pattern.x()@25 -> ASCII.toDigit(int)
method: ALPHABETIC, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@352 -> CharPredicates.ALPHABETIC()
method: isLower, java.util.regex.ASCII, result: ASCII.toUpper(int)@1 -> ASCII.isLower(int)
method: JOIN_CONTROL, java.util.regex.CharPredicates, result: CharPredicates.WORD()@8 -> CharPredicates.JOIN_CONTROL()
method: union, java.util.regex.Pattern$CharPredicate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: uxxxx, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cursor, java.util.regex.Pattern, result: Pattern.u()@14 -> Pattern.cursor()
method: setcursor, java.util.regex.Pattern, result: Pattern.u()@59 -> Pattern.setcursor(int)
method: PRINT, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: GRAPH, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@392 -> CharPredicates.GRAPH()
method: BLANK, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@388 -> CharPredicates.BLANK()
method: CONTROL, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@380 -> CharPredicates.CONTROL()
method: ALNUM, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: HEX_DIGIT, java.util.regex.CharPredicates, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: PUNCTUATION, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@368 -> CharPredicates.PUNCTUATION()
method: UPPERCASE, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@360 -> CharPredicates.UPPERCASE()
method: LOWERCASE, java.util.regex.CharPredicates, result: CharPredicates.getPosixPredicate(String)@356 -> CharPredicates.LOWERCASE()
method: NONCHARACTER_CODE_POINT, java.util.regex.CharPredicates, result: CharPredicates.getUnicodePredicate(String)@576 -> CharPredicates.NONCHARACTER_CODE_POINT()
method: TITLECASE, java.util.regex.CharPredicates, result: CharPredicates.getUnicodePredicate(String)@548 -> CharPredicates.TITLECASE()
method: LETTER, java.util.regex.CharPredicates, result: CharPredicates.getUnicodePredicate(String)@536 -> CharPredicates.LETTER()
method: IDEOGRAPHIC, java.util.regex.CharPredicates, result: CharPredicates.getUnicodePredicate(String)@528 -> CharPredicates.IDEOGRAPHIC()
method: ASSIGNED, java.util.regex.CharPredicates, result: CharPredicates.getUnicodePredicate(String)@516 -> CharPredicates.ASSIGNED()
method: codePointOf, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getName, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.lang.Character$UnicodeBlock, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.Character$Subset, result: Character.getName(int)@71 -> Character$Subset.toString()
method: <init>, java.lang.CharacterName$1, result: CharacterName.<init>()@17 -> CharacterName$1.<init>(CharacterName)
method: doPrivileged, java.security.AccessController, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.InflaterInputStream, result: CharacterName.<init>()@26 -> InflaterInputStream.<init>(InputStream)
method: readInt, java.io.DataInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fill, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readFully, java.io.DataInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashN, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addCp, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: close, java.io.FilterInputStream, result: CharacterName.<init>()@391 -> FilterInputStream.close()
method: enqueue, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: VMOperationControl$WorkQueues.executeAllQueuedVMOperations()@1 -> VMOperationControl$WorkQueues.assertIsLocked()
method: drain, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: drain, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSafepointReason, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addFirst, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dec, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: grow, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: newCapacity, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reallyPoll, java.lang.ref.ReferenceQueue, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addFinalRefCount, jdk.internal.misc.VM, result: ReferenceQueue.reallyPoll()@58 -> VM.addFinalRefCount(int)
method: wait, java.lang.Object, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsigned, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wait, com.oracle.svm.core.monitor.MonitorSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureOpen, sun.nio.cs.StreamEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsigned, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: elementAt, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$100, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inc, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: execute, com.oracle.svm.core.thread.VMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$200, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isBuiltinLibrary, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, result: JNILibraryInitializer.isBuiltinLibrary(String)@4 -> PlatformNativeLibrarySupport.isBuiltinLibrary(String)
method: getOnLoadName, com.oracle.svm.jni.JNILibraryInitializer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findBuiltinSymbol, com.oracle.svm.core.posix.PosixNativeLibrarySupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOnLoadSymbolAddress, com.oracle.svm.jni.JNILibraryInitializer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCGlobalDataInfo, com.oracle.svm.core.c.CGlobalDataNonConstantRegistry, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: callOnLoadFunction, com.oracle.svm.jni.JNILibraryInitializer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: invoke, com.oracle.svm.jni.JNIOnLoadFunctionPointer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isOpen, sun.nio.cs.StreamEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkSupportedJNIVersion, com.oracle.svm.jni.JNILibraryInitializer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dlsym, com.oracle.svm.core.posix.PosixUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNext, com.oracle.svm.core.thread.JavaVMOperation, result: JavaVMOperation$ThunkOperation.getNext()@1 -> JavaVMOperation.getNext()
method: hasWork, com.oracle.svm.core.thread.JavaVMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObjectBytes, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAlignedObjectBytes, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lock, com.oracle.svm.core.posix.pthread.PthreadVMMutex, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUnalignedObjectBytes, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.provider.LocaleResources, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ref.ReferenceQueue, result: LocaleResources.<init>(ResourceBundleBasedAdapter, Locale)@20 -> ReferenceQueue.<init>()
method: isMyself, com.oracle.svm.core.thread.Safepoint$Master, result: Safepoint$Master.waitForSafepoints(String)@60 -> Safepoint$Master.isMyself(IsolateThread)
method: compareAndSetNativeToSafepoint, com.oracle.svm.core.thread.VMThreads$StatusSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: roundedDivide, com.oracle.svm.core.util.TimeUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: incInstalled, com.oracle.svm.core.thread.Safepoint$Statistics, result: Safepoint$Master.waitForSafepoints(String)@172 -> Safepoint$Statistics.incInstalled()
method: requestSafepoint, com.oracle.svm.core.thread.Safepoint$Master, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: restoreSafepointRequestedValue, com.oracle.svm.core.thread.Safepoint$Master, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: incRequested, com.oracle.svm.core.thread.Safepoint$Statistics, result: Safepoint$Master.requestSafepoint(IsolateThread)@58 -> Safepoint$Statistics.incRequested()
method: incReleased, com.oracle.svm.core.thread.Safepoint$Statistics, result: Safepoint$Master.releaseSafepoints(String)@85 -> Safepoint$Statistics.incReleased()
method: doNotLoopTooLong, com.oracle.svm.core.thread.Safepoint$Master, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$000, com.oracle.svm.core.thread.Safepoint, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maybeFatallyTooLong, com.oracle.svm.core.thread.Safepoint$Master, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: markAsFinished, com.oracle.svm.core.thread.VMOperationControl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: access$100, com.oracle.svm.core.thread.Safepoint, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSafepointPromptnessFailureNanos, com.oracle.svm.core.thread.Safepoint, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSafepointPromptnessWarningNanos, com.oracle.svm.core.thread.Safepoint, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: collectOperation, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: startCollectionOrExit, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resetTimers, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: incrementCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, result: GCImpl.collectOperation(GCCause, UnsignedWord)@113 -> GCImpl.incrementCollectionEpoch()
method: disableThreadLocalAllocation, com.oracle.svm.core.genscavenge.ThreadLocalAllocation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: printGCBefore, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scrubLists, com.oracle.svm.core.genscavenge.GCImpl, result: GCImpl.collectOperation(GCCause, UnsignedWord)@128 -> GCImpl.scrubLists()
method: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: collectImpl, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, result: CollectionPolicy.getAccounting()@6 -> GCImpl.getAccounting()
method: printGCAfter, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: finishCollection, com.oracle.svm.core.genscavenge.GCImpl, result: GCImpl.collectOperation(GCCause, UnsignedWord)@171 -> GCImpl.finishCollection()
method: exitIf, com.oracle.svm.core.genscavenge.GCImpl$CollectionInProgressError, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: guaranteeInProgress, com.oracle.svm.core.thread.VMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTimeSinceFirstAllocation, com.oracle.svm.core.genscavenge.GCImpl$Timer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: roundNanosToMillis, com.oracle.svm.core.util.TimeUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: report, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: precondition, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, result: GCImpl.printGCAfter(String)@349 -> GCImpl.getPolicy()
method: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: GCImpl.collectImpl(String)@136 -> ReferenceObjectProcessing.setSoftReferencesAreWeak(boolean)
method: postcondition, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: tzCanonicalIDs, sun.util.cldr.CLDRBaseLocaleDataMetaInfo, result: CLDRLocaleProviderAdapter.canonicalTZID(String)@3 -> CLDRBaseLocaleDataMetaInfo.tzCanonicalIDs()
method: rational, com.oracle.svm.core.log.RealLog, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logGCTimers, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: logGCLoad, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: beforeGarbageCollection, com.oracle.svm.core.os.CommittedMemoryProvider, result: GCImpl.doCollectImpl(CollectionPolicy)@3 -> CommittedMemoryProvider.beforeGarbageCollection()
method: scavenge, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: afterGarbageCollection, com.oracle.svm.core.os.CommittedMemoryProvider, result: GCImpl.doCollectImpl(CollectionPolicy)@95 -> CommittedMemoryProvider.afterGarbageCollection(boolean)
method: getChunkUsedBytesAfterCollection, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: afterCollection, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: GCImpl.doCollectImpl(CollectionPolicy)@135 -> ReferenceObjectProcessing.afterCollection(UnsignedWord, UnsignedWord)
method: verbosePostCondition, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addToReferencePendingList, com.oracle.svm.core.genscavenge.HeapImpl, result: GCImpl.scavenge(boolean)@130 -> HeapImpl.addToReferencePendingList(Reference)
method: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals, result: ReferenceObjectProcessing.afterCollection(UnsignedWord, UnsignedWord)@56 -> ReferenceInternals.updateSoftReferenceClock()
method: getSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals, result: ReferenceObjectProcessing.afterCollection(UnsignedWord, UnsignedWord)@67 -> ReferenceInternals.getSoftReferenceClock()
method: divideNanosToMillis, com.oracle.svm.core.util.TimeUtils, result: ReferenceInternals.updateSoftReferenceClock()@3 -> TimeUtils.divideNanosToMillis(long)
method: emptyFromSpaceIntoToSpace, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.util.Optional, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor, result: GCImpl.cheneyScanFromRoots()@69 -> GreyToBlackObjectVisitor.reset()
method: <init>, java.util.Optional, result: Optional.of(Object)@5 -> Optional.<init>(Object)
method: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: ReferenceObjectProcessing.processRememberedReferences()@2 -> ReferenceObjectProcessing.popRememberedRef()
method: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, result: HeapImpl.addToReferencePendingList(Reference)@50 -> ReferenceInternals.setNextDiscovered(Reference, Reference)
method: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, result: ReferenceObjectProcessing.processRememberedReferences()@36 -> HeapImpl.dirtyCardIfNecessary(Object, Object)
method: guaranteeGCInProgress, com.oracle.svm.core.thread.VMOperation, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, result: HeapImpl.addToReferencePendingList(Reference)@30 -> ReferenceInternals.getNextDiscovered(Reference)
method: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releaseSpaces, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: swapSpaces, com.oracle.svm.core.genscavenge.YoungGeneration, result: GCImpl.swapSpaces()@23 -> YoungGeneration.swapSpaces()
method: swapSpaces, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, result: ReferenceObjectProcessing.processRememberedRef(Reference)@1 -> ReferenceInternals.getReferentPointer(Reference)
method: maybeUpdateForwardedReference, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prepareForPromotion, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: prepareForPromotion, com.oracle.svm.core.genscavenge.YoungGeneration, result: GCImpl.prepareForPromotion(boolean)@34 -> YoungGeneration.prepareForPromotion()
method: willSurviveThisCollection, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: clear, com.oracle.svm.core.heap.ReferenceInternals, result: ReferenceObjectProcessing.processRememberedRef(Reference)@77 -> ReferenceInternals.clear(Reference)
method: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, result: HeapImpl.dirtyCardIfNecessary(Object, Object)@0 -> HeapPolicy.getMaxSurvivorSpaces()
method: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, result: OldGeneration.releaseSpaces()@13 -> GCImpl.isCompleteCollection()
method: isAlignedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isUnalignedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnclosingHeapChunk, com.oracle.svm.core.genscavenge.HeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnclosingAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkNativeImageHeapRegions, com.oracle.svm.core.genscavenge.HeapImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isForwardedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getForwardedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, result: ReferenceObjectProcessing.maybeUpdateForwardedReference(Reference, Pointer)@22 -> ReferenceInternals.setReferentPointer(Reference, Pointer)
method: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanGreyObjects, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reset, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor$DiagnosticReporter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanupClose0, java.io.FileCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.UncheckedIOException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: testForwardedHeaderBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: ObjectHeaderImpl.isForwardedHeader(UnsignedWord)@1 -> ObjectHeaderImpl.testForwardedHeaderBit(UnsignedWord)
method: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, result: OldGeneration.prepareForPromotion()@1 -> OldGeneration.getToGreyObjectsWalker()
method: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releaseSurvivorSpaces, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasShift, org.graalvm.compiler.core.common.CompressEncoding, result: ObjectHeaderImpl.getForwardedObject(Pointer)@45 -> CompressEncoding.hasShift()
method: getSurvivorGreyObjectsWalker, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releaseAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: popAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: releaseUnalignedHeapChunks, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: popUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkDirtyObjects, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: promoteObjectChunk, com.oracle.svm.core.genscavenge.OldGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexLimitForMemorySize, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkRegions, com.oracle.svm.core.genscavenge.ImageHeapWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: haveGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: promoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkObjectsFromInline, com.oracle.svm.core.genscavenge.HeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setUpRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setRememberedSetBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: writeHeaderToObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDirtyEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexToMemoryPointer, com.oracle.svm.core.genscavenge.CardTable, result: AlignedHeapChunk.walkDirtyObjectsOfAlignedHeapChunk(AlignedHeapChunk$AlignedHeader, ObjectVisitor, boolean)@176 -> CardTable.indexToMemoryPointer(Pointer, UnsignedWord)
method: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: min, com.oracle.svm.core.util.PointerUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEntryAtIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unbiasExponent, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.getPreciseFirstObjectPointer(Pointer, Pointer, Pointer, UnsignedWord)@91 -> FirstObjectTable.unbiasExponent(int)
method: exponentToOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.getPreciseFirstObjectPointer(Pointer, Pointer, Pointer, UnsignedWord)@98 -> FirstObjectTable.exponentToOffset(int)
method: indexMinusDelta, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.getPreciseFirstObjectPointer(Pointer, Pointer, Pointer, UnsignedWord)@107 -> FirstObjectTable.indexMinusDelta(UnsignedWord, UnsignedWord)
method: getPointerAtOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexToMemoryPointer, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: indexToTableOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.getEntryAtIndex(Pointer, UnsignedWord)@2 -> FirstObjectTable.indexToTableOffset(UnsignedWord)
method: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, result: FirstObjectTable.indexToMemoryPointer(UnsignedWord, Pointer)@1 -> FirstObjectTable.indexToMemoryOffset(UnsignedWord)
method: entryToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: memoryOffsetScale, com.oracle.svm.core.genscavenge.FirstObjectTable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, jdk.internal.ref.WeakCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.concurrent.ConcurrentHashMap$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, jdk.internal.ref.SoftCleanable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: containsAll, java.util.concurrent.ConcurrentHashMap$CollectionView, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkForComodification, java.util.ArrayList$SubList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pattern, java.util.regex.Matcher, result: Matcher.toString()@20 -> Matcher.pattern()
method: regionStart, java.util.regex.Matcher, result: Matcher.toString()@32 -> Matcher.regionStart()
method: regionEnd, java.util.regex.Matcher, result: Matcher.toString()@44 -> Matcher.regionEnd()
method: group, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: test, com.oracle.svm.core.meta.SubstrateObjectConstantEquality, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: group, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rangeCheckForAdd, java.util.ArrayList$SubList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBoundsMsg, java.util.ArrayList$SubList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$EntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$BaseIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ArrayList$SubList$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mapEntryToString, java.util.concurrent.Helpers, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: objectToString, java.util.concurrent.Helpers, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.text.NumberFormat, result: DecimalFormat.hashCode()@1 -> NumberFormat.hashCode()
method: <init>, java.util.concurrent.ConcurrentHashMap$TableStack, result: ConcurrentHashMap$Traverser.pushState(ConcurrentHashMap$Node[], int, int)@27 -> ConcurrentHashMap$TableStack.<init>()
method: valueOf, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMillisOf, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.text.NumberFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLastRawOffset, sun.util.calendar.ZoneInfo, result: ZoneInfo.hashCode()@1 -> ZoneInfo.getLastRawOffset()
method: hashCode, java.time.ZoneOffset, result: ZonedDateTime.hashCode()@11 -> ZoneOffset.hashCode()
method: hashCode, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.time.LocalDate, result: LocalDateTime.hashCode()@4 -> LocalDate.hashCode()
method: hashCode, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toNanoOfDay, java.time.LocalTime, result: LocalTime.hashCode()@1 -> LocalTime.toNanoOfDay()
method: toString, jdk.vm.ci.meta.JavaConstant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: layoutChars, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: signum, java.lang.Long, result: BigDecimal.signum()@15 -> Long.signum(long)
method: valueOf, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkRange, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rotateLeft, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rotateRight, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.temporal.UnsupportedTemporalTypeException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reportOverflow, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.Instant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.temporal.TemporalAccessor, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isValidIntValue, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: genInvalidFieldMessage, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bigTenToThe, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareMagnitude, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.ZoneOffset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLong, java.time.ZoneOffset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateTime, java.util.Calendar, result: Calendar.getTimeInMillis()@8 -> Calendar.updateTime()
method: <init>, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: internalGet, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isTimeBased, java.time.temporal.ChronoField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isExternallySet, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expandBigIntegerTenPowers, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get0, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: pow, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFieldName, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get0, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isIntValue, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: selectFields, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isValidValue, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bitLengthForInt, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: aggregateStamp, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bitCount, java.lang.Integer, result: BigInteger.bitLength()@59 -> Integer.bitCount(int)
method: isSet, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: internalGetEra, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setFieldsComputed, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBytes, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encode, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo0, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isFieldSet, java.util.Calendar, result: GregorianCalendar.computeTime()@170 -> Calendar.isFieldSet(int, int)
method: getCpHash, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfYear, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCp, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfWeek, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCpNext, java.lang.CharacterName, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: square, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFixedDate, java.util.GregorianCalendar, result: GregorianCalendar.computeTime()@351 -> GregorianCalendar.getFixedDate(BaseCalendar, int, int)
method: getValue, java.time.DayOfWeek, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorDivide, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFixedDate, sun.util.calendar.BaseCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfWeekDateOnOrBefore, sun.util.calendar.AbstractCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: monthLength, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: maxBytesPerChar, java.nio.charset.CharsetEncoder, result: StringCoding.encode(Charset, byte, byte[])@94 -> CharsetEncoder.maxBytesPerChar()
method: safeTrim, java.lang.StringCoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toChars, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: wrap, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getJulianCalendarSystem, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: square, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: smallToString, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.InflaterInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInt, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: signInt, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: firstNonzeroIntNum, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.EOFException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: readFully, java.io.DataInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.MutableBigInteger, result: BigInteger.smallToString(int)@58 -> MutableBigInteger.<init>()
method: <init>, java.math.MutableBigInteger, result: BigInteger.smallToString(int)@72 -> MutableBigInteger.<init>(int[])
method: divide, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toBigInteger, java.math.MutableBigInteger, result: BigInteger.smallToString(int)@115 -> MutableBigInteger.toBigInteger(int)
method: isPartiallyNormalized, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSetStateFields, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: computeFields, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: round, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getRadixConversionCache, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCalendarDateFromFixedDate, sun.util.calendar.BaseCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.ISO_8859_1$Encoder, result: ISO_8859_1.newEncoder()@5 -> ISO_8859_1$Encoder.<init>(Charset)
method: <init>, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: squareToLen, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.Surrogate$Parser, result: ISO_8859_1$Encoder.<init>(Charset)@12 -> Surrogate$Parser.<init>()
method: trustedStripLeadingZeroInts, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: squareKaratsuba, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bitLength, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: squareToomCook3, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implSquareToLenChecks, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implSquareToLen, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyOfRange, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLower, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getUpper, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: internalSet, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMagnitudeArray, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getToomSlice, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.Inflater, result: Inflater.<init>()@2 -> Inflater.<init>(boolean)
method: <init>, java.util.zip.InflaterInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFixedDateJan1, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: exactDivideBy3, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFixedDateMonth1, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getWeekNumber, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isGregorianLeapYear, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isJulianLeapYear, sun.util.calendar.CalendarUtils, result: GregorianCalendar.computeFields(int, int)@1161 -> CalendarUtils.isJulianLeapYear(int)
method: getCalendarDate, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCutoverCalendarSystem, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedHashMap, result: HashSet.<init>(int, float, boolean)@11 -> LinkedHashMap.<init>(int, float)
method: getSubSequence, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mod, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRemainderBurnikelZiegler, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRemainderBurnikelZiegler, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isZero, java.math.MutableBigInteger, result: BigInteger.divideAndRemainderBurnikelZiegler(BigInteger)@30 -> MutableBigInteger.isZero()
method: divideAndRemainderKnuth, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideKnuth, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMinimum, java.time.temporal.ValueRange, result: ValueRange.isIntValue()@1 -> ValueRange.getMinimum()
method: getMaximum, java.time.temporal.ValueRange, result: ValueRange.isIntValue()@12 -> ValueRange.getMaximum()
method: decompose, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getFromU16SingleLead, sun.text.normalizer.Trie2_16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMostDecompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.NoSuchElementException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSurrogate, sun.text.normalizer.UTF16, result: NormalizerImpl.decompose(CharSequence, int, int, NormalizerImpl$ReorderingBuffer)@70 -> UTF16.isSurrogate(char)
method: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, result: NormalizerImpl.decompose(CharSequence, int, int, NormalizerImpl$ReorderingBuffer)@81 -> NormalizerImpl$UTF16Plus.isSurrogateLead(int)
method: bitLength, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: max, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: safeLeftShift, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBlock, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: flushAndAppendZeroCC, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decompose, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDecompYes, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divide2n1n, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCCFromYesOrMaybe, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: rightShift, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Integer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setLength, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setLength, java.lang.AbstractStringBuilder, result: StringBuilder.setLength(int)@2 -> AbstractStringBuilder.setLength(int)
method: <init>, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ensureCapacity, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setIterator, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: NormalizerImpl$ReorderingBuffer.<init>(NormalizerImpl, Appendable, int)@69 -> NormalizerImpl$ReorderingBuffer.setIterator()
method: previousCC, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextEntry, java.util.TreeMap$PrivateEntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.AbstractStringBuilder, result: StringBuilder.append(long)@2 -> AbstractStringBuilder.append(long)
method: successor, java.util.TreeMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setFieldsNormalized, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLong, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decomposeAndAppend, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareMagnitude, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: longMultiplyPowerTen, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bigMultiplyPowerTen, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: longCompareMagnitude, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: add, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLong, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initCause, java.lang.Throwable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subtract, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLong, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: insert, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toEpochDay, java.time.LocalDate, result: LocalDate.getLong(TemporalField)@15 -> LocalDate.toEpochDay()
method: getProlepticMonth, java.time.LocalDate, result: LocalDate.getLong(TemporalField)@27 -> LocalDate.getProlepticMonth()
method: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Boolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLeapYear, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Boolean, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Byte, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Byte, result: Byte.compareTo(Byte)@8 -> Byte.compare(byte, byte)
method: compareTo, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Character, result: CharBuffer.compare(char, char)@2 -> Character.compare(char, char)
method: getChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Short, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Short, result: Short.compareTo(Short)@8 -> Short.compare(short, short)
method: compareTo, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.Long, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorDivide, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.decompose(int, int, NormalizerImpl$ReorderingBuffer)@10 -> NormalizerImpl.isMaybeOrNonZeroCC(int)
method: getMonth, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.decompose(int, int, NormalizerImpl$ReorderingBuffer)@29 -> NormalizerImpl.mapAlgorithmic(int, int)
method: isHangulLV, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.decompose(int, int, NormalizerImpl$ReorderingBuffer)@58 -> NormalizerImpl.isHangulLV(int)
method: isHangulLVT, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: forName, sun.util.calendar.CalendarSystem, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decompose, sun.text.normalizer.NormalizerImpl$Hangul, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointBefore, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkScale, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: firstDayOfYear, java.time.Month, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChars, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.time.DayOfWeek, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRound, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hangulLVT, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.isHangulLVT(int)@2 -> NormalizerImpl.hangulLVT()
method: needIncrement, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createAndStripZerosToMatchScale, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLeapYear, java.time.chrono.IsoChronology, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.time.Month, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRound, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Float, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: needIncrement, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toBigDecimal, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toCompactValue, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.Double, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: createAndStripZerosToMatchScale, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiply, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: bigMultiplyPowerTen, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiplyKaratsuba, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiplyToomCook3, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiplyByInt, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.nio.charset.Charset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRound, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: multiplyToLen, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToIgnoreCase, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divide, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: needIncrement, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.Instant, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointCount, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointCount, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.ZoneOffset, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo0, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.chrono.ChronoLocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hit, sun.util.calendar.BaseCalendar$Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGregorianYearFromFixedDate, sun.util.calendar.BaseCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.chrono.ChronoLocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: floorDivide, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfWeekFromFixedDate, sun.util.calendar.BaseCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match0, java.util.regex.Pattern$Curly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideLongMagnitude, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toLong, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hit, sun.util.calendar.BaseCalendar$Date, result: BaseCalendar.getFixedDate(int, int, int, BaseCalendar$Date)@25 -> BaseCalendar$Date.hit(int)
method: getDayOfYear, sun.util.calendar.BaseCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mulAdd, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: commonNeedIncrement, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addOne, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match1, java.util.regex.Pattern$Curly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: primitiveLeftShift, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match2, java.util.regex.Pattern$Curly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: precision, java.time.temporal.TemporalQueries, result: Instant.query(TemporalQuery)@1 -> TemporalQueries.precision()
method: checkScale, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getGregorianCutoverDate, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLastJulianDate, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDateBased, java.time.temporal.ChronoField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkScale, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: valueOf, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getYear, java.time.LocalDate, result: LocalDate.range(TemporalField)@108 -> LocalDate.getYear()
method: of, java.time.temporal.ValueRange, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.temporal.ValueRange, result: ValueRange.of(long, long)@24 -> ValueRange.<init>(long, long, long, long)
method: lengthOfYear, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lengthOfMonth, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fillNull, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fillNull, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSurrogatePair, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fill, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: chronology, java.time.temporal.TemporalQueries, result: Instant.query(TemporalQuery)@12 -> TemporalQueries.chronology()
method: getChronology, java.time.LocalDate, result: LocalDate.getChronology()@1 -> LocalDate.getChronology()
method: zoneId, java.time.temporal.TemporalQueries, result: Instant.query(TemporalQuery)@19 -> TemporalQueries.zoneId()
method: offset, java.time.temporal.TemporalQueries, result: Instant.query(TemporalQuery)@33 -> TemporalQueries.offset()
method: toLocalDate, java.time.LocalDateTime, result: LocalDateTime.compareTo0(LocalDateTime)@5 -> LocalDateTime.toLocalDate()
method: localDate, java.time.temporal.TemporalQueries, result: Instant.query(TemporalQuery)@40 -> TemporalQueries.localDate()
method: implMulAddCheck, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implMulAdd, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: localTime, java.time.temporal.TemporalQueries, result: Instant.query(TemporalQuery)@47 -> TemporalQueries.localTime()
method: multiplyToLenCheck, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implMultiplyToLen, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: range, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: query, java.time.chrono.ChronoLocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNormalizedCalendar, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: query, java.time.chrono.ChronoLocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isFullyNormalized, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.nio.CharBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getYearOffsetInMillis, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareHalf, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mod, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.lang.String$CaseInsensitiveComparator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isCutoverYear, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareTo, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToUTF16, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToLatin1, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: actualMonthLength, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChar, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: set, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.BaseCalendar$Date, result: Gregorian$Date.<init>(TimeZone)@2 -> BaseCalendar$Date.<init>(TimeZone)
method: checkOffset, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareValues, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isISOControl, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: length, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToUTF16Values, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: check, java.util.regex.Pattern$Bound, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCurrentFixedDate, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isWord, java.util.regex.Pattern$Bound, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasBaseCharacter, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isSupported, java.time.chrono.ChronoLocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compare, java.nio.ByteBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointCount, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendExpandedReplacement, java.util.regex.Matcher, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: inRange, java.util.regex.Pattern, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: lengthOfMonth, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLeapYear, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toEpochDay, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCalendarDate, sun.util.calendar.AbstractCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: previousOrSame, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: adjust, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextOrSame, sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getSourceFileName, java.lang.Class, result: FrameInfoQueryResult.getSourceReference()@34 -> Class.getSourceFileName()
method: <init>, java.lang.StackTraceElement, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StackTraceElement, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMonthLength, sun.util.calendar.BaseCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match0, java.util.regex.Pattern$GroupCurly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeAnnotations, com.oracle.svm.core.hub.AnnotationsEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match1, java.util.regex.Pattern$GroupCurly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: match2, java.util.regex.Pattern$GroupCurly, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAnnotation, com.oracle.svm.core.hub.AnnotationsEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getAnnotations, com.oracle.svm.core.hub.AnnotationsEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: filterByType, com.oracle.svm.core.hub.AnnotationsEncoding, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: with, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: adjustStamp, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: plusDays, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTime, sun.util.calendar.AbstractCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: contendedLock, java.util.concurrent.ConcurrentHashMap$TreeBin, result: ConcurrentHashMap$TreeBin.lockRoot()@16 -> ConcurrentHashMap$TreeBin.contendedLock()
method: <init>, java.util.IdentityHashMap$EntryIterator$Entry, result: IdentityHashMap$EntryIterator.next()@10 -> IdentityHashMap$EntryIterator$Entry.<init>(IdentityHashMap$EntryIterator, int)
method: <init>, java.util.regex.IntHashSet, result: Pattern$Loop.matchInit(Matcher, int, CharSequence)@46 -> IntHashSet.<init>()
method: pinDayOfMonth, java.util.GregorianCalendar, result: GregorianCalendar.add(int, int)@112 -> GregorianCalendar.pinDayOfMonth()
method: monthLength, java.util.GregorianCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setTimeZone, java.util.Calendar, result: GregorianCalendar.setTimeZone(TimeZone)@2 -> Calendar.setTimeZone(TimeZone)
method: getPool, sun.util.locale.provider.LocaleServiceProviderPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findRegionOverride, sun.util.locale.provider.CalendarDataUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLocalizedObject, sun.util.locale.provider.LocaleServiceProviderPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: next, java.util.HashMap$EntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextNode, java.util.HashMap$HashIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sub, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: next, java.util.TreeMap$EntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: create, jdk.internal.math.FormattedFloatingDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nonNullElementAt, java.util.ArrayDeque, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Locale$Builder, result: CalendarDataUtility.findRegionOverride(Locale)@87 -> Locale$Builder.<init>()
method: setLocale, java.util.Locale$Builder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setRegion, java.util.Locale$Builder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: build, java.util.Locale$Builder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLocalizedObjectImpl, sun.util.locale.provider.LocaleServiceProviderPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, com.oracle.svm.core.WeakIdentityHashMap$HashIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.nio.charset.CoderResult, result: CoderResult.lambda$malformedForLength$0(Integer)@9 -> CoderResult.<init>(int, int)
method: getOffsets, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTransitionIndex, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLastRule, sun.util.calendar.ZoneInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.InternalLocaleBuilder, result: Locale$Builder.<init>()@9 -> InternalLocaleBuilder.<init>()
method: append, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.Format, result: NumberFormat.<init>()@1 -> Format.<init>()
method: setLocale, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.IllformedLocaleException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setRegion, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeRules, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putCharsAt, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBaseLocale, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionMatches, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLocaleExtensions, sun.util.locale.InternalLocaleBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCompatibilityExtensions, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.util.Locale, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: append, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: retrieveDisplayName, sun.util.locale.provider.TimeZoneNameUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nonNull, java.util.Objects, result: TimeZoneNameUtility.retrieveDisplayName(String, boolean, int, Locale)@9 -> Objects.nonNull(Object)
method: setMaximumFractionDigits, java.text.DecimalFormat, result: NumberFormatProviderImpl.getInstance(Locale, int)@92 -> DecimalFormat.setMaximumFractionDigits(int)
method: setDecimalSeparatorAlwaysShown, java.text.DecimalFormat, result: NumberFormatProviderImpl.getInstance(Locale, int)@98 -> DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)
method: <init>, sun.util.locale.provider.DateFormatSymbolsProviderImpl, result: JRELocaleProviderAdapter.lambda$getDateFormatSymbolsProvider$3()@14 -> DateFormatSymbolsProviderImpl.<init>(LocaleProviderAdapter$Type, Set)
method: <init>, java.text.spi.DateFormatSymbolsProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.ref.ReferenceQueue$Lock, result: ReferenceQueue.<init>()@9 -> ReferenceQueue$Lock.<init>()
method: <init>, sun.util.resources.LocaleData, result: JRELocaleProviderAdapter.getLocaleData()@27 -> LocaleData.<init>(LocaleProviderAdapter$Type)
method: getLocalizedObject, sun.util.locale.provider.LocaleServiceProviderPool, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: availableLanguageTags, sun.util.cldr.CLDRBaseLocaleDataMetaInfo, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNull, java.util.Objects, result: TimeZoneNameUtility.retrieveDisplayNamesImpl(String, Locale)@155 -> Objects.isNull(Object)
method: expandAffixes, java.text.DecimalFormat, result: DecimalFormat.applyPattern(String, boolean)@1638 -> DecimalFormat.expandAffixes()
method: getOrDefault, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.InterruptedException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: emptySet, java.util.Collections, result: CLDRLocaleProviderAdapter.createLanguageTagSet(String)@72 -> Collections.emptySet()
method: <init>, java.util.HashSet, result: CLDRLocaleProviderAdapter.createLanguageTagSet(String)@80 -> HashSet.<init>()
method: <init>, java.util.HashMap, result: HashSet.<init>()@9 -> HashMap.<init>()
method: <init>, java.util.StringTokenizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.StringTokenizer, result: StringTokenizer.<init>(String)@5 -> StringTokenizer.<init>(String, String, boolean)
method: hasMoreTokens, java.util.StringTokenizer, result: CLDRLocaleProviderAdapter.createLanguageTagSet(String)@97 -> StringTokenizer.hasMoreTokens()
method: skipDelimiters, java.util.StringTokenizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: nextToken, java.util.StringTokenizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: scanToken, java.util.StringTokenizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkFromIndexSize, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: makePositive, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: stripLeadingZeroBytes, java.math.BigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkFromIndexSize, jdk.internal.util.Preconditions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.spi.LocaleServiceProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: await, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDelimiter, java.util.StringTokenizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: addConditionWaiter, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: fullyRelease, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isOnSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkInterruptWhileWaiting, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateBytes, java.util.zip.CRC32, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateBytesCheck, java.util.zip.CRC32, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unlinkCancelledWaiters, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: reportInterruptAfterWait, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateBytes0, java.util.zip.CRC32, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removeEmptyReferences, sun.util.locale.provider.LocaleResources, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getStringArray, java.util.ResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getObject, java.util.ResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, result: LocaleResources.getNumberPatterns()@73 -> LocaleResources$ResourceReference.<init>(String, Object, ReferenceQueue)
method: <init>, java.lang.ref.SoftReference, result: LocaleResources$ResourceReference.<init>(String, Object, ReferenceQueue)@3 -> SoftReference.<init>(Object, ReferenceQueue)
method: divideAndRound, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideAndRound, java.math.BigDecimal, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: await, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toNanos, java.util.concurrent.TimeUnit, result: AbstractQueuedSynchronizer$ConditionObject.await(long, TimeUnit)@2 -> TimeUnit.toNanos(long)
method: isSpaceChar, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replaceNode, java.util.concurrent.ConcurrentHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: parkNanos, java.util.concurrent.locks.LockSupport, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: transferAfterCancelledWait, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findNodeFromTail, java.util.concurrent.locks.AbstractQueuedSynchronizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBoundsCheckFromIndexSize, jdk.internal.util.Preconditions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBounds, jdk.internal.util.Preconditions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.lang.Character$UnicodeScript, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: binarySearch, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: of, java.util.List, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBoundsMessage, jdk.internal.util.Preconditions, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: binarySearch0, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$ListN, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$List12, result: List.of(Object[])@53 -> ImmutableCollections$List12.<init>(Object, Object)
method: <init>, java.util.ImmutableCollections$List12, result: List.of(Object[])@39 -> ImmutableCollections$List12.<init>(Object)
method: emptyList, java.util.ImmutableCollections, result: List.of(Object[])@28 -> ImmutableCollections.emptyList()
method: set, java.lang.invoke.VarHandleInts$FieldInstanceReadWrite, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isWord, java.util.regex.ASCII, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.Exception, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expandAffix, java.text.DecimalFormat, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: updateSizeAndModCount, java.util.ArrayList$SubList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.UTF_8$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.time.ZoneOffset, result: ZonedDateTime.toString()@21 -> ZoneOffset.toString()
method: outOfBoundsMsg, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: shiftTailOverGap, java.util.ArrayList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.provider.DecimalFormatSymbolsProviderImpl, result: JRELocaleProviderAdapter.lambda$getDecimalFormatSymbolsProvider$4()@14 -> DecimalFormatSymbolsProviderImpl.<init>(LocaleProviderAdapter$Type, Set)
method: <init>, java.text.spi.DecimalFormatSymbolsProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.locale.provider.NumberFormatProviderImpl, result: JRELocaleProviderAdapter.lambda$getNumberFormatProvider$5()@14 -> NumberFormatProviderImpl.<init>(LocaleProviderAdapter$Type, Set)
method: <init>, java.text.spi.NumberFormatProvider, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setLength, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$AbstractImmutableList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: replaceWith, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$AbstractImmutableCollection, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isLegalReplacement, java.nio.charset.CharsetEncoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: overflow, sun.nio.cs.UTF_8$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: charset, java.nio.charset.CharsetEncoder, result: CharsetEncoder.isLegalReplacement(byte[])@24 -> CharsetEncoder.charset()
method: setMaximumFractionDigits, java.text.NumberFormat, result: DecimalFormat.setMaximumFractionDigits(int)@35 -> NumberFormat.setMaximumFractionDigits(int)
method: balanceDeletion, java.util.concurrent.ConcurrentHashMap$TreeBin, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMinimumFractionDigits, java.text.NumberFormat, result: DecimalFormat.setMaximumFractionDigits(int)@78 -> NumberFormat.setMinimumFractionDigits(int)
method: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: overflow, sun.nio.cs.UTF_8$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMinimumIntegerDigits, java.text.NumberFormat, result: DecimalFormat.setMinimumIntegerDigits(int)@35 -> NumberFormat.setMinimumIntegerDigits(int)
method: setMaximumIntegerDigits, java.text.NumberFormat, result: DecimalFormat.setMinimumIntegerDigits(int)@78 -> NumberFormat.setMaximumIntegerDigits(int)
method: setGroupingUsed, java.text.NumberFormat, result: DecimalFormat.setGroupingUsed(boolean)@2 -> NumberFormat.setGroupingUsed(boolean)
method: format, java.time.format.DateTimeFormatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: formatTo, java.time.format.DateTimeFormatter, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: appendValue, java.util.Calendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.time.LocalDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.time.LocalDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deleteCharAt, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.time.LocalTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: deleteCharAt, java.lang.AbstractStringBuilder, result: StringBuilder.deleteCharAt(int)@2 -> AbstractStringBuilder.deleteCharAt(int)
method: copy, java.lang.reflect.Method, result: ReflectAccess.copyMethod(Method)@1 -> Method.copy()
method: copy, java.lang.reflect.Field, result: ReflectAccess.copyField(Field)@1 -> Field.copy()
method: <init>, java.lang.reflect.Field, result: Field.copy()@49 -> Field.<init>(Class, String, Class, int, int, String, byte[])
method: <init>, java.lang.reflect.Method, result: Method.copy()@65 -> Method.<init>(Class, String, Class[], Class, Class[], int, int, String, byte[], byte[], byte[])
method: <init>, java.lang.reflect.AccessibleObject, result: Field.<init>(Class, String, Class, int, int, String, byte[])@1 -> AccessibleObject.<init>()
method: addEntry, java.util.Hashtable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.reflect.Executable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Hashtable$Entry, result: Hashtable.addEntry(int, Object, Object, int)@62 -> Hashtable$Entry.<init>(int, Object, Object, Hashtable$Entry)
method: min, java.lang.Math, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: cleanup, java.io.ExpiringCache, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: entryFor, java.io.ExpiringCache, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.io.ExpiringCache$Entry, result: ExpiringCache.put(String, String)@60 -> ExpiringCache$Entry.<init>(long, String)
method: checkIndexForEntryUse, java.util.IdentityHashMap$EntryIterator$Entry, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getType, java.lang.reflect.Field, result: Field.equals(Object)@39 -> Field.getType()
method: getDeclaringClass, java.lang.reflect.Method, result: Method.hashCode()@1 -> Method.getDeclaringClass()
method: getModifiers, java.lang.reflect.Method, result: Method.isDefault()@1 -> Method.getModifiers()
method: toString, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equalParamTypes, java.lang.reflect.Executable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.IllegalStateException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.reflect.Modifier, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, sun.util.calendar.Era, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.LinkedHashMap$LinkedEntrySet, result: LinkedHashMap.entrySet()@15 -> LinkedHashMap$LinkedEntrySet.<init>(LinkedHashMap)
method: compare, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: size, java.util.ImmutableCollections$ListN, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.ImmutableCollections$ListItr, result: ImmutableCollections$AbstractImmutableList.iterator()@9 -> ImmutableCollections$ListItr.<init>(List, int)
method: getValue, java.time.Month, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLowestSetBit, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: methodModifiers, java.lang.reflect.Modifier, result: Method.toString()@1 -> Modifier.methodModifiers()
method: isDefault, java.lang.reflect.Method, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sharedToString, java.lang.reflect.Executable, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hash, java.util.Objects, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hashCode, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: primitiveLeftShift, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: primitiveRightShift, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: leftShift, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divideMagnitude, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, java.lang.StackTraceElement, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: dropClassLoaderName, java.lang.StackTraceElement, result: StackTraceElement.toString()@4 -> StackTraceElement.dropClassLoaderName()
method: copyAndShift, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, sun.text.normalizer.FilteredNormalizer2, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divWord, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: safeRightShift, java.math.MutableBigInteger, result: MutableBigInteger.divide2n1n(MutableBigInteger, MutableBigInteger)@42 -> MutableBigInteger.safeRightShift(int)
method: keepLower, java.math.MutableBigInteger, result: MutableBigInteger.divide2n1n(MutableBigInteger, MutableBigInteger)@49 -> MutableBigInteger.keepLower(int)
method: dropModuleVersion, java.lang.StackTraceElement, result: StackTraceElement.toString()@94 -> StackTraceElement.dropModuleVersion()
method: divide3n2n, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unsignedLongCompare, java.math.MutableBigInteger, result: MutableBigInteger.divideMagnitude(MutableBigInteger, MutableBigInteger, boolean)@674 -> MutableBigInteger.unsignedLongCompare(long, long)
method: equals, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalizeSecondAndAppend, sun.text.normalizer.FilteredNormalizer2, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mulsub, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divadd, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: outOfBounds, java.util.ImmutableCollections$AbstractImmutableList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: subSequence, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: mulsubBorrow, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: normalize, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isNativeMethod, java.lang.StackTraceElement, result: StackTraceElement.toString()@214 -> StackTraceElement.isNativeMethod()
method: subSequence, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, java.util.HashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.format.DateTimePrintContext, result: DateTimeFormatter.formatTo(TemporalAccessor, Appendable)@20 -> DateTimePrintContext.<init>(TemporalAccessor, DateTimeFormatter)
method: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isZero, java.text.DigitList, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getStringBuffer, java.text.DigitList, result: DigitList.toString()@11 -> DigitList.getStringBuffer()
method: linkNodeLast, java.util.LinkedHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.lang.StringBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.CalendarDate, result: BaseCalendar$Date.<init>(TimeZone)@2 -> CalendarDate.<init>(TimeZone)
method: adjust, java.time.format.DateTimePrintContext, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removeNode, java.util.HashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: substring, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toString, sun.util.calendar.CalendarDate, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: sprintf0d, sun.util.calendar.CalendarUtils, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removeTreeNode, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkForComodification, java.util.ArrayList$SubList$1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: transferLinks, java.util.LinkedHashMap, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: startOptional, java.time.format.DateTimePrintContext, result: DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimePrintContext, StringBuilder)@13 -> DateTimePrintContext.startOptional()
method: endOptional, java.time.format.DateTimePrintContext, result: DateTimeFormatterBuilder$CompositePrinterParser.format(DateTimePrintContext, StringBuilder)@108 -> DateTimePrintContext.endOptional()
method: mulsubLong, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: divaddLong, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getChronology, java.time.format.DateTimeFormatter, result: DateTimePrintContext.adjust(TemporalAccessor, DateTimeFormatter)@1 -> DateTimeFormatter.getChronology()
method: getZone, java.time.format.DateTimeFormatter, result: DateTimePrintContext.adjust(TemporalAccessor, DateTimeFormatter)@6 -> DateTimeFormatter.getZone()
method: fill, java.util.Arrays, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: values, java.time.temporal.ChronoField, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setMaxDelimCodePoint, java.util.StringTokenizer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEpochSecond, java.time.Instant, result: ZonedDateTime.ofInstant(Instant, ZoneId)@15 -> Instant.getEpochSecond()
method: balanceDeletion, java.util.HashMap$TreeNode, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLower, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareShifted, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ones, java.math.MutableBigInteger, result: MutableBigInteger.divide3n2n(MutableBigInteger, MutableBigInteger)@94 -> MutableBigInteger.ones(int)
method: subtract, java.math.MutableBigInteger, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.time.format.DateTimePrintContext$1, result: DateTimePrintContext.adjust(TemporalAccessor, DateTimeFormatter)@378 -> DateTimePrintContext$1.<init>(ChronoLocalDate, TemporalAccessor, Chronology, ZoneId)
method: <init>, java.util.LinkedHashMap$LinkedKeySet, result: LinkedHashMap.keySet()@14 -> LinkedHashMap$LinkedKeySet.<init>(LinkedHashMap)
method: toString, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: zonedDateTime, java.time.chrono.IsoChronology, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: ofInstant, java.time.ZonedDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getNano, java.time.Instant, result: ZonedDateTime.ofInstant(Instant, ZoneId)@19 -> Instant.getNano()
method: create, java.time.ZonedDateTime, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: composeQuickCheck, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.composeQuickCheck(CharSequence, int, int, boolean, boolean)@59 -> NormalizerImpl.isCompYesAndZeroCC(int)
method: <init>, java.time.ZonedDateTime, result: ZonedDateTime.create(long, int, ZoneId)@41 -> ZonedDateTime.<init>(LocalDateTime, ZoneOffset, ZoneId)
method: getResourceAsStream, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: resolveName, java.lang.Class, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, com.oracle.svm.core.jdk.Resources, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: norm16HasCompBoundaryBefore, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: norm16HasCompBoundaryAfter, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTrailCCFromCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: composeAndAppend, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isEmpty, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findNextCompBoundary, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.composeAndAppend(CharSequence, boolean, boolean, NormalizerImpl$ReorderingBuffer)@25 -> NormalizerImpl.findNextCompBoundary(CharSequence, int, int, boolean)
method: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: NormalizerImpl.composeAndAppend(CharSequence, boolean, boolean, NormalizerImpl$ReorderingBuffer)@39 -> NormalizerImpl$ReorderingBuffer.getStringBuilder()
method: length, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findPreviousCompBoundary, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: removeSuffix, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compose, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasCompBoundaryBefore, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: checkPermission, java.util.spi.LocaleServiceProvider, result: LocaleServiceProvider.<init>()@1 -> LocaleServiceProvider.checkPermission()
method: <init>, java.util.spi.LocaleServiceProvider, result: LocaleServiceProvider.<init>()@4 -> LocaleServiceProvider.<init>(Void)
method: next, java.util.concurrent.ConcurrentHashMap$EntryIterator, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeStartRule, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decodeEndRule, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.concurrent.ConcurrentHashMap$MapEntry, result: ConcurrentHashMap$EntryIterator.next()@47 -> ConcurrentHashMap$MapEntry.<init>(Object, Object, ConcurrentHashMap)
method: getInstance, sun.util.locale.provider.NumberFormatProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setParseIntegerOnly, java.text.NumberFormat, result: NumberFormatProviderImpl.getInstance(Locale, int)@104 -> NumberFormat.setParseIntegerOnly(boolean)
method: adjustForCurrencyDefaultFractionDigits, sun.util.locale.provider.NumberFormatProviderImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.nio.cs.ISO_8859_1$Decoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isDecompNoAlgorithmic, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.isTrailCC01ForCompBoundaryAfter(int)@9 -> NormalizerImpl.isDecompNoAlgorithmic(int)
method: hasCompBoundaryBefore, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeISOArray, sun.nio.cs.ISO_8859_1$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getOffset, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasCompBoundaryAfter, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToCI, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isJamoVT, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.compose(CharSequence, int, int, boolean, boolean, NormalizerImpl$ReorderingBuffer)@442 -> NormalizerImpl.isJamoVT(int)
method: getStart, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getEnd, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.SimpleTimeZone$Cache, result: SimpleTimeZone.getOffset(BaseCalendar, BaseCalendar$Date, int, long)@127 -> SimpleTimeZone$Cache.<init>(long, long, long)
method: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isHangulLV, sun.text.normalizer.NormalizerImpl$Hangul, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getPreviousTrailCC, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToCI, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: decomposeShort, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.compose(CharSequence, int, int, boolean, boolean, NormalizerImpl$ReorderingBuffer)@933 -> NormalizerImpl.decomposeShort(CharSequence, int, int, boolean, boolean, NormalizerImpl$ReorderingBuffer)
method: recompose, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equals, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: remove, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: NormalizerImpl.compose(CharSequence, int, int, boolean, boolean, NormalizerImpl$ReorderingBuffer)@981 -> NormalizerImpl$ReorderingBuffer.remove()
method: compareToCI_UTF16, java.lang.StringLatin1, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isAlgorithmicNoNo, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getTransition, java.util.SimpleTimeZone, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: compareToCI_Latin1, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isTrailCC01ForCompBoundaryAfter, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getInstance, java.util.Currency, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDefaultFractionDigits, java.util.Currency, result: NumberFormatProviderImpl.adjustForCurrencyDefaultFractionDigits(DecimalFormat, DecimalFormatSymbols)@26 -> Currency.getDefaultFractionDigits()
method: getInstance, java.util.Currency, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: encodeISOArrayCheck, sun.nio.cs.ISO_8859_1$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: implEncodeISOArray, sun.nio.cs.ISO_8859_1$Encoder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getMainTableEntry, java.util.Currency, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: findEntry, java.util.Currency$SpecialCaseEntry, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isInert, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.isTrailCC01ForCompBoundaryAfter(int)@1 -> NormalizerImpl.isInert(int)
method: findEntry, java.util.Currency$OtherCurrencyEntry, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.Currency, result: Currency.getInstance(String, int, int)@190 -> Currency.<init>(String, int, int)
method: ensureCapacity, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: unmappableForLength, java.nio.charset.CoderResult, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointBefore, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCCFromYesOrMaybeCP, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: hasCompBoundaryBefore, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointBefore, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equalsIgnoreCase, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.math.BigDecimal$StringBuilderHelper, result: BigDecimal$1.initialValue()@4 -> BigDecimal$StringBuilderHelper.<init>()
method: hasCompBoundaryAfter, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfWeekDateBefore, sun.util.calendar.AbstractCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getDayOfWeekDateAfter, sun.util.calendar.AbstractCalendar, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.text.DateFormatSymbols, result: DateFormatSymbolsProviderImpl.getInstance(Locale)@17 -> DateFormatSymbols.<init>(Locale)
method: getTextResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, result: LocaleData.getNumberFormatData(Locale)@11 -> LocaleProviderAdapter$Type.getTextResourcesPackage()
method: codePointBeforeSB, java.lang.StringUTF16, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initializeData, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getBundle, sun.util.resources.LocaleData, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.resources.LocaleData$1, result: LocaleData.getBundle(String, Locale)@6 -> LocaleData$1.<init>(String, Locale)
method: <init>, java.text.DateFormatSymbols, result: DateFormatSymbols.initializeData(Locale)@49 -> DateFormatSymbols.<init>(boolean)
method: getFCD16, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, sun.util.calendar.JulianCalendar$Date, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: regionMatches, java.lang.String, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getString, java.util.ResourceBundle, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: toOneBasedArray, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: copyMembers, java.text.DateFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: expand, java.util.regex.IntHashSet, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: init, java.util.zip.Inflater, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: get, java.util.zip.Inflater$InflaterZStreamRef, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: codePointAt, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: isMaybe, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: setCharAt, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.Inflater$InflaterZStreamRef$FinalizableZStreamRef, result: Inflater$InflaterZStreamRef.get(Inflater, long)@28 -> Inflater$InflaterZStreamRef$FinalizableZStreamRef.<init>(Inflater, long)
method: <init>, java.util.zip.Inflater$InflaterZStreamRef, result: Inflater$InflaterZStreamRef.get(Inflater, long)@48 -> Inflater$InflaterZStreamRef.<init>(Inflater, long)
method: skipPrevious, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: NormalizerImpl$ReorderingBuffer.insert(int, int)@5 -> NormalizerImpl$ReorderingBuffer.skipPrevious()
method: <init>, java.text.DecimalFormatSymbols, result: DecimalFormatSymbolsProviderImpl.getInstance(Locale)@17 -> DecimalFormatSymbols.<init>(Locale)
method: insert, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: initialize, java.text.DecimalFormatSymbols, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: register, java.lang.ref.Cleaner, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, jdk.internal.ref.CleanerImpl$PhantomCleanableRef, result: Cleaner.register(Object, Runnable)@21 -> CleanerImpl$PhantomCleanableRef.<init>(Object, Cleaner, Runnable)
method: ensureOpen, java.util.zip.InflaterInputStream, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offsetByCodePoints, java.lang.StringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offsetByCodePoints, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: combine, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getLeadSurrogate, sun.text.normalizer.UTF16, result: NormalizerImpl.recompose(NormalizerImpl$ReorderingBuffer, int, boolean)@304 -> UTF16.getLeadSurrogate(int)
method: getTrailSurrogate, sun.text.normalizer.UTF16, result: NormalizerImpl.recompose(NormalizerImpl$ReorderingBuffer, int, boolean)@318 -> UTF16.getTrailSurrogate(int)
method: insert, java.lang.AbstractStringBuilder, result: StringBuilder.insert(int, char[])@3 -> AbstractStringBuilder.insert(int, char[])
method: getCompositionsListForComposite, sun.text.normalizer.NormalizerImpl, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: getCompositionsListForDecompYes, sun.text.normalizer.NormalizerImpl, result: NormalizerImpl.recompose(NormalizerImpl$ReorderingBuffer, int, boolean)@475 -> NormalizerImpl.getCompositionsListForDecompYes(int)
method: flush, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: <init>, java.util.zip.ZipException, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: offsetByCodePoints, java.lang.Character, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: putCharsAt, java.lang.AbstractStringBuilder, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
method: equal, sun.text.normalizer.NormalizerImpl$UTF16Plus, result: com.oracle.svm.hosted.phases.NativeImageInlineDuringParsingPlugin$InvocationResult@34b11111
[simplemethods:3268]     universe:     392.57 ms,  1.71 GB
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: ExceptionCheck, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: destroy, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: destroyWeak, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: decodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: deleteLocalRef, com.oracle.svm.jni.JNIObjectHandles
Method to inline: encodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: createLocal, com.oracle.svm.jni.JNIObjectHandles
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: ExceptionDescribe, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: ExceptionOccurred, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: autoflush, com.oracle.svm.core.log.RealLog, caller: FatalError, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: printStackTrace, java.lang.Throwable, caller: ExceptionDescribe, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: FindClass, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getModifiers, java.lang.reflect.Field, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: isStatic, java.lang.reflect.Modifier, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: isStatic, java.lang.reflect.Modifier, caller: FromReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: FromReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getName, java.lang.reflect.Field, caller: FromReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.lang.Throwable$WrappedPrintStream, caller: printStackTrace, java.lang.Throwable
Method to inline: isInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: ensureInitialized, java.lang.Class
Method to inline: getId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getDeclaredFieldID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getOurStackTrace, java.lang.Throwable, caller: printStackTrace, java.lang.Throwable
Method to inline: isBeingInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isStatic, java.lang.reflect.Modifier, caller: isStatic, com.oracle.svm.jni.access.JNIAccessibleMethod
Method to inline: isReentrantInitialization, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getDeclaredField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getDeclaredMethod, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: decodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: getObject, com.oracle.svm.jni.JNIObjectHandles
Method to inline: isStatic, com.oracle.svm.jni.access.JNIAccessibleField, caller: getDeclaredField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: destroy, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Exception
Method to inline: <init>, com.oracle.svm.core.handles.ThreadLocalHandles, caller: getLocals, com.oracle.svm.jni.JNIObjectHandles
Method to inline: autoflush, com.oracle.svm.core.log.RealLog, caller: doShutdown, com.oracle.svm.core.jdk.VMErrorSubstitutions
Method to inline: isBeingInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: capacity, java.nio.Buffer, caller: GetDirectBufferCapacity, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: isReentrantInitialization, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: isInitialized, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getFieldID, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: isInErrorState, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: <init>, com.oracle.svm.core.jdk.BuildStackTraceVisitor, caller: getStackTrace, com.oracle.svm.core.jdk.StackTraceUtils
Method to inline: getSuperHub, java.lang.Class, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: getSuperHub, java.lang.Class, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: hasDefaultMethods, java.lang.Class, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: invokeClassInitializer, com.oracle.svm.core.hub.ClassInitializationInfo, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Error
Method to inline: <init>, java.lang.ExceptionInInitializerError, caller: initialize, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: report, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getClassName, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: canEncode, java.lang.StringLatin1, caller: append, java.lang.AbstractStringBuilder
Method to inline: getMethodName, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getFileName, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getLineNumber, java.lang.StackTraceElement, caller: exception, com.oracle.svm.core.log.RealLog
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getMethodID, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getMethodID, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: <init>, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, caller: getMethodID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Exception
Method to inline: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, caller: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember
Method to inline: equals, java.lang.Object, caller: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: GetJavaVM, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: getSuperclass, java.lang.Class, caller: isDiscoverableIn, com.oracle.svm.jni.access.JNIAccessibleMember
Method to inline: getOutputFile, com.oracle.svm.core.posix.PosixLogHandler, caller: log, com.oracle.svm.core.posix.PosixLogHandler
Method to inline: <init>, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation, caller: enqueueBlockingSafepoint, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: report, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getOurStackTrace, java.lang.Throwable, caller: printEnclosedStackTrace, java.lang.Throwable
Method to inline: log, com.oracle.svm.core.thread.VMOperationControl, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: getReturnType, java.lang.reflect.Method, caller: of, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: <init>, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, caller: of, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: log, com.oracle.svm.core.thread.VMOperationControl, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: enqueue, com.oracle.svm.core.thread.VMOperationControl
Method to inline: root, java.util.HashMap$TreeNode, caller: getTreeNode, java.util.HashMap$TreeNode
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: getName, java.lang.reflect.Constructor
Method to inline: replace, java.lang.String, caller: toInternalName, jdk.vm.ci.meta.MetaUtil
Method to inline: ordinal, java.lang.Enum, caller: convertJavaToCLong, com.oracle.svm.core.c.enums.EnumRuntimeData
Method to inline: lock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: unlock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: getHandleType, com.oracle.svm.jni.JNIImageHeapHandles, caller: getHandleType, com.oracle.svm.jni.JNIObjectHandles
Method to inline: unlock, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: <init>, com.oracle.svm.jni.JNIThreadLocalPinnedObjects$PinnedObjectListNode, caller: pinArrayAndGetAddress, com.oracle.svm.jni.JNIThreadLocalPinnedObjects
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: getNano, java.time.LocalTime, caller: compareTo, java.time.chrono.ChronoZonedDateTime
Method to inline: getNano, java.time.LocalTime, caller: compareTo, java.time.chrono.ChronoZonedDateTime
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: report, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: getHandleType, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: getId, java.time.ZoneOffset, caller: compareTo, java.time.chrono.ChronoZonedDateTime
Method to inline: getId, java.time.ZoneOffset, caller: compareTo, java.time.chrono.ChronoZonedDateTime
Method to inline: getTypeID, java.lang.Class, caller: isAssignableFromHub, java.lang.Class
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: doGet, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: getInstanceIdentityHashCodeOffset, com.oracle.svm.core.config.ObjectLayout, caller: identityHashCode, java.lang.System
Method to inline: getHashCodeOffset, java.lang.Class, caller: identityHashCode, java.lang.System
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: enqueueAndExecute, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: getSuperclass, java.lang.Class, caller: findMethod, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getSuperclass, java.lang.Class, caller: findMethod, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: initialSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: isPublic, java.lang.reflect.Modifier, caller: isPublic, com.oracle.svm.jni.access.JNIAccessibleMethod
Method to inline: getChars, java.lang.String, caller: getNulTerminatedStringCharsAndPin, com.oracle.svm.jni.functions.JNIFunctions$Support
Method to inline: extractRM, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadReferenceMapIndex, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: safeToInt, org.graalvm.compiler.core.common.NumUtil, caller: pointerTo, com.oracle.svm.core.util.NonmovableByteArrayReader
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: report, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: getUnsafe, org.graalvm.compiler.serviceprovider.GraalUnsafeAccess, caller: generateIdentityHashCode, com.oracle.svm.core.jdk.IdentityHashCodeSupport
Method to inline: <init>, com.oracle.svm.core.genscavenge.PinnedObjectImpl, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: toLocalTime, java.time.LocalDateTime, caller: compareTo, java.time.chrono.ChronoLocalDateTime
Method to inline: length, java.lang.AbstractStringBuilder, caller: length, java.lang.StringBuilder
Method to inline: toLocalTime, java.time.LocalDateTime, caller: compareTo, java.time.chrono.ChronoLocalDateTime
Method to inline: readOffset, org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader, caller: getU1, org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader
Method to inline: toLocalDate, java.time.LocalDateTime, caller: toLocalDate, java.time.LocalDateTime
Method to inline: <init>, java.util.SplittableRandom, caller: generateHashCode, com.oracle.svm.core.jdk.IdentityHashCodeSupport
Method to inline: toLocalDate, java.time.LocalDateTime, caller: compareTo0, java.time.LocalDateTime
Method to inline: extractEX, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadExceptionOffset, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: toLocalTime, java.time.LocalDateTime, caller: compareTo0, java.time.LocalDateTime
Method to inline: coder, java.lang.String, caller: length, java.lang.String
Method to inline: replace, java.lang.String, caller: toInternalName, jdk.vm.ci.meta.MetaUtil
Method to inline: mix32, java.util.SplittableRandom, caller: nextInt, java.util.SplittableRandom
Method to inline: mix32, java.util.SplittableRandom, caller: nextInt, java.util.SplittableRandom
Method to inline: toLocalDateTime, java.time.ZonedDateTime, caller: toLocalDateTime, java.time.ZonedDateTime
Method to inline: isLatin1, java.lang.String, caller: charAt, java.lang.String
Method to inline: offsetIP, com.oracle.svm.core.code.CodeInfoDecoder, caller: advanceIP, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: toLocalTime, java.time.LocalDateTime, caller: toLocalTime, java.time.ZonedDateTime
Method to inline: bitCount, java.lang.Long, caller: mixGamma, java.util.SplittableRandom
Method to inline: extractFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: toEpochDay, java.time.LocalDate, caller: toEpochSecond, java.time.chrono.ChronoZonedDateTime
Method to inline: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: toSecondOfDay, java.time.LocalTime, caller: toEpochSecond, java.time.chrono.ChronoZonedDateTime
Method to inline: getOffset, java.time.ZonedDateTime, caller: toEpochSecond, java.time.chrono.ChronoZonedDateTime
Method to inline: offsetFS, com.oracle.svm.core.code.CodeInfoDecoder, caller: updateSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: toEpochSecond, java.time.chrono.ChronoZonedDateTime
Method to inline: mix64, java.util.SplittableRandom, caller: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: create, com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl
Method to inline: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: executeAllQueuedVMOperations, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadEntryOffset, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: getPinHead, com.oracle.svm.core.genscavenge.HeapImpl, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: toLocalDate, java.time.LocalDateTime, caller: toLocalDate, java.time.ZonedDateTime
Method to inline: <init>, java.util.AbstractMap$SimpleImmutableEntry, caller: next, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupEntryIP, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: indexGranularity, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupEntryIP, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: pushPinnedObject, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: maxUtf8ByteLength, com.oracle.svm.core.util.Utf8, caller: GetStringUTFRegion, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.nio.DirectByteBuffer, caller: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl
Method to inline: ix, java.nio.DirectByteBuffer, caller: put, java.nio.DirectByteBuffer
Method to inline: <init>, java.util.AbstractMap$SimpleImmutableEntry, caller: next, java.util.concurrent.ConcurrentSkipListMap$EntryIterator
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: put, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: put, java.nio.DirectByteBuffer
Method to inline: getSuperclass, java.lang.Class, caller: GetSuperclass, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getByteOrder, jdk.vm.ci.code.Architecture, caller: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl
Method to inline: order, java.nio.ByteBuffer, caller: asByteBuffer, com.oracle.svm.core.c.CTypeConversionSupportImpl
Method to inline: <init>, java.nio.HeapByteBuffer, caller: allocate, java.nio.ByteBuffer
Method to inline: nativeOrder, java.nio.ByteOrder, caller: <init>, java.nio.ByteBuffer
Method to inline: <init>, java.nio.ByteBuffer, caller: <init>, java.nio.ByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isMyself, com.oracle.svm.core.thread.Safepoint$Master, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: incReleased, com.oracle.svm.core.thread.Safepoint$Statistics, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TableStack, caller: pushState, java.util.concurrent.ConcurrentHashMap$Traverser
Method to inline: <init>, java.nio.DirectByteBuffer, caller: NewDirectByteBuffer, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$MapEntry, caller: next, java.util.concurrent.ConcurrentHashMap$EntryIterator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isMyself, com.oracle.svm.core.thread.Safepoint$Master, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: incInstalled, com.oracle.svm.core.thread.Safepoint$Statistics, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: encode, com.oracle.svm.jni.JNIGlobalHandles, caller: create, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: reset, com.oracle.svm.core.code.ReusableTypeReader, caller: logFrame, com.oracle.svm.core.stack.ThreadStackPrinter$AllocationFreeStackFrameVisitor
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: isLeapYear, sun.util.calendar.JulianCalendar
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: mix64, java.util.SplittableRandom, caller: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors
Method to inline: <init>, java.util.concurrent.atomic.AtomicLong, caller: initialize, com.oracle.svm.core.jdk.SplittableRandomAccessors
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: maybeFatallyTooLong, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: zapValuesToLog, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getZapConsumedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: zapValuesToLog, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: create, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: getSourceFileName, java.lang.Class, caller: log, com.oracle.svm.core.code.FrameInfoQueryResult
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: getCalendarDateFromFixedDate, sun.util.calendar.JulianCalendar
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: create, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: encodeLocal, com.oracle.svm.jni.JNIObjectHandles, caller: newLocalRef, com.oracle.svm.jni.JNIObjectHandles
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: create, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: toRange, com.oracle.svm.jni.JNIImageHeapHandles, caller: toLocal, com.oracle.svm.jni.JNIImageHeapHandles
Method to inline: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, caller: nextFrameInfo, com.oracle.svm.core.code.CodeInfoAccess
Method to inline: getDefaultValue, org.graalvm.compiler.options.OptionKey, caller: get, org.graalvm.compiler.options.OptionValues
Method to inline: toIndex, com.oracle.svm.core.handles.ObjectHandlesImpl, caller: toHandle, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: toRange, com.oracle.svm.jni.JNIImageHeapHandles, caller: toGlobal, com.oracle.svm.jni.JNIImageHeapHandles
Method to inline: setEra, sun.util.calendar.CalendarDate, caller: setKnownEra, sun.util.calendar.JulianCalendar$Date
Method to inline: lineSeparator, java.lang.System, caller: newLine, java.io.PrintWriter
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: find, org.graalvm.collections.EconomicMapImpl
Method to inline: hit, sun.util.calendar.BaseCalendar$Date, caller: getFixedDate, sun.util.calendar.JulianCalendar
Method to inline: encodeDebugNames, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeFrameInfo, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: getFixedDate, sun.util.calendar.JulianCalendar
Method to inline: checkAccess, java.lang.Thread, caller: interrupt, java.lang.Thread
Method to inline: encodeSourceReferences, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeFrameInfo, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: getFixedDate, sun.util.calendar.JulianCalendar
Method to inline: interrupt0, java.lang.Thread, caller: interrupt, java.lang.Thread
Method to inline: isLatin1, java.lang.String, caller: hashCode, java.lang.String
Method to inline: interrupt0, java.lang.Thread, caller: interrupt, java.lang.Thread
Method to inline: toUnsignedInt, java.lang.Short, caller: NewString, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getFieldID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, java.lang.String, caller: <init>, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: substring, java.lang.String
Method to inline: getSuperclass, java.lang.Class, caller: findField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getSuperclass, java.lang.Class, caller: findField, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, java.lang.String, caller: newString, java.lang.StringUTF16
Method to inline: <init>, java.lang.String, caller: newString, java.lang.StringUTF16
Method to inline: position, java.nio.channels.FileLock, caller: implCloseChannel, sun.nio.ch.FileChannelImpl
Method to inline: size, java.nio.channels.FileLock, caller: implCloseChannel, sun.nio.ch.FileChannelImpl
Method to inline: hit, sun.util.calendar.BaseCalendar$Date, caller: getFixedDate, sun.util.calendar.BaseCalendar
Method to inline: extractKind, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: extractIsCompressedReference, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: extractIsEliminatedMonitor, com.oracle.svm.core.code.FrameInfoDecoder, caller: decodeValues, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: <init>, java.lang.String, caller: newString, java.lang.StringLatin1
Method to inline: encode, com.oracle.svm.jni.JNIGlobalHandles, caller: createWeak, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: coder, java.lang.String, caller: startsWith, java.lang.String
Method to inline: coder, java.lang.String, caller: startsWith, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: startsWith, java.lang.String
Method to inline: popFrame, com.oracle.svm.core.handles.ThreadLocalHandles, caller: popLocalFrame, com.oracle.svm.jni.JNIObjectHandles
Method to inline: get, com.oracle.svm.jni.JNIThreadLocalPendingException, caller: getAndClearPendingException, com.oracle.svm.jni.JNIGeneratedMethodSupport
Method to inline: isLatin1, java.lang.String, caller: startsWith, java.lang.String
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: hashCode, sun.util.calendar.ZoneInfo
Method to inline: toRange, com.oracle.svm.jni.JNIImageHeapHandles, caller: toWeakGlobal, com.oracle.svm.jni.JNIImageHeapHandles
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: getAddress, com.oracle.svm.jni.JNIThreadLocalEnvironment
Method to inline: getGlobalFunctionTable, com.oracle.svm.jni.functions.JNIFunctionTables, caller: getAddress, com.oracle.svm.jni.JNIThreadLocalEnvironment
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getOffsets, sun.util.calendar.ZoneInfo
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getOffsets, sun.util.calendar.ZoneInfo
Method to inline: ordinal, java.lang.Enum, caller: defaultForKind, jdk.vm.ci.meta.JavaConstant
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringUTF16
Method to inline: toString, jdk.vm.ci.meta.JavaKind, caller: defaultForKind, jdk.vm.ci.meta.JavaConstant
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringUTF16
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringUTF16
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: logRecentEvents, com.oracle.svm.core.thread.VMOperationControl
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringUTF16
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: RegisterNatives, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: hasRemaining, java.nio.Buffer, caller: utf8ToString, com.oracle.svm.core.util.Utf8
Method to inline: ordinal, java.lang.Enum, caller: hashCode, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: setEntryPoint, com.oracle.svm.jni.access.JNINativeLinkage, caller: RegisterNatives, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forByte, jdk.vm.ci.meta.JavaConstant
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringLatin1
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forChar, jdk.vm.ci.meta.JavaConstant
Method to inline: canEncode, java.lang.StringLatin1, caller: replace, java.lang.StringLatin1
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forShort, jdk.vm.ci.meta.JavaConstant
Method to inline: eq, com.oracle.svm.core.WeakIdentityHashMap, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, com.oracle.svm.core.WeakIdentityHashMap$Entry, caller: put, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, com.oracle.svm.core.meta.SubstrateObjectConstant, caller: <init>, com.oracle.svm.core.meta.DirectSubstrateObjectConstant
Method to inline: isInLibgraal, com.oracle.svm.core.SubstrateUtil, caller: <init>, com.oracle.svm.core.meta.DirectSubstrateObjectConstant
Method to inline: getKey, java.util.HashMap$Node, caller: next, java.util.LinkedHashMap$LinkedKeyIterator
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forFloat, jdk.vm.ci.meta.JavaConstant
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringLatin1
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: resize, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: newTable, com.oracle.svm.core.WeakIdentityHashMap, caller: resize, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forDouble, jdk.vm.ci.meta.JavaConstant
Method to inline: <init>, java.util.SimpleTimeZone$Cache, caller: getOffset, java.util.SimpleTimeZone
Method to inline: hasNext, java.util.ImmutableCollections$SetN$SetNIterator, caller: next, java.util.ImmutableCollections$SetN$SetNIterator
Method to inline: <init>, java.lang.String, caller: replace, java.lang.StringLatin1
Method to inline: <init>, java.util.SimpleTimeZone$Cache, caller: getOffset, java.util.SimpleTimeZone
Method to inline: ordinal, java.lang.Enum, caller: forIntegerKind, jdk.vm.ci.meta.JavaConstant
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: transfer, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forInt, jdk.vm.ci.meta.JavaConstant
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuilder
Method to inline: <init>, jdk.vm.ci.meta.PrimitiveConstant, caller: forLong, jdk.vm.ci.meta.JavaConstant
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: expungeStaleEntries, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: getSV, org.graalvm.compiler.core.common.util.AbstractTypeReader
Method to inline: <init>, com.oracle.svm.jni.access.JNINativeLinkage, caller: getLinkage, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: ix, java.nio.DirectByteBuffer, caller: get, java.nio.DirectByteBuffer
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: hashCode, java.util.concurrent.ConcurrentHashMap
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: getValue, com.oracle.svm.core.hub.HubType, caller: isArray, com.oracle.svm.core.hub.HubType
Method to inline: addFinalRefCount, jdk.internal.misc.VM, caller: reallyPoll, java.lang.ref.ReferenceQueue
Method to inline: asS4, org.graalvm.compiler.core.common.util.TypeConversion, caller: getUVInt, org.graalvm.compiler.core.common.util.TypeReader
Method to inline: asS4, org.graalvm.compiler.core.common.util.TypeConversion, caller: getSVInt, org.graalvm.compiler.core.common.util.TypeReader
Method to inline: <init>, java.util.concurrent.locks.ReentrantLock, caller: newMonitorLock, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: ToReflectedField, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: hashCode, java.util.concurrent.ConcurrentHashMap$EntrySetView
Method to inline: <init>, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: get, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: get, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: clear, java.lang.ref.Reference, caller: clear, jdk.internal.ref.PhantomCleanable
Method to inline: copy, java.lang.reflect.Field, caller: copyField, java.lang.reflect.ReflectAccess
Method to inline: eq, com.oracle.svm.core.WeakIdentityHashMap, caller: get, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: get, java.lang.ref.Reference, caller: getKey, java.util.WeakHashMap$Entry
Method to inline: singleton, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: UnregisterNatives, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: dumpVMThreads, com.oracle.svm.core.SubstrateUtil
Method to inline: clear, java.lang.ref.Reference, caller: clean, jdk.internal.ref.PhantomCleanable
Method to inline: <init>, java.lang.reflect.AccessibleObject, caller: <init>, java.lang.reflect.Field
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: isHeldExclusively, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: getDeclaringClassName, com.oracle.svm.jni.access.JNINativeLinkage, caller: unsetEntryPoints, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getReflectionFactory, jdk.internal.reflect.ReflectionFactory, caller: getReflectionFactory, java.lang.Class
Method to inline: getName, java.lang.reflect.Field, caller: searchFields, java.lang.Class
Method to inline: getMonitorOffset, java.lang.Class, caller: getMonitorOffset, com.oracle.svm.core.monitor.MultiThreadedMonitorSupport
Method to inline: unsetEntryPoint, com.oracle.svm.jni.access.JNINativeLinkage, caller: unsetEntryPoints, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: eraseThreadLocals, jdk.internal.misc.InnocuousThread, caller: run, jdk.internal.ref.CleanerImpl
Method to inline: getSourcePC, com.oracle.svm.core.deopt.DeoptimizedFrame, caller: dumpTopFrame, com.oracle.svm.core.SubstrateUtil
Method to inline: add, java.util.ArrayList, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: <init>, sun.util.calendar.BaseCalendar$Date, caller: <init>, sun.util.calendar.JulianCalendar$Date
Method to inline: clear, java.lang.ref.Reference, caller: clean, jdk.internal.ref.WeakCleanable
Method to inline: setByteIndex, com.oracle.svm.core.code.ReusableTypeReader, caller: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: setData, com.oracle.svm.core.code.ReusableTypeReader, caller: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: <init>, sun.util.calendar.BaseCalendar$Date, caller: <init>, sun.util.calendar.Gregorian$Date
Method to inline: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, caller: initFrameInfoReader, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, caller: ToReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: getId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getFieldNameByID, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getName, com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor, caller: ToReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: clear, java.lang.ref.Reference, caller: clean, jdk.internal.ref.SoftCleanable
Method to inline: getName, java.lang.reflect.Method, caller: ToReflectedMethod, com.oracle.svm.jni.functions.JNIFunctions
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: attachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface$Support
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$KeySet, caller: navigableKeySet, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.AbstractSet
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$KeyIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$KeySet
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$KeySet
Method to inline: fromTarget, com.oracle.svm.core.thread.JavaThreads, caller: ensureJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter
Method to inline: <init>, java.lang.Number, caller: <init>, java.util.concurrent.atomic.Striped64
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getLastRuleInstance, sun.util.calendar.ZoneInfo
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: baseHead, java.util.concurrent.ConcurrentSkipListMap
Method to inline: getThreadGroup, java.lang.Thread, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: toTarget, com.oracle.svm.core.thread.JavaThreads, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: toTarget, com.oracle.svm.core.thread.JavaThreads, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: copy, java.lang.reflect.Method, caller: copyMethod, java.lang.reflect.ReflectAccess
Method to inline: isDaemon, java.lang.Thread, caller: assignJavaThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: getLastRuleInstance, sun.util.calendar.ZoneInfo
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$EntryIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$EntrySet
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator, caller: iterator, java.util.concurrent.ConcurrentSkipListMap$EntrySet
Method to inline: indexFor, java.util.WeakHashMap, caller: expungeStaleEntries, java.util.WeakHashMap
Method to inline: isDaemon, java.lang.Thread, caller: joinAllNonDaemons, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.lang.reflect.AccessibleObject, caller: <init>, java.lang.reflect.Executable
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: <init>, java.util.concurrent.ConcurrentHashMap$BaseIterator
Method to inline: <init>, java.util.TimeZone, caller: <init>, java.util.SimpleTimeZone
Method to inline: <init>, java.util.WeakHashMap$EntryIterator, caller: iterator, java.util.WeakHashMap$EntrySet
Method to inline: <init>, java.util.HashMap$KeySet, caller: keySet, java.util.HashMap
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, caller: <init>, java.lang.Thread
Method to inline: <init>, com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference, caller: <init>, java.lang.Thread
Method to inline: <init>, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports$1, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: addTearDownHook, com.oracle.svm.core.jdk.RuntimeSupport, caller: JNI_CreateJavaVM, com.oracle.svm.jni.functions.JNIInvocationInterface$Exports
Method to inline: bitCount, java.lang.Long, caller: size, java.util.RegularEnumSet
Method to inline: <init>, java.util.TreeMap$KeySet, caller: navigableKeySet, java.util.TreeMap
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: DetachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface
Method to inline: releaseCurrentThreadOwnedMonitors, com.oracle.svm.jni.functions.JNIInvocationInterface$Support, caller: DetachCurrentThread, com.oracle.svm.jni.functions.JNIInvocationInterface
Method to inline: <init>, java.util.TreeMap$KeyIterator, caller: keyIterator, java.util.TreeMap
Method to inline: getOutputFile, com.oracle.svm.core.posix.PosixLogHandler, caller: flush, com.oracle.svm.core.posix.PosixLogHandler
Method to inline: <init>, java.util.TreeMap$EntryIterator, caller: iterator, java.util.TreeMap$EntrySet
Method to inline: <init>, java.util.RegularEnumSet$EnumSetIterator, caller: iterator, java.util.RegularEnumSet
Method to inline: <init>, java.util.LinkedHashMap$LinkedKeyIterator, caller: iterator, java.util.LinkedHashMap$LinkedKeySet
Method to inline: <init>, java.util.LinkedHashMap$LinkedEntryIterator, caller: iterator, java.util.LinkedHashMap$LinkedEntrySet
Method to inline: toNanos, java.util.concurrent.TimeUnit, caller: await, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject
Method to inline: getTimeImpl, java.util.Date, caller: getTime, java.util.Date
Method to inline: size, java.util.ImmutableCollections$SetN, caller: <init>, java.util.ImmutableCollections$SetN$SetNIterator
Method to inline: getDefaultRef, java.util.TimeZone, caller: normalize, java.util.Date
Method to inline: autoflush, com.oracle.svm.core.log.RealLog, caller: dumpInterruptibly, com.oracle.svm.core.SubstrateSegfaultHandler
Method to inline: getDefaultRef, java.util.TimeZone, caller: normalize, java.util.Date
Method to inline: <init>, java.util.ImmutableCollections$Set12$1, caller: iterator, java.util.ImmutableCollections$Set12
Method to inline: singleton, com.oracle.svm.core.option.RuntimeOptionParser, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: singleton, com.oracle.svm.core.option.RuntimeOptionParser, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: singleton, com.oracle.svm.core.jdk.SubstrateThreadMXBean, caller: noteThreadFinish, com.oracle.svm.core.jdk.ManagementSupport
Method to inline: <init>, java.util.IdentityHashMap$KeyIterator, caller: iterator, java.util.IdentityHashMap$KeySet
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: isDaemon, java.lang.Thread, caller: noteThreadFinish, com.oracle.svm.core.jdk.SubstrateThreadMXBean
Method to inline: singleton, com.oracle.svm.core.option.RuntimeOptionParser, caller: parseAndConsumeAllOptions, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: exit, java.lang.Thread, caller: exit, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.IdentityHashMap$EntryIterator, caller: iterator, java.util.IdentityHashMap$EntrySet
Method to inline: copy, java.lang.reflect.Constructor, caller: copyConstructor, java.lang.reflect.ReflectAccess
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: exit, com.oracle.svm.core.thread.JavaThreads
Method to inline: emptyIterator, java.util.Collections, caller: getIterator, java.util.Hashtable
Method to inline: <init>, SimpleMethods, caller: main, SimpleMethods
Method to inline: getTimeInMillis, java.util.Calendar, caller: normalize, java.util.Date
Method to inline: getX, SimpleMethods, caller: main, SimpleMethods
Method to inline: <init>, java.util.LinkedHashMap$LinkedKeySet, caller: keySet, java.util.LinkedHashMap
Method to inline: setX, SimpleMethods, caller: main, SimpleMethods
Method to inline: getY, SimpleMethods, caller: main, SimpleMethods
Method to inline: setY, SimpleMethods, caller: main, SimpleMethods
Method to inline: getDeclaringClass, com.oracle.svm.jni.access.JNIAccessibleMember, caller: getDeclaringClass, com.oracle.svm.jni.access.JNIAccessibleMethod
Method to inline: getX, SimpleMethods, caller: main, SimpleMethods
Method to inline: two, SimpleMethods, caller: main, SimpleMethods
Method to inline: size, java.util.ArrayList, caller: visitFrame, com.oracle.svm.core.jdk.BuildStackTraceVisitor
Method to inline: <init>, java.util.HashMap$KeyIterator, caller: iterator, java.util.HashMap$KeySet
Method to inline: getNumber, SimpleMethods, caller: main, SimpleMethods
Method to inline: empty, SimpleMethods, caller: main, SimpleMethods
Method to inline: add, java.util.ArrayList, caller: visitFrame, com.oracle.svm.core.jdk.BuildStackTraceVisitor
Method to inline: sumOfTwo, SimpleMethods, caller: main, SimpleMethods
Method to inline: getY, SimpleMethods, caller: main, SimpleMethods
Method to inline: name, java.nio.charset.Charset, caller: decode, java.lang.StringCoding
Method to inline: setY, SimpleMethods, caller: main, SimpleMethods
Method to inline: name, java.nio.charset.Charset, caller: decode, java.lang.StringCoding
Method to inline: sumOfTen, SimpleMethods, caller: main, SimpleMethods
Method to inline: getSourceFileName, java.lang.Class, caller: getSourceReference, com.oracle.svm.core.code.FrameInfoQueryResult
Method to inline: <init>, java.util.HashMap$EntryIterator, caller: iterator, java.util.HashMap$EntrySet
Method to inline: sumOfTenWithLocal, SimpleMethods, caller: main, SimpleMethods
Method to inline: emptyMap, java.util.Collections, caller: getMethodsByDescriptor, com.oracle.svm.jni.access.JNIAccessibleClass
Method to inline: initializeSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: enq, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: name, java.nio.charset.Charset, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.util.TreeMap$ValueIterator, caller: iterator, java.util.TreeMap$Values
Method to inline: <init>, com.oracle.svm.core.code.CodeInfoQueryResult, caller: lookupCodeInfoQueryResult, com.oracle.svm.core.code.CodeInfoTable
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: flushBuffer, java.io.BufferedOutputStream, caller: flush, java.io.BufferedOutputStream
Method to inline: initialSizeEncoding, com.oracle.svm.core.code.CodeInfoDecoder, caller: lookupCodeInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: maxCharsPerByte, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: scale, java.lang.StringCoding, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: <init>, java.util.Collections$1, caller: singletonIterator, java.util.Collections
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: park, java.util.concurrent.locks.LockSupport
Method to inline: emptyIterator, java.util.Collections, caller: iterator, java.util.Collections$EmptySet
Method to inline: extractFI, com.oracle.svm.core.code.CodeInfoDecoder, caller: loadFrameInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: park, java.util.concurrent.locks.LockSupport
Method to inline: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntryIterator, caller: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntryIterator
Method to inline: flush, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: <init>, com.oracle.svm.core.code.ReusableTypeReader, caller: loadFrameInfo, com.oracle.svm.core.code.CodeInfoDecoder
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: position, java.nio.Buffer, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding$StringDecoder
Method to inline: position, java.nio.Buffer, caller: implFlushBuffer, sun.nio.cs.StreamEncoder
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$EntrySet, caller: entrySet, java.util.concurrent.ConcurrentSkipListMap
Method to inline: checkAccess, java.lang.ThreadGroup, caller: destroy, java.lang.ThreadGroup
Method to inline: limit, java.nio.Buffer, caller: writeBytes, sun.nio.cs.StreamEncoder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CollectionView, caller: <init>, java.util.concurrent.ConcurrentHashMap$EntrySetView
Method to inline: position, java.nio.Buffer, caller: writeBytes, sun.nio.cs.StreamEncoder
Method to inline: <init>, java.util.WeakHashMap$EntrySet, caller: entrySet, java.util.WeakHashMap
Method to inline: uncompressedReferenceSize, com.oracle.svm.core.FrameAccess, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: <init>, java.util.TreeMap$EntrySet, caller: entrySet, java.util.TreeMap
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: <init>, java.util.Properties$EntrySet, caller: entrySet, java.util.Properties
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Error
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: clear, java.nio.Buffer, caller: clear, java.nio.ByteBuffer
Method to inline: <init>, java.util.Collections$SynchronizedCollection, caller: <init>, java.util.Collections$SynchronizedSet
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: putVal, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: putVal, java.util.concurrent.ConcurrentHashMap
Method to inline: decodeSign, org.graalvm.compiler.core.common.util.AbstractTypeReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: <init>, java.util.LinkedHashMap$LinkedEntrySet, caller: entrySet, java.util.LinkedHashMap
Method to inline: flushBuffer, java.io.BufferedOutputStream, caller: write, java.io.BufferedOutputStream
Method to inline: safeToInt, org.graalvm.compiler.core.common.NumUtil, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.CodeReferenceMapDecoder
Method to inline: <init>, java.util.IdentityHashMap$EntrySet, caller: entrySet, java.util.IdentityHashMap
Method to inline: <init>, java.nio.charset.UnmappableCharacterException, caller: throwException, java.nio.charset.CoderResult
Method to inline: <init>, java.util.Hashtable$EntrySet, caller: entrySet, java.util.Hashtable
Method to inline: <init>, java.nio.charset.MalformedInputException, caller: throwException, java.nio.charset.CoderResult
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: putVal, java.util.concurrent.ConcurrentHashMap
Method to inline: flushBuffer, java.io.BufferedOutputStream, caller: write, java.io.BufferedOutputStream
Method to inline: <init>, java.util.HashMap$EntrySet, caller: entrySet, java.util.HashMap
Method to inline: hasRemaining, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: remaining, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: flip, java.nio.Buffer, caller: flip, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: position, java.nio.Buffer, caller: decode, java.nio.charset.CharsetDecoder
Method to inline: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: hasRememberedSet, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: hasRemaining, java.nio.Buffer, caller: implWrite, sun.nio.cs.StreamEncoder
Method to inline: <init>, jdk.internal.ref.Cleaner$1, caller: clean, jdk.internal.ref.Cleaner
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: remaining, java.nio.Buffer, caller: implWrite, sun.nio.cs.StreamEncoder
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: visitObjectReferenceInline, com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor
Method to inline: isLatin1, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.CharBuffer
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Exception
Method to inline: localInit, java.util.concurrent.ThreadLocalRandom, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: hasRemaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: of, java.lang.CharacterData, caller: toLowerCase, java.lang.Character
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CounterCell, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: position, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: <init>, java.util.MissingResourceException, caller: getCached, com.oracle.svm.core.jdk.LocalizationSupport
Method to inline: advanceProbe, java.util.concurrent.ThreadLocalRandom, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: computeIfAbsent, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CounterCell, caller: fullAddCount, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: computeIfAbsent, java.util.concurrent.ConcurrentHashMap
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: <init>, java.util.Collections$UnmodifiableCollection, caller: <init>, java.util.Collections$UnmodifiableSet
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: <init>, sun.util.locale.provider.TimeZoneNameProviderImpl, caller: lambda$getTimeZoneNameProvider$8, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promoteObject, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.AbstractMap$SimpleImmutableEntry, caller: entrySet, java.util.Collections$SingletonMap
Method to inline: checkPermission, java.util.spi.LocaleServiceProvider, caller: <init>, java.util.spi.LocaleServiceProvider
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: <init>, java.util.spi.LocaleServiceProvider, caller: <init>, java.util.spi.LocaleServiceProvider
Method to inline: <init>, java.util.Collections$SingletonSet, caller: singleton, java.util.Collections
Method to inline: position, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: computeIfAbsent, java.util.concurrent.ConcurrentHashMap
Method to inline: emptySet, java.util.Collections, caller: entrySet, java.util.Collections$EmptyMap
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: remaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: <init>, java.util.HashSet, caller: entrySet, java.text.AttributedString$AttributeMap
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: remaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$ForwardingNode, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: remaining, java.nio.Buffer, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: highSurrogate, java.lang.Character, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: <init>, java.text.AttributeEntry, caller: entrySet, java.text.AttributedString$AttributeMap
Method to inline: lowSurrogate, java.lang.Character, caller: encodeLoop, sun.nio.cs.UnicodeEncoder
Method to inline: emptySet, java.util.Collections, caller: createLanguageTagSet, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: <init>, java.util.HashSet, caller: createLanguageTagSet, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: isOldSpace, com.oracle.svm.core.genscavenge.Space
Method to inline: hasMoreTokens, java.util.StringTokenizer, caller: createLanguageTagSet, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: transfer, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.HashMap
Method to inline: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntrySet, caller: <init>, com.oracle.svm.core.WeakIdentityHashMap$EntrySet
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: hasRemaining, java.nio.Buffer, caller: parse, sun.nio.cs.Surrogate$Parser
Method to inline: emptyMap, java.util.Collections, caller: getFieldsByName, com.oracle.svm.jni.access.JNIAccessibleClass
Method to inline: toCodePoint, java.lang.Character, caller: parse, sun.nio.cs.Surrogate$Parser
Method to inline: charCount, java.lang.Character, caller: scanToken, java.util.StringTokenizer
Method to inline: charCount, java.lang.Character, caller: scanToken, java.util.StringTokenizer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: isLatin1, java.lang.String, caller: codePointAt, java.lang.String
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: noteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: position, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: coder, java.lang.String, caller: concat, java.lang.String
Method to inline: toCodePoint, java.lang.Character, caller: codePointAt, java.lang.StringUTF16
Method to inline: remaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: coder, java.lang.String, caller: concat, java.lang.String
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: getFixedDate, java.util.GregorianCalendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: remaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: <init>, com.oracle.svm.core.thread.ParkEventConsCell, caller: initializeOnce, com.oracle.svm.core.thread.ParkEvent
Method to inline: charCount, java.lang.Character, caller: skipDelimiters, java.util.StringTokenizer
Method to inline: requestedCharsetName, java.lang.StringCoding$StringDecoder, caller: decode, java.lang.StringCoding
Method to inline: remaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: <init>, java.util.StringTokenizer, caller: <init>, java.util.StringTokenizer
Method to inline: <init>, java.util.MissingFormatArgumentException, caller: format, java.util.Formatter
Method to inline: getSingleton, com.oracle.svm.core.thread.ParkEventList, caller: release, com.oracle.svm.core.thread.ParkEvent
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: setNext, com.oracle.svm.core.thread.ParkEventConsCell, caller: push, com.oracle.svm.core.thread.ParkEventList
Method to inline: charCount, java.lang.Character, caller: setMaxDelimCodePoint, java.util.StringTokenizer
Method to inline: <init>, java.util.MissingFormatArgumentException, caller: format, java.util.Formatter
Method to inline: charCount, java.lang.Character, caller: setMaxDelimCodePoint, java.util.StringTokenizer
Method to inline: <init>, java.lang.Number, caller: <init>, java.lang.Integer
Method to inline: getSingleton, com.oracle.svm.core.thread.ParkEventList, caller: acquire, com.oracle.svm.core.thread.ParkEvent
Method to inline: <init>, java.util.MissingFormatArgumentException, caller: format, java.util.Formatter
Method to inline: <init>, com.oracle.svm.core.posix.thread.PosixParkEvent, caller: create, com.oracle.svm.core.posix.thread.PosixParkEventFactory
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: <init>, java.lang.String, caller: concat, java.lang.String
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: get, java.util.concurrent.ConcurrentHashMap
Method to inline: requestedCharsetName, java.lang.StringCoding$StringEncoder, caller: encode, java.lang.StringCoding
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: <init>, java.lang.String, caller: concat, java.lang.String
Method to inline: of, java.lang.CharacterData, caller: toUpperCase, java.lang.Character
Method to inline: <init>, sun.nio.cs.Surrogate$Parser, caller: encodeArrayLoop, sun.nio.cs.UTF_8$Encoder
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: getNext, com.oracle.svm.core.thread.ParkEventConsCell, caller: pop, com.oracle.svm.core.thread.ParkEventList
Method to inline: lineSeparator, java.lang.System, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: getElement, com.oracle.svm.core.thread.ParkEventConsCell, caller: pop, com.oracle.svm.core.thread.ParkEventList
Method to inline: coder, java.lang.String, caller: compareTo, java.lang.String
Method to inline: coder, java.lang.String, caller: compareTo, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: compareTo, java.lang.String
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: isLatin1, java.lang.String, caller: compareTo, java.lang.String
Method to inline: print, java.util.Formatter$FormatSpecifier, caller: printInteger, java.util.Formatter$FormatSpecifier
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: copyInto, java.util.stream.AbstractPipeline
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: copyInto, java.util.stream.AbstractPipeline
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: untreeify, java.util.concurrent.ConcurrentHashMap
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$Node
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: toCodePoint, java.lang.Character, caller: parse, sun.nio.cs.Surrogate$Parser
Method to inline: maxBytesPerChar, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: scale, java.lang.StringCoding, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: getEnclosingUnalignedHeapChunkFromPointer, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: getEnclosingUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: isFieldSet, java.util.Calendar, caller: computeTime, java.util.GregorianCalendar
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: tryPresize, java.util.concurrent.ConcurrentHashMap, caller: treeifyBin, java.util.concurrent.ConcurrentHashMap
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: hasShift, org.graalvm.compiler.core.common.CompressEncoding, caller: installForwardingPointer, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: <init>, sun.util.locale.provider.DateFormatProviderImpl, caller: lambda$getDateFormatProvider$2, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: coder, java.lang.String, caller: regionMatches, java.lang.String
Method to inline: position, java.nio.Buffer, caller: encode, java.lang.StringCoding$StringEncoder
Method to inline: position, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: treeifyBin, java.util.concurrent.ConcurrentHashMap
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: <init>, sun.util.locale.provider.DecimalFormatSymbolsProviderImpl, caller: lambda$getDecimalFormatSymbolsProvider$4, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: <init>, sun.util.locale.provider.DateFormatSymbolsProviderImpl, caller: lambda$getDateFormatSymbolsProvider$3, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: print, java.util.Formatter$FormatSpecifier, caller: printInteger, java.util.Formatter$FormatSpecifier
Method to inline: <init>, sun.util.locale.provider.NumberFormatProviderImpl, caller: lambda$getNumberFormatProvider$5, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: print, java.util.Formatter$FormatSpecifier, caller: printInteger, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet6Address
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.net.Inet6Address$Inet6AddressHolder, caller: <init>, java.net.Inet6Address
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: park, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.IllegalFormatConversionException, caller: failConversion, java.util.Formatter$FormatSpecifier
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: name, java.nio.charset.Charset, caller: charsetName, java.lang.StringCoding$StringDecoder
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.US_ASCII$Encoder
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$TreeNode, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: biasExponent, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setTableForObjectUnchecked, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: lockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: setExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: <init>, sun.util.locale.provider.TimeZoneNameProviderImpl, caller: <init>, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: setState, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: nonfairTryAcquire, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: getRuntime, java.lang.Runtime, caller: loadLibrary, java.lang.System
Method to inline: <init>, java.io.InterruptedIOException, caller: <init>, java.net.SocketTimeoutException
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkNanos, java.util.concurrent.locks.LockSupport
Method to inline: singleton, com.oracle.svm.core.jdk.NativeLibrarySupport, caller: loadLibrary, java.lang.ClassLoader
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkNanos, java.util.concurrent.locks.LockSupport
Method to inline: <init>, java.io.File, caller: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: <init>, java.nio.charset.IllegalCharsetNameException, caller: checkName, java.nio.charset.Charset
Method to inline: <init>, java.io.File, caller: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: release, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: fullyRelease, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: <init>, java.nio.charset.IllegalCharsetNameException, caller: checkName, java.nio.charset.Charset
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: tryRelease, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: isFieldSet, java.util.Calendar, caller: computeFields, java.util.GregorianCalendar
Method to inline: setExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: tryRelease, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: setState, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: tryRelease, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: isLatin1, java.lang.String, caller: toLowerCase, java.lang.String
Method to inline: mapAlternativeName, java.lang.ClassLoaderHelper, caller: loadLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: putTreeVal, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: isFieldSet, java.util.Calendar, caller: computeFields, java.util.GregorianCalendar
Method to inline: getDefaultParent, java.io.UnixFileSystem, caller: <init>, java.io.File
Method to inline: getAlignment, com.oracle.svm.core.config.ObjectLayout, caller: memoryOffsetScale, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: setEntryAtIndex, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: position, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hasRemaining, java.nio.Buffer, caller: encodeBufferLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateMemory, com.oracle.svm.core.genscavenge.Space
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: isSurvivorSpace, com.oracle.svm.core.genscavenge.Space
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: position, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: limit, java.nio.Buffer, caller: encodeArrayLoop, sun.nio.cs.ISO_8859_1$Encoder
Method to inline: <init>, java.util.ArrayList, caller: split, com.oracle.svm.core.SubstrateUtil
Method to inline: add, java.util.ArrayList, caller: split, com.oracle.svm.core.SubstrateUtil
Method to inline: add, java.util.ArrayList, caller: split, com.oracle.svm.core.SubstrateUtil
Method to inline: size, java.util.ArrayList, caller: split, com.oracle.svm.core.SubstrateUtil
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.AbstractList
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: root, java.util.HashMap$TreeNode, caller: removeTreeNode, java.util.HashMap$TreeNode
Method to inline: <init>, java.util.MissingResourceException, caller: getObject, java.util.ResourceBundle
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: hasRemaining, java.nio.Buffer, caller: flushLeftoverChar, sun.nio.cs.StreamEncoder
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: doGet, java.util.concurrent.ConcurrentSkipListMap
Method to inline: remaining, java.nio.Buffer, caller: length, java.nio.CharBuffer
Method to inline: isInterrupted, java.lang.Thread, caller: interrupted, java.lang.Thread
Method to inline: flip, java.nio.Buffer, caller: flip, java.nio.CharBuffer
Method to inline: clear, java.nio.Buffer, caller: clear, java.nio.CharBuffer
Method to inline: <init>, java.nio.HeapCharBuffer, caller: allocate, java.nio.CharBuffer
Method to inline: isLatin1, java.lang.String, caller: toUpperCase, java.lang.String
Method to inline: isJulianLeapYear, sun.util.calendar.CalendarUtils, caller: computeFields, java.util.GregorianCalendar
Method to inline: isBmpCodePoint, java.lang.Character, caller: toLowerCase, java.lang.StringUTF16
Method to inline: getTable, java.util.WeakHashMap, caller: get, java.util.WeakHashMap
Method to inline: indexFor, java.util.WeakHashMap, caller: get, java.util.WeakHashMap
Method to inline: addSuppressed, java.lang.Throwable, caller: run, java.util.stream.Streams$2
Method to inline: <init>, java.lang.String, caller: toLowerCase, java.lang.StringUTF16
Method to inline: <init>, java.util.HashMap$Node, caller: <init>, java.util.LinkedHashMap$Entry
Method to inline: onMalformedInput, java.nio.charset.CharsetEncoder, caller: <init>, java.lang.StringCoding$StringEncoder
Method to inline: <init>, java.util.HashMap$Node, caller: replacementNode, java.util.HashMap
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetEncoder, caller: <init>, java.lang.StringCoding$StringEncoder
Method to inline: addSuppressed, java.lang.Throwable, caller: run, java.util.stream.Streams$1
Method to inline: getClassLoader0, java.lang.Class, caller: <init>, java.lang.StringCoding$StringEncoder
Method to inline: charCount, java.lang.Character, caller: toLowerCaseEx, java.lang.StringUTF16
Method to inline: isBmpCodePoint, java.lang.Character, caller: toLowerCaseEx, java.lang.StringUTF16
Method to inline: <init>, java.nio.HeapCharBuffer, caller: wrap, java.nio.CharBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: isBmpCodePoint, java.lang.Character, caller: toUpperCase, java.lang.StringUTF16
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: requestAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: appendAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: charset, java.nio.charset.CharsetEncoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: onMalformedInput, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: remaining, java.nio.Buffer, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: maxCharsPerByte, java.nio.charset.CharsetDecoder, caller: isLegalReplacement, java.nio.charset.CharsetEncoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: noteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: <init>, java.lang.String, caller: toUpperCase, java.lang.StringUTF16
Method to inline: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: addLibrary, com.oracle.svm.core.jdk.NativeLibrarySupport
Method to inline: tryAddWorker, java.util.concurrent.ForkJoinPool, caller: signalWork, java.util.concurrent.ForkJoinPool
Method to inline: isBmpCodePoint, java.lang.Character, caller: toChars, java.lang.Character
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isValidCodePoint, java.lang.Character, caller: toChars, java.lang.Character
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: charCount, java.lang.Character, caller: toUpperCaseEx, java.lang.StringUTF16
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isBmpCodePoint, java.lang.Character, caller: toUpperCaseEx, java.lang.StringUTF16
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: noteFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: lowSurrogate, java.lang.Character, caller: toSurrogates, java.lang.Character
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: highSurrogate, java.lang.Character, caller: toSurrogates, java.lang.Character
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, sun.nio.cs.UnicodeDecoder, caller: <init>, sun.nio.cs.UTF_16LE$Decoder
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, sun.nio.cs.UnicodeDecoder, caller: <init>, sun.nio.cs.UTF_16BE$Decoder
Method to inline: start0, java.lang.Thread, caller: start, java.lang.Thread
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, sun.nio.cs.UnicodeDecoder, caller: <init>, sun.nio.cs.UTF_16$Decoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, sun.nio.cs.UnicodeEncoder, caller: <init>, sun.nio.cs.UTF_16LE$Encoder
Method to inline: <init>, sun.nio.cs.UnicodeEncoder, caller: <init>, sun.nio.cs.UTF_16BE$Encoder
Method to inline: singleton, com.oracle.svm.jni.functions.JNIFunctionTables, caller: callOnLoadFunction, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: tableOffsetToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: initializeTableToPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: initializeTableToIndex, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: initializeTableToPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: <init>, sun.nio.cs.UnicodeEncoder, caller: <init>, sun.nio.cs.UTF_16$Encoder
Method to inline: tableOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, caller: cleanTableToPointer, com.oracle.svm.core.genscavenge.CardTable
Method to inline: <init>, sun.nio.cs.US_ASCII$Encoder, caller: newEncoder, sun.nio.cs.US_ASCII
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: setPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, caller: cleanEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable
Method to inline: <init>, sun.nio.cs.ISO_8859_1$Encoder, caller: newEncoder, sun.nio.cs.ISO_8859_1
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: setPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: <init>, java.lang.String, caller: toUnsignedString0, java.lang.Integer
Method to inline: isDaemon, java.lang.Thread, caller: prepareStartData, com.oracle.svm.core.thread.JavaThreads
Method to inline: of, java.lang.CharacterData, caller: toUpperCaseCharArray, java.lang.Character
Method to inline: trackVirtualMemory, com.oracle.svm.core.os.OSCommittedMemoryProvider, caller: allocate, com.oracle.svm.core.os.OSCommittedMemoryProvider
Method to inline: addSuppressed, java.lang.Throwable, caller: dlsym, com.oracle.svm.core.posix.PosixUtils
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXss, com.oracle.svm.core.option.XOptions
Method to inline: <init>, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1, caller: newThread, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory
Method to inline: <init>, java.nio.charset.UnmappableCharacterException, caller: throwUnmappable, java.lang.StringCoding
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: tryTerminate, java.util.concurrent.ForkJoinPool
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: root, java.util.HashMap$TreeNode, caller: putTreeVal, java.util.HashMap$TreeNode
Method to inline: lineSeparator, java.lang.System, caller: newLine, java.io.BufferedWriter
Method to inline: name, java.nio.charset.Charset, caller: encode, java.lang.StringCoding
Method to inline: name, java.nio.charset.Charset, caller: encode, java.lang.StringCoding
Method to inline: trackVirtualMemory, com.oracle.svm.core.os.OSCommittedMemoryProvider, caller: allocate, com.oracle.svm.core.os.OSCommittedMemoryProvider
Method to inline: name, java.nio.charset.Charset, caller: encode, java.lang.StringCoding
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: of, java.lang.CharacterData, caller: toUpperCaseEx, java.lang.Character
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: charCount, java.lang.Character, caller: isFinalCased, java.lang.ConditionalSpecialCasing
Method to inline: charCount, java.lang.Character, caller: isFinalCased, java.lang.ConditionalSpecialCasing
Method to inline: toCodePoint, java.lang.Character, caller: encodeUTF8_UTF16, java.lang.StringCoding
Method to inline: addSuppressed, java.lang.Throwable, caller: findBuiltinSymbol, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: charCount, java.lang.Character, caller: isFinalCased, java.lang.ConditionalSpecialCasing
Method to inline: getTimeInMillis, java.util.Calendar, caller: getActualMaximum, java.util.GregorianCalendar
Method to inline: init, org.graalvm.compiler.options.OptionKey$Lazy, caller: getName, org.graalvm.compiler.options.OptionKey
Method to inline: <init>, java.util.HashMap$Node, caller: newNode, java.util.HashMap
Method to inline: getName, org.graalvm.compiler.options.OptionDescriptor, caller: getName, org.graalvm.compiler.options.OptionKey
Method to inline: of, java.lang.CharacterData, caller: getType, java.lang.Character
Method to inline: <init>, java.nio.charset.UnsupportedCharsetException, caller: forName, java.nio.charset.Charset
Method to inline: canEncode, java.lang.StringLatin1, caller: toUpperCase, java.lang.StringLatin1
Method to inline: <init>, java.util.concurrent.AbstractExecutorService, caller: <init>, java.util.concurrent.ForkJoinPool
Method to inline: name, java.nio.charset.Charset, caller: charsetName, java.lang.StringCoding$StringEncoder
Method to inline: getRuntime, java.lang.Runtime, caller: <init>, java.util.concurrent.ForkJoinPool
Method to inline: min, java.io.BufferedWriter, caller: write, java.io.BufferedWriter
Method to inline: getChars, java.lang.String, caller: write, java.io.BufferedWriter
Method to inline: doLoad, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary, caller: load, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary
Method to inline: addSuppressed, java.lang.Throwable, caller: dlopen, com.oracle.svm.core.posix.PosixUtils
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.lang.String, caller: toUpperCase, java.lang.StringLatin1
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getModifiers, java.lang.Class, caller: newInstance, java.lang.reflect.Constructor
Method to inline: isLatin1, java.lang.String, caller: indexOf, java.lang.String
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: popUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isBmpCodePoint, java.lang.Character, caller: toUpperCaseEx, java.lang.StringLatin1
Method to inline: <init>, com.oracle.svm.core.jdk.GetCallerClassVisitor, caller: getCallerClass, com.oracle.svm.core.jdk.StackTraceUtils
Method to inline: <init>, java.lang.String, caller: <init>, java.lang.String
Method to inline: isValidCodePoint, java.lang.Character, caller: indexOfSupplementary, java.lang.StringUTF16
Method to inline: highSurrogate, java.lang.Character, caller: indexOfSupplementary, java.lang.StringUTF16
Method to inline: lowSurrogate, java.lang.Character, caller: indexOfSupplementary, java.lang.StringUTF16
Method to inline: <init>, com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary, caller: createLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: isBuiltinLibrary, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: isBuiltinLibrary, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: isBuiltinLibrary, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: getInstanceSize, com.oracle.svm.core.hub.LayoutEncoding, caller: getSizeFromObject, com.oracle.svm.core.hub.LayoutEncoding
Method to inline: ordinal, java.lang.Enum, caller: getDefault, java.util.Locale
Method to inline: singleton, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: isBuiltinLibrary, com.oracle.svm.jni.JNILibraryInitializer
Method to inline: getComponentType, java.lang.Class, caller: getTypeName, java.lang.Class
Method to inline: isLatin1, java.lang.String, caller: substring, java.lang.String
Method to inline: isNamed, java.lang.Module, caller: newIllegalAccessException, jdk.internal.reflect.Reflection
Method to inline: isInvalid, java.io.File, caller: getCanonicalPath, java.io.File
Method to inline: testUnalignedBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: isUnalignedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: logStream, com.oracle.svm.core.log.Log, caller: parse, com.oracle.svm.core.option.XOptions
Method to inline: isNamed, java.lang.Module, caller: newIllegalAccessException, jdk.internal.reflect.Reflection
Method to inline: valueOf, java.util.Formatter$Flags, caller: contains, java.util.Formatter$Flags
Method to inline: getObjectIndex, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: dirtyCardForObjectOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: replace, java.lang.String, caller: handleGetObject, sun.util.resources.BreakIteratorResourceBundle
Method to inline: valueOf, java.util.Formatter$Flags, caller: contains, java.util.Formatter$Flags
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, caller: dirtyEntryAtIndex, com.oracle.svm.core.genscavenge.CardTable
Method to inline: isDirtyEntry, com.oracle.svm.core.genscavenge.CardTable, caller: isDirtyEntryAtIndexUnchecked, com.oracle.svm.core.genscavenge.CardTable
Method to inline: addSuppressed, java.lang.Throwable, caller: handleGetObject, sun.util.resources.BreakIteratorResourceBundle
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.CardTable, caller: readEntryAtIndexUnchecked, com.oracle.svm.core.genscavenge.CardTable
Method to inline: <init>, java.io.ExpiringCache$Entry, caller: put, java.io.ExpiringCache
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: isNamed, java.lang.Module, caller: newIllegalAccessException, jdk.internal.reflect.Reflection
Method to inline: shift, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.String, caller: codePointBefore, java.lang.String
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: canEncode, java.lang.StringLatin1, caller: insert, java.lang.AbstractStringBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: insert, java.lang.AbstractStringBuilder
Method to inline: <init>, java.lang.Throwable, caller: <init>, java.lang.Error
Method to inline: getRuntime, java.lang.Runtime, caller: exit, java.lang.System
Method to inline: setSign, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, caller: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal
Method to inline: beforeHalt, java.lang.Shutdown, caller: exit, java.lang.Shutdown
Method to inline: toCodePoint, java.lang.Character, caller: codePointBefore, java.lang.StringUTF16
Method to inline: <init>, java.io.ByteArrayInputStream, caller: getResourceAsStream, java.lang.Module
Method to inline: get, com.oracle.svm.core.util.LazyFinalReference, caller: getPackageName, java.lang.Class
Method to inline: isNamed, java.lang.Module, caller: implIsExportedOrOpen, java.lang.Module
Method to inline: isReflectivelyExportedOrOpen, java.lang.Module, caller: implIsExportedOrOpen, java.lang.Module
Method to inline: userDir, com.oracle.svm.core.jdk.SystemPropertiesSupport, caller: getUserDir, com.oracle.svm.core.jdk.UserDirAccessors
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: isNamed, java.lang.Module, caller: allows, java.lang.Module
Method to inline: <init>, java.util.IdentityHashMap$KeySet, caller: keySet, java.util.IdentityHashMap
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRemainderKnuth, java.math.BigInteger
Method to inline: emptySet, java.util.Collections, caller: keySet, java.util.Collections$EmptyMap
Method to inline: isLatin1, java.lang.String, caller: lastIndexOf, java.lang.String
Method to inline: of, java.lang.CharacterData, caller: digit, java.lang.Character
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigInteger
Method to inline: updateTime, java.util.Calendar, caller: complete, java.util.Calendar
Method to inline: isProtected, java.lang.reflect.Modifier, caller: verifyAccess, java.lang.reflect.AccessibleObject
Method to inline: slowVerifyAccess, java.lang.reflect.AccessibleObject, caller: verifyAccess, java.lang.reflect.AccessibleObject
Method to inline: setTimeZone, java.util.Calendar, caller: setTimeZone, java.util.GregorianCalendar
Method to inline: isValidCodePoint, java.lang.Character, caller: lastIndexOfSupplementary, java.lang.StringUTF16
Method to inline: highSurrogate, java.lang.Character, caller: lastIndexOfSupplementary, java.lang.StringUTF16
Method to inline: lowSurrogate, java.lang.Character, caller: lastIndexOfSupplementary, java.lang.StringUTF16
Method to inline: isNamed, java.lang.Module, caller: logIfExportedForIllegalAccess, java.lang.reflect.AccessibleObject
Method to inline: isNamed, java.lang.Module, caller: logIfExportedForIllegalAccess, java.lang.reflect.AccessibleObject
Method to inline: pinDayOfMonth, java.util.GregorianCalendar, caller: add, java.util.GregorianCalendar
Method to inline: canEncode, java.lang.StringLatin1, caller: lastIndexOf, java.lang.StringLatin1
Method to inline: isLatin1, java.lang.String, caller: trim, java.lang.String
Method to inline: <init>, java.math.MutableBigInteger, caller: divideKnuth, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideKnuth, java.math.MutableBigInteger
Method to inline: fixAfterDeletion, java.util.TreeMap, caller: deleteEntry, java.util.TreeMap
Method to inline: <init>, java.math.MutableBigInteger, caller: divideKnuth, java.math.MutableBigInteger
Method to inline: <init>, java.lang.String, caller: trim, java.lang.StringUTF16
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, caller: getObjectIndex, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: testUnalignedBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: isUnalignedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: <init>, jdk.internal.module.IllegalAccessLogger$Usage, caller: log, jdk.internal.module.IllegalAccessLogger
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: getMaxSurvivorSpaces, com.oracle.svm.core.genscavenge.HeapPolicy, caller: isYoungSpace, com.oracle.svm.core.genscavenge.Space
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: multBy10, jdk.internal.math.FDBigInteger
Method to inline: canEncode, java.lang.StringLatin1, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: fixAfterDeletion, java.util.TreeMap, caller: deleteEntry, java.util.TreeMap
Method to inline: hasShift, org.graalvm.compiler.core.common.CompressEncoding, caller: getForwardedObject, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: testForwardedHeaderBit, com.oracle.svm.core.genscavenge.ObjectHeaderImpl, caller: isForwardedHeader, com.oracle.svm.core.genscavenge.ObjectHeaderImpl
Method to inline: pinDayOfMonth, java.util.GregorianCalendar, caller: add, java.util.GregorianCalendar
Method to inline: size, jdk.internal.math.FDBigInteger, caller: addAndCmp, jdk.internal.math.FDBigInteger
Method to inline: getTable, java.util.WeakHashMap, caller: put, java.util.WeakHashMap
Method to inline: size, jdk.internal.math.FDBigInteger, caller: addAndCmp, jdk.internal.math.FDBigInteger
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: indexFor, java.util.WeakHashMap, caller: put, java.util.WeakHashMap
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: getHashThreshold, org.graalvm.collections.EconomicMapImpl, caller: put, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.util.WeakHashMap$Entry, caller: put, java.util.WeakHashMap
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: createHash, org.graalvm.collections.EconomicMapImpl
Method to inline: getHashThreshold, org.graalvm.collections.EconomicMapImpl, caller: createHash, org.graalvm.collections.EconomicMapImpl
Method to inline: getTable, java.util.WeakHashMap, caller: resize, java.util.WeakHashMap
Method to inline: newTable, java.util.WeakHashMap, caller: resize, java.util.WeakHashMap
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: putHashEntry, org.graalvm.collections.EconomicMapImpl
Method to inline: indexFor, java.util.WeakHashMap, caller: transfer, java.util.WeakHashMap
Method to inline: decode, com.oracle.svm.jni.JNIGlobalHandles, caller: getObject, com.oracle.svm.jni.JNIGlobalHandles
Method to inline: position, java.nio.Buffer, caller: charAt, java.nio.CharBuffer
Method to inline: asS4, org.graalvm.compiler.core.common.util.TypeConversion, caller: decodeBci, com.oracle.svm.core.code.FrameInfoDecoder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: charAt, java.lang.AbstractStringBuilder
Method to inline: toCodePoint, java.lang.Character, caller: getPrevious, sun.text.RuleBasedBreakIterator
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: putHashEntry, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, caller: walk, java.lang.StackWalker
Method to inline: invalidate, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, caller: walk, java.lang.StackWalker
Method to inline: invalidate, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator, caller: walk, java.lang.StackWalker
Method to inline: size, jdk.internal.math.FDBigInteger, caller: addAndCmp, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: <init>, java.util.stream.AbstractPipeline, caller: <init>, java.util.stream.ReferencePipeline
Method to inline: <init>, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: toCodePoint, java.lang.Character, caller: getCurrent, sun.text.RuleBasedBreakIterator
Method to inline: size, jdk.internal.math.FDBigInteger, caller: add, jdk.internal.math.FDBigInteger
Method to inline: size, jdk.internal.math.FDBigInteger, caller: add, jdk.internal.math.FDBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: setValue, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: add, jdk.internal.math.FDBigInteger
Method to inline: getOffsetFromId, com.oracle.svm.jni.access.JNIAccessibleField, caller: getFieldOffsetFromId, com.oracle.svm.jni.JNIGeneratedMethodSupport
Method to inline: <init>, java.util.HashSet, caller: keySet, java.util.ResourceBundle
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideMagnitude, java.math.MutableBigInteger
Method to inline: current, sun.text.RuleBasedBreakIterator$SafeCharIterator, caller: setIndex, sun.text.RuleBasedBreakIterator$SafeCharIterator
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: characteristics, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: toStreamFlags, java.util.stream.StreamOpFlag, caller: characteristics, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuilder
Method to inline: toCharacteristics, java.util.stream.StreamOpFlag, caller: characteristics, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: current, java.text.StringCharacterIterator, caller: setIndex, java.text.StringCharacterIterator
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: printStackTrace, java.lang.Throwable, caller: run, jdk.internal.ref.Cleaner$1
Method to inline: get, com.oracle.svm.core.util.LazyFinalReference, caller: getProtectionDomain, java.lang.Class
Method to inline: lineSeparator, java.lang.System, caller: loudWarning, jdk.internal.module.IllegalAccessLogger
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXmn, com.oracle.svm.core.option.XOptions
Method to inline: <init>, java.util.concurrent.ForkJoinWorkerThread, caller: run, java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXmx, com.oracle.svm.core.option.XOptions
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: isReflectivelyExportedOrOpen, java.lang.Module, caller: isReflectivelyExported, java.lang.Module
Method to inline: current, java.text.StringCharacterIterator, caller: first, java.text.StringCharacterIterator
Method to inline: size, jdk.internal.math.FDBigInteger, caller: quoRemIteration, jdk.internal.math.FDBigInteger
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: size, jdk.internal.math.FDBigInteger, caller: quoRemIteration, jdk.internal.math.FDBigInteger
Method to inline: getComponentType, java.lang.Class, caller: checkPrimitiveArray, jdk.internal.misc.Unsafe
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: isPrimitive, com.oracle.svm.core.hub.LayoutEncoding, caller: isPrimitive, java.lang.Class
Method to inline: isPublic, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isPublic, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: checkNativeAddress, jdk.internal.misc.Unsafe, caller: checkPointer, jdk.internal.misc.Unsafe
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: isPrivate, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isProtected, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: isPrivate, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.net.NetworkInterface$1, caller: <clinit>, java.net.NetworkInterface
Method to inline: <init>, sun.security.action.GetPropertyAction, caller: <clinit>, java.net.InetAddress
Method to inline: isProtected, java.lang.reflect.Modifier, caller: verifyMemberAccess, jdk.internal.reflect.Reflection
Method to inline: setDaemon, java.lang.Thread, caller: registerWorker, java.util.concurrent.ForkJoinPool
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Index, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: getDefault, java.net.DefaultInterface, caller: <clinit>, java.net.NetworkInterface
Method to inline: getIndex, java.net.NetworkInterface, caller: <clinit>, java.net.NetworkInterface
Method to inline: getUnsafe, jdk.internal.misc.Unsafe, caller: <clinit>, java.net.Inet6Address
Method to inline: <init>, java.net.InetAddress$1, caller: <clinit>, java.net.InetAddress
Method to inline: getSuperclass, java.lang.Class, caller: isSubclassOf, jdk.internal.reflect.Reflection
Method to inline: addCount, java.util.concurrent.ConcurrentSkipListMap, caller: doPut, java.util.concurrent.ConcurrentSkipListMap
Method to inline: ordinal, java.lang.Enum, caller: getPlatformKind, jdk.vm.ci.amd64.AMD64
Method to inline: <init>, java.io.ObjectStreamField, caller: <init>, java.io.ObjectStreamField
Method to inline: getJavaIOFileDescriptorAccess, jdk.internal.misc.SharedSecrets, caller: <clinit>, sun.nio.ch.FileChannelImpl
Method to inline: getClassLoader0, java.lang.Class, caller: getClassLoader, java.lang.Class
Method to inline: <init>, sun.nio.ch.IOUtil$1, caller: <clinit>, sun.nio.ch.IOUtil
Method to inline: <init>, java.util.concurrent.ForkJoinPool$WorkQueue, caller: registerWorker, java.util.concurrent.ForkJoinPool
Method to inline: load, sun.nio.ch.IOUtil, caller: <clinit>, sun.nio.ch.FileChannelImpl
Method to inline: getModifiers, java.lang.Class, caller: getClassAccessFlags, jdk.internal.reflect.Reflection
Method to inline: load, sun.nio.ch.IOUtil, caller: <clinit>, sun.nio.ch.NativeThread
Method to inline: <init>, java.net.InetAddress$2, caller: <clinit>, java.net.InetAddress
Method to inline: setJavaNetInetAddressAccess, jdk.internal.misc.SharedSecrets, caller: <clinit>, java.net.InetAddress
Method to inline: <init>, sun.nio.fs.UnixNativeDispatcher$1, caller: <clinit>, sun.nio.fs.UnixNativeDispatcher
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListSet, caller: <clinit>, java.net.InetAddress
Method to inline: <init>, java.util.GregorianCalendar, caller: <init>, java.util.GregorianCalendar
Method to inline: getUnsafe, jdk.internal.misc.Unsafe, caller: <clinit>, java.net.InetAddress
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.net.InetAddress$HostsFileNameService, caller: createNameService, java.net.InetAddress
Method to inline: <init>, java.net.InetAddress$PlatformNameService, caller: createNameService, java.net.InetAddress
Method to inline: current, java.util.concurrent.ThreadLocalRandom, caller: longAccumulate, java.util.concurrent.atomic.Striped64
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.util.concurrent.atomic.Striped64$Cell, caller: longAccumulate, java.util.concurrent.atomic.Striped64
Method to inline: isEnabled, com.oracle.svm.core.log.RealLog, caller: logException, com.oracle.svm.core.graal.snippets.CEntryPointSnippets
Method to inline: <init>, java.io.StringWriter, caller: logException, com.oracle.svm.core.graal.snippets.CEntryPointSnippets
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.lang.Throwable$WrappedPrintWriter, caller: printStackTrace, java.lang.Throwable
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.io.PrintWriter, caller: <init>, java.io.PrintWriter
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfMulPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, java.util.concurrent.atomic.Striped64$Cell, caller: longAccumulate, java.util.concurrent.atomic.Striped64
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuffer
Method to inline: checkAccess, java.lang.Thread, caller: setName, java.lang.Thread
Method to inline: singleton, com.oracle.svm.core.option.XOptions, caller: getXms, com.oracle.svm.core.option.XOptions
Method to inline: poll, java.util.concurrent.ForkJoinPool$WorkQueue, caller: cancelAll, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: hasHashArray, org.graalvm.collections.EconomicMapImpl, caller: removeKey, org.graalvm.collections.EconomicMapImpl
Method to inline: fromTarget, com.oracle.svm.core.thread.JavaThreads, caller: setNativeName, java.lang.Thread
Method to inline: mix64, java.util.concurrent.ThreadLocalRandom, caller: localInit, java.util.concurrent.ThreadLocalRandom
Method to inline: remove, org.graalvm.collections.EconomicMapImpl, caller: removeKey, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: isZero, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: get, java.lang.ref.Reference, caller: getKey, com.oracle.svm.core.WeakIdentityHashMap$Entry
Method to inline: isZero, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.BigInteger
Method to inline: cancelIgnoringExceptions, java.util.concurrent.ForkJoinTask, caller: cancelAll, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: isSoftDotted, java.lang.ConditionalSpecialCasing, caller: isAfterSoftDotted, java.lang.ConditionalSpecialCasing
Method to inline: abnormalCompletion, java.util.concurrent.ForkJoinTask, caller: cancel, java.util.concurrent.ForkJoinTask
Method to inline: getHashThreshold, org.graalvm.collections.EconomicMapImpl, caller: compressLarge, org.graalvm.collections.EconomicMapImpl
Method to inline: charCount, java.lang.Character, caller: isAfterSoftDotted, java.lang.ConditionalSpecialCasing
Method to inline: acquireFence, java.lang.invoke.VarHandle, caller: findPredecessor, java.util.concurrent.ConcurrentSkipListMap
Method to inline: <init>, java.util.Collections$UnmodifiableMap, caller: unmodifiableMap, java.util.Collections
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRemainderBurnikelZiegler, java.math.MutableBigInteger
Method to inline: size, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: getCC, sun.text.normalizer.NormalizerImpl, caller: getCombiningClass, sun.text.normalizer.Norm2AllModes$Normalizer2WithImpl
Method to inline: size, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getAllocationBeforePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy, caller: samplePhysicalMemorySize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: addSuppressed, java.lang.Throwable, caller: setNativeName, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: support, com.oracle.svm.core.heap.PhysicalMemory, caller: size, com.oracle.svm.core.heap.PhysicalMemory
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$CollisionLink, caller: findAndRemoveWithCollision, org.graalvm.collections.EconomicMapImpl
Method to inline: hasSize, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl, caller: size, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: getPthreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: currentJavaThreadInitialized, com.oracle.svm.core.thread.JavaThreads, caller: size, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl
Method to inline: toTarget, com.oracle.svm.core.posix.thread.PosixJavaThreads, caller: hasThreadIdentifier, com.oracle.svm.core.posix.thread.PosixJavaThreads
Method to inline: <init>, java.lang.String, caller: toString, java.lang.Integer
Method to inline: getComponentType, java.lang.Class, caller: reflectiveTypeCheck, java.lang.invoke.VarHandleObjects$Array
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: charCount, java.lang.Character, caller: isMoreAbove, java.lang.ConditionalSpecialCasing
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.concurrent.ConcurrentSkipListMap
Method to inline: charCount, java.lang.Character, caller: isMoreAbove, java.lang.ConditionalSpecialCasing
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl$2, caller: getEntries, org.graalvm.collections.EconomicMapImpl
Method to inline: charCount, java.lang.Character, caller: isAfterI, java.lang.ConditionalSpecialCasing
Method to inline: isZero, java.math.MutableBigInteger, caller: addShifted, java.math.MutableBigInteger
Method to inline: <init>, java.util.concurrent.ConcurrentSkipListMap$Node, caller: unlinkNode, java.util.concurrent.ConcurrentSkipListMap
Method to inline: intercept, org.graalvm.collections.EconomicMapImpl, caller: create, org.graalvm.collections.EconomicMapImpl
Method to inline: nonNull, java.util.Objects, caller: getDisplayName, sun.util.locale.provider.TimeZoneNameProviderImpl
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl, caller: <init>, org.graalvm.collections.EconomicMapImpl
Method to inline: charCount, java.lang.Character, caller: isBeforeDot, java.lang.ConditionalSpecialCasing
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: runWorker, java.util.concurrent.ForkJoinPool
Method to inline: charCount, java.lang.Character, caller: isBeforeDot, java.lang.ConditionalSpecialCasing
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: <init>, org.graalvm.collections.EconomicMapImpl
Method to inline: <init>, java.lang.Thread, caller: <init>, java.lang.Thread
Method to inline: init, org.graalvm.collections.EconomicMapImpl, caller: <init>, org.graalvm.collections.EconomicMapImpl
Method to inline: nonNull, java.util.Objects, caller: getDisplayNameArray, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: <init>, java.io.File, caller: <init>, java.io.FileInputStream
Method to inline: getThreadGroup, java.lang.Thread, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: getLanguage, java.util.Locale
Method to inline: toTarget, com.oracle.svm.core.thread.JavaThreads, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.io.InputStream, caller: <init>, java.io.FileInputStream
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: mult, jdk.internal.math.FDBigInteger
Method to inline: isInvalid, java.io.File, caller: <init>, java.io.FileInputStream
Method to inline: canEncode, java.lang.StringLatin1, caller: toLowerCase, java.lang.StringLatin1
Method to inline: <init>, java.lang.String, caller: toLowerCase, java.lang.StringLatin1
Method to inline: <init>, java.io.FileDescriptor, caller: <init>, java.io.FileInputStream
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: leftShift, jdk.internal.math.FDBigInteger
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: safeRightShift, java.math.MutableBigInteger, caller: divide2n1n, java.math.MutableBigInteger
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: isEmpty, org.graalvm.collections.EconomicMapImpl
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: leftShift, jdk.internal.math.FDBigInteger
Method to inline: keepLower, java.math.MutableBigInteger, caller: divide2n1n, java.math.MutableBigInteger
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.math.MutableBigInteger, caller: divide2n1n, java.math.MutableBigInteger
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isBmpCodePoint, java.lang.Character, caller: toLowerCaseEx, java.lang.StringLatin1
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkUntil, java.util.concurrent.locks.LockSupport
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: register, java.io.FileCleanable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.io.FileCleanable, caller: register, java.io.FileCleanable
Method to inline: setBlocker, java.util.concurrent.locks.LockSupport, caller: parkUntil, java.util.concurrent.locks.LockSupport
Method to inline: logStream, com.oracle.svm.core.log.Log, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: setValue, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: safeRightShift, java.math.MutableBigInteger, caller: divide3n2n, java.math.MutableBigInteger
Method to inline: <init>, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: logStream, com.oracle.svm.core.log.Log, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: getError, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: setValue, java.util.TreeMap$Entry, caller: put, java.util.TreeMap
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getError, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: parseOptionAtRuntime, com.oracle.svm.core.option.RuntimeOptionParser
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: <init>, jdk.internal.ref.PhantomCleanable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: <init>, jdk.internal.ref.PhantomCleanable
Method to inline: isDaemon, java.lang.Thread, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getPriority, java.lang.Thread, caller: initializeNewThread, com.oracle.svm.core.thread.JavaThreads
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: pushUnusedAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: nextLocalTask, java.util.concurrent.ForkJoinPool$WorkQueue, caller: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: getZapConsumedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: cleanAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: getAdapterPreference, sun.util.locale.provider.LocaleProviderAdapter, caller: deriveFallbackName, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: getCollectOnAllocationPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: checkAccess, java.lang.Thread, caller: setPriority, java.lang.Thread
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getThreadGroup, java.lang.Thread, caller: setPriority, java.lang.Thread
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getMaxPriority, java.lang.ThreadGroup, caller: setPriority, java.lang.Thread
Method to inline: getMaxPriority, java.lang.ThreadGroup, caller: setPriority, java.lang.Thread
Method to inline: poll, java.util.concurrent.ForkJoinPool$WorkQueue, caller: topLevelExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: setPriority0, java.lang.Thread, caller: setPriority, java.lang.Thread
Method to inline: getPolicyNoCheck, java.security.Policy, caller: run, java.security.ProtectionDomain$1
Method to inline: getValue, java.util.TreeMap$Entry, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: <init>, java.security.Permissions, caller: allPermissions, com.oracle.svm.core.jdk.AllPermissionsPolicy
Method to inline: getHelp, org.graalvm.compiler.options.OptionDescriptor, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: safeRightShift, java.math.MutableBigInteger, caller: divide3n2n, java.math.MutableBigInteger
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: getDefaultValue, org.graalvm.compiler.options.OptionKey, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: keepAlignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.util.ArrayList, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: ones, java.math.MutableBigInteger, caller: divide3n2n, java.math.MutableBigInteger
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfPow52, jdk.internal.math.FDBigInteger
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfPow52, jdk.internal.math.FDBigInteger
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: getOldUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: add, java.util.ArrayList, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: valueOfPow2, jdk.internal.math.FDBigInteger
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: getYoungUsedChunkBytes, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: isEmpty, java.util.ArrayList, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: isFirstIsolate, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: initializeBuiltinLibraries, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: getOptionValueType, org.graalvm.compiler.options.OptionDescriptor, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: loadZipLibrary, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport, caller: initializeBuiltinLibraries, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: getUnalignedHeapOverhead, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: getUnalignedChunkBytes, com.oracle.svm.core.genscavenge.Space
Method to inline: <init>, java.security.Permissions$1, caller: getPermissionCollection, java.security.Permissions
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: getEdenChunkUsedBytes, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: isFirstIsolate, com.oracle.svm.core.jdk.PlatformNativeLibrarySupport, caller: loadNetLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.concurrent.ConcurrentHashMap
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: setColor, java.util.TreeMap, caller: fixAfterInsertion, java.util.TreeMap
Method to inline: singleton, com.oracle.svm.core.jdk.NativeLibrarySupport, caller: loadNetLibrary, com.oracle.svm.core.posix.PosixNativeLibrarySupport
Method to inline: <init>, java.io.FileInputStream$AltFinalizer, caller: getFinalizer, java.io.FileInputStream
Method to inline: isExceptionalStatus, java.util.concurrent.ForkJoinTask, caller: internalPropagateException, java.util.concurrent.CountedCompleter
Method to inline: getSuperclass, java.lang.Class, caller: getFinalizer, java.io.FileInputStream
Method to inline: <init>, java.util.concurrent.ForkJoinTask$ExceptionNode, caller: recordExceptionalCompletion, java.util.concurrent.ForkJoinTask
Method to inline: <init>, java.io.ByteArrayInputStream, caller: getResourceAsStream, java.lang.Class
Method to inline: abnormalCompletion, java.util.concurrent.ForkJoinTask, caller: recordExceptionalCompletion, java.util.concurrent.ForkJoinTask
Method to inline: addSuppressed, java.lang.Throwable, caller: initializeEncoding, com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport
Method to inline: getName, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: replace, java.lang.String, caller: resolveName, java.lang.Class
Method to inline: ordinal, java.lang.Enum, caller: add, java.util.RegularEnumSet
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getSuperclass, java.lang.Class, caller: typeCheck, java.util.EnumSet
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: compute, java.util.stream.ForEachOps$ForEachTask
Method to inline: getReturnType, java.lang.reflect.Method, caller: searchMethods, java.lang.Class
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: compute, java.util.stream.ForEachOps$ForEachTask
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: bitCount, java.lang.Integer, caller: multiplyByInt, java.math.BigInteger
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewArray, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getX, SimpleMethods, caller: getAverage, SimpleMethods
Method to inline: getY, SimpleMethods, caller: getAverage, SimpleMethods
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.util.LinkedList$Node, caller: linkLast, java.util.LinkedList
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: next, sun.nio.ch.Util$BufferCache, caller: removeFirst, sun.nio.ch.Util$BufferCache
Method to inline: ordinal, java.lang.Enum, caller: add, java.util.JumboEnumSet
Method to inline: <init>, java.util.ArrayList, caller: verifyHostSupportsArchitecture, com.oracle.svm.core.amd64.AMD64CPUFeatureAccess
Method to inline: <init>, java.text.MessageFormat, caller: format, java.text.MessageFormat
Method to inline: add, java.util.ArrayList, caller: verifyHostSupportsArchitecture, com.oracle.svm.core.amd64.AMD64CPUFeatureAccess
Method to inline: <init>, java.util.ArrayList, caller: attach, java.io.FileDescriptor
Method to inline: <init>, java.text.FieldPosition, caller: format, java.text.Format
Method to inline: setMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: fork, java.util.concurrent.ForkJoinTask
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: localInit, java.util.concurrent.ThreadLocalRandom, caller: externalPush, java.util.concurrent.ForkJoinPool
Method to inline: <init>, java.util.ListResourceBundle, caller: <init>, sun.text.resources.BreakIteratorInfo
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, caller: <init>, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMinimumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: setThreshold, java.lang.ThreadLocal$ThreadLocalMap, caller: <init>, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: <init>, java.util.concurrent.ForkJoinPool$WorkQueue, caller: externalPush, java.util.concurrent.ForkJoinPool
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: lineSeparator, java.lang.System, caller: lambda$log$4, jdk.internal.module.IllegalAccessLogger
Method to inline: advanceProbe, java.util.concurrent.ThreadLocalRandom, caller: externalPush, java.util.concurrent.ForkJoinPool
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, caller: set, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: rehash, java.lang.ThreadLocal$ThreadLocalMap, caller: set, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: currentJavaThreadInitialized, com.oracle.svm.core.thread.JavaThreads, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getName, java.lang.Module, caller: isJavaBase, jdk.internal.module.IllegalAccessLogger
Method to inline: <init>, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: get, java.lang.ref.Reference, caller: resize, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setThreshold, java.lang.ThreadLocal$ThreadLocalMap, caller: resize, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: possibleCollectionEpilogue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigInteger
Method to inline: releaseFence, java.lang.invoke.VarHandle, caller: growArray, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.math.BigDecimal, caller: setScale, java.math.BigDecimal
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersReport, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.math.BigDecimal, caller: setScale, java.math.BigDecimal
Method to inline: <init>, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation, caller: enqueueBlockingNoSafepoint, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: fullFence, java.lang.invoke.VarHandle, caller: push, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: resumeRecurringCallback, com.oracle.svm.core.thread.ThreadingSupportImpl, caller: maybeProcessCurrentlyPending, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: processCleaners, com.oracle.svm.core.heap.ReferenceHandler
Method to inline: lineSeparator, java.lang.System, caller: printOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: get, java.lang.ref.Reference, caller: expungeStaleEntries, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachTask
Method to inline: get, java.lang.ref.Reference, caller: expungeStaleEntry, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: noteFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: setMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getZapProducedHeapChunks, com.oracle.svm.core.genscavenge.HeapPolicy, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: get, java.lang.ref.Reference, caller: cleanSomeSlots, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: produceUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: get, java.lang.ref.Reference, caller: replaceStaleEntry, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getAlignment, com.oracle.svm.core.config.ObjectLayout, caller: getChunkSizeForObject, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: lineSeparator, java.lang.System, caller: wrap, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: get, java.lang.ref.Reference, caller: replaceStaleEntry, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: addFinalRefCount, jdk.internal.misc.VM, caller: enqueue, java.lang.ref.ReferenceQueue
Method to inline: replace, java.lang.AbstractStringBuilder, caller: replace, java.lang.StringBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.util.RegularEnumSet, caller: noneOf, java.util.EnumSet
Method to inline: <init>, java.lang.ThreadLocal$ThreadLocalMap$Entry, caller: replaceStaleEntry, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getMaximumYoungGenerationSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.util.JumboEnumSet, caller: noneOf, java.util.EnumSet
Method to inline: getCoder, java.lang.AbstractStringBuilder, caller: putStringAt, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.stream.StreamSpliterators$SliceSpliterator, caller: <init>, java.util.stream.StreamSpliterators$SliceSpliterator$OfRef
Method to inline: coder, java.lang.String, caller: putStringAt, java.lang.AbstractStringBuilder
Method to inline: <init>, java.math.BigDecimal, caller: toBigDecimal, java.math.MutableBigInteger
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: putStringAt, java.lang.AbstractStringBuilder
Method to inline: getJavaLangAccess, jdk.internal.misc.SharedSecrets, caller: getUniverse, java.util.EnumSet
Method to inline: k, com.oracle.svm.core.genscavenge.HeapPolicy, caller: m, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: k, com.oracle.svm.core.genscavenge.HeapPolicy, caller: m, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: support, com.oracle.svm.core.heap.PhysicalMemory, caller: hasSize, com.oracle.svm.core.heap.PhysicalMemory
Method to inline: hasSize, com.oracle.svm.core.posix.linux.LinuxPhysicalMemory$PhysicalMemorySupportImpl, caller: hasSize, com.oracle.svm.core.heap.PhysicalMemory
Method to inline: get, com.oracle.svm.core.util.LazyFinalReference, caller: getEnumConstantsShared, java.lang.Class
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, caller: <init>, java.util.stream.StreamSpliterators$WrappingSpliterator
Method to inline: <init>, sun.nio.ch.Util$BufferCache, caller: initialValue, sun.nio.ch.Util$1
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.IdentityHashMap
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: init, java.util.IdentityHashMap, caller: <init>, java.util.IdentityHashMap
Method to inline: isZero, java.math.MutableBigInteger, caller: isOdd, java.math.MutableBigInteger
Method to inline: <init>, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, caller: initialValue, jdk.internal.math.FloatingDecimal$1
Method to inline: <init>, java.math.BigDecimal$StringBuilderHelper, caller: initialValue, java.math.BigDecimal$1
Method to inline: getComponentHub, java.lang.Class, caller: newMultiArrayRecursion, com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets
Method to inline: <init>, java.util.Spliterators$LongArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: <init>, java.lang.StringCoding$Result, caller: initialValue, java.lang.StringCoding$1
Method to inline: coder, java.lang.String, caller: lastIndexOf, java.lang.String
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getComponentHub, java.lang.Class, caller: newMultiArrayRecursion, com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: get, java.lang.ref.Reference, caller: getEntry, java.lang.ThreadLocal$ThreadLocalMap
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: <init>, java.math.MutableBigInteger, caller: divideLongMagnitude, java.math.MutableBigInteger
Method to inline: <init>, org.graalvm.collections.EconomicMapImpl, caller: create, org.graalvm.collections.EconomicMapImpl
Method to inline: initTryAdvance, java.util.stream.Nodes$InternalNodeSpliterator, caller: tryAdvance, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive
Method to inline: intercept, org.graalvm.collections.EconomicMapImpl, caller: create, org.graalvm.collections.EconomicMapImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.util.Spliterators$IntArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.util.stream.SpinedBuffer$OfLong$1Splitr, caller: spliterator, java.util.stream.SpinedBuffer$OfLong
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: retireToSpace, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: printStackTrace, java.lang.Throwable, caller: dispatchUncaughtException, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.ArrayList, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: <init>, java.util.Spliterators$DoubleArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: getAllocationSpace, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: getAllocationSpace, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: isEmpty, java.util.ArrayList, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: setMaximumHeapSize, com.oracle.svm.core.genscavenge.HeapPolicy
Method to inline: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideLongMagnitude, java.math.MutableBigInteger
Method to inline: getCollectOnAllocationPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: unsignedLongCompare, java.math.MutableBigInteger, caller: divideLongMagnitude, java.math.MutableBigInteger
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: maybeCauseCollection, com.oracle.svm.core.genscavenge.HeapPolicy$CollectOnAllocationPolicy$Sometimes
Method to inline: getInstanceSize, com.oracle.svm.core.hub.LayoutEncoding, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: getName, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: <init>, java.util.stream.SpinedBuffer$OfInt$1Splitr, caller: spliterator, java.util.stream.SpinedBuffer$OfInt
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: replace, java.lang.String, caller: spaces, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: emptyLongSpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfLong
Method to inline: getOptionValueType, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: emptyIntSpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfInt
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: possibleCollectionPrologue, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: singleton, com.oracle.svm.core.jdk.SubstrateThreadMXBean, caller: noteThreadStart, com.oracle.svm.core.jdk.ManagementSupport
Method to inline: emptyDoubleSpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfDouble
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: flush, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: set, java.util.concurrent.atomic.AtomicInteger, caller: noteThreadStart, com.oracle.svm.core.jdk.SubstrateThreadMXBean
Method to inline: <init>, java.util.ArrayList, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.stream.SpinedBuffer$OfDouble$1Splitr, caller: spliterator, java.util.stream.SpinedBuffer$OfDouble
Method to inline: isDaemon, java.lang.Thread, caller: noteThreadStart, com.oracle.svm.core.jdk.SubstrateThreadMXBean
Method to inline: dump, com.oracle.svm.jni.access.JNIReflectionDictionary, caller: getClassObjectByName, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: <init>, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: getComponentType, java.lang.Class, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: getClassObject, com.oracle.svm.jni.access.JNIAccessibleClass, caller: getClassObjectByName, com.oracle.svm.jni.access.JNIReflectionDictionary
Method to inline: getComponentType, java.lang.Class, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: matchesFlagsRuntime, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.util.stream.Nodes$InternalNodeSpliterator, caller: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfPrimitive
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: flush, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: getOptionType, org.graalvm.compiler.options.OptionDescriptor, caller: matchesFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: get, java.lang.ref.Reference, caller: get, com.oracle.svm.core.handles.ObjectHandlesImpl
Method to inline: addWaiter, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: acquire, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: flush, com.oracle.svm.core.log.Log$NoopLog, caller: tearDownJavaThreads, com.oracle.svm.core.thread.JavaThreads
Method to inline: getGlobalHandles, com.oracle.svm.core.handles.ObjectHandlesFeature$ObjectHandlesSupportImpl, caller: getGlobal, org.graalvm.nativeimage.ObjectHandles
Method to inline: <init>, com.oracle.svm.core.thread.VMOperation, caller: <init>, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: getDefaultGen, com.oracle.svm.core.jdk.SplittableRandomAccessors, caller: <init>, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, caller: initializeSyncQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer
Method to inline: getOptionKey, org.graalvm.compiler.options.OptionDescriptor, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: <init>, java.util.concurrent.atomic.AtomicBoolean, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: isReadyForTearDown, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: set, java.util.concurrent.atomic.AtomicBoolean, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: waitForTearDown, com.oracle.svm.core.thread.JavaThreads
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: maybeFatallyTooLong, com.oracle.svm.core.util.TimeUtils
Method to inline: <init>, java.util.stream.SpinedBuffer$OfLong$1Splitr, caller: newSpliterator, java.util.stream.SpinedBuffer$OfLong$1Splitr
Method to inline: <init>, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, caller: newCondition, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: <init>, java.util.stream.SpinedBuffer$OfInt$1Splitr, caller: newSpliterator, java.util.stream.SpinedBuffer$OfInt$1Splitr
Method to inline: name, java.lang.Enum, caller: parseOption, com.oracle.svm.core.option.SubstrateOptionsParser
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: doNotLoopTooLong, com.oracle.svm.core.util.TimeUtils
Method to inline: <init>, java.util.stream.SpinedBuffer$OfDouble$1Splitr, caller: newSpliterator, java.util.stream.SpinedBuffer$OfDouble$1Splitr
Method to inline: release, java.util.concurrent.locks.AbstractQueuedSynchronizer, caller: unlock, java.util.concurrent.locks.ReentrantLock
Method to inline: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: drain, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: isInterface, com.oracle.svm.core.hub.LayoutEncoding, caller: isInterface, java.lang.Class
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: emptySpliterator, java.util.Spliterators, caller: spliterator, java.util.stream.Nodes$EmptyNode$OfRef
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: allocateNewInstance, com.oracle.svm.core.genscavenge.ThreadLocalAllocation
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuilder
Method to inline: hasDefaultMethods, java.lang.Class, caller: initializeSuperInterfaces, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: declaresDefaultMethods, java.lang.Class, caller: initializeSuperInterfaces, com.oracle.svm.core.hub.ClassInitializationInfo
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: <init>, java.util.Spliterators$ArraySpliterator, caller: spliterator, java.util.Spliterators
Method to inline: <init>, java.util.stream.Nodes$InternalNodeSpliterator, caller: <init>, java.util.stream.Nodes$InternalNodeSpliterator$OfRef
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: appendNull, java.lang.AbstractStringBuilder
Method to inline: setNext, com.oracle.svm.core.thread.JavaVMOperation, caller: setNext, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: appendNull, java.lang.AbstractStringBuilder
Method to inline: setNext, com.oracle.svm.core.thread.JavaVMOperation, caller: setNext, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation
Method to inline: assertIsLocked, com.oracle.svm.core.thread.VMOperationControl$WorkQueues, caller: drain, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: <init>, java.lang.String, caller: toString, java.lang.Long
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: toStackTraceElement, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, caller: toString, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: exit, java.lang.Thread, caller: cleanupBeforeDetach, com.oracle.svm.core.thread.JavaThreads
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: execute, com.oracle.svm.core.thread.VMOperation
Method to inline: <init>, java.util.ArrayDeque, caller: initStack, java.util.stream.Nodes$InternalNodeSpliterator
Method to inline: <init>, java.util.Spliterators$LongArraySpliterator, caller: trySplit, java.util.Spliterators$LongArraySpliterator
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: toString, jdk.vm.ci.meta.JavaConstant
Method to inline: getComponentType, java.lang.Class, caller: getCanonicalName0, java.lang.Class
Method to inline: getNext, com.oracle.svm.core.thread.JavaVMOperation, caller: getNext, com.oracle.svm.core.thread.JavaVMOperation
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: toString, com.oracle.svm.core.meta.SubstrateObjectConstant
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: lambda$detachAllThreadsExceptCurrentWithoutCleanupForTearDown$0, com.oracle.svm.core.thread.VMThreads
Method to inline: getNext, com.oracle.svm.core.thread.JavaVMOperation, caller: getNext, com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation
Method to inline: getEnclosingClass, java.lang.Class, caller: getCanonicalName0, java.lang.Class
Method to inline: <init>, java.util.Spliterators$ArraySpliterator, caller: trySplit, java.util.Spliterators$IteratorSpliterator
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: correct, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: <init>, java.util.Spliterators$IntArraySpliterator, caller: trySplit, java.util.Spliterators$IntArraySpliterator
Method to inline: getComponentType, java.lang.Class, caller: getSimpleName0, java.lang.Class
Method to inline: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: printFlags, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: isZero, java.math.MutableBigInteger, caller: toBigInteger, java.math.MutableBigInteger
Method to inline: <init>, java.util.Spliterators$DoubleArraySpliterator, caller: trySplit, java.util.Spliterators$DoubleArraySpliterator
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: toBigInteger, java.math.MutableBigInteger
Method to inline: <init>, java.util.Spliterators$ArraySpliterator, caller: trySplit, java.util.Spliterators$ArraySpliterator
Method to inline: asT, com.oracle.svm.core.heap.AllocationFreeList$Element, caller: access$200, com.oracle.svm.core.heap.AllocationFreeList$Element
Method to inline: name, java.lang.Enum, caller: valueOf, java.lang.Enum
Method to inline: isZero, java.math.MutableBigInteger, caller: getLower, java.math.MutableBigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: getLower, java.math.MutableBigInteger
Method to inline: setSign, jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer, caller: getBinaryToASCIIConverter, jdk.internal.math.FloatingDecimal
Method to inline: isZero, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: getComponentType, java.lang.Class, caller: appendClassSignature, java.io.ObjectStreamField
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: operate, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: replace, java.lang.String, caller: appendClassSignature, java.io.ObjectStreamField
Method to inline: isZero, java.math.MutableBigInteger, caller: addDisjoint, java.math.MutableBigInteger
Method to inline: isNamed, java.lang.Module, caller: toString, java.lang.Module
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: internalNameToJava, jdk.vm.ci.meta.MetaUtil
Method to inline: set, java.util.concurrent.atomic.AtomicBoolean, caller: tryAdvance, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping
Method to inline: getNext, com.oracle.svm.core.thread.JavaVMOperation, caller: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: isLocalClass, java.lang.Class, caller: isLocalOrAnonymousClass, java.lang.Class
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: toString, java.lang.StringBuilder
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: filterUnnecessary, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: <init>, java.math.MutableBigInteger, caller: getBlock, java.math.MutableBigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: getBlock, java.math.MutableBigInteger
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.IdentityHashMap
Method to inline: init, java.util.IdentityHashMap, caller: <init>, java.util.IdentityHashMap
Method to inline: dropClassLoaderName, java.lang.StackTraceElement, caller: toString, java.lang.StackTraceElement
Method to inline: <init>, java.lang.String, caller: toUnsignedString0, java.lang.Long
Method to inline: of, java.lang.CharacterData, caller: isJavaIdentifierStart, java.lang.Character
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: getSafepointReason, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: toString, java.lang.StringBuffer
Method to inline: getName, com.oracle.svm.core.thread.VMOperation, caller: getSafepointReason, com.oracle.svm.core.thread.VMOperationControl$WorkQueues
Method to inline: dropModuleVersion, java.lang.StackTraceElement, caller: toString, java.lang.StackTraceElement
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isMyself, com.oracle.svm.core.thread.Safepoint$Master, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: getThreadGroup, java.lang.Thread, caller: toString, java.lang.Thread
Method to inline: addSuppressed, java.lang.Throwable, caller: operate, com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation
Method to inline: <init>, java.util.HashMap$HashMapSpliterator, caller: <init>, java.util.HashMap$KeySpliterator
Method to inline: getPriority, java.lang.Thread, caller: toString, java.lang.Thread
Method to inline: getName, java.lang.ThreadGroup, caller: toString, java.lang.Thread
Method to inline: getPriority, java.lang.Thread, caller: toString, java.lang.Thread
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: getName, java.lang.ThreadGroup, caller: toString, java.lang.ThreadGroup
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: fromVMThread, com.oracle.svm.core.thread.JavaThreads, caller: operate, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation
Method to inline: <init>, java.util.stream.SpinedBuffer, caller: initPartialTraversalState, java.util.stream.StreamSpliterators$WrappingSpliterator
Method to inline: name, java.lang.Enum, caller: operate, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation
Method to inline: coder, java.lang.String, caller: equals, java.lang.String
Method to inline: coder, java.lang.String, caller: equals, java.lang.String
Method to inline: <init>, java.math.MutableBigInteger, caller: getBlock, java.math.MutableBigInteger
Method to inline: isLatin1, java.lang.String, caller: equals, java.lang.String
Method to inline: maxCharsPerByte, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: scale, java.lang.StringCoding, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: onMalformedInput, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.util.stream.Collectors$CollectorImpl, caller: joining, java.util.stream.Collectors
Method to inline: <init>, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: getName, org.graalvm.compiler.options.OptionDescriptor, caller: collectFuzzyMatches, org.graalvm.compiler.options.OptionsParser
Method to inline: getClassLoader0, java.lang.Class, caller: decode, java.lang.StringCoding
Method to inline: addSuppressed, java.lang.Throwable, caller: operate, com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation
Method to inline: <init>, java.io.FileInputStream$1, caller: close, java.io.FileInputStream
Method to inline: flush, java.nio.charset.CharsetDecoder, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: <init>, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: position, java.nio.Buffer, caller: decode, java.lang.StringCoding
Method to inline: with, java.lang.StringCoding$Result, caller: decode, java.lang.StringCoding
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: addSuppressed, java.lang.Throwable, caller: closeAll, java.io.FileDescriptor
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: addSuppressed, java.lang.Throwable, caller: closeAll, java.io.FileDescriptor
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: requestSafepoints, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: addSuppressed, java.lang.Throwable, caller: closeAll, java.io.FileDescriptor
Method to inline: <init>, java.util.TreeMap$Values, caller: values, java.util.TreeMap
Method to inline: <init>, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult, caller: error, com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult
Method to inline: toThreadState, jdk.internal.misc.VM, caller: getState, java.lang.Thread
Method to inline: incRequested, com.oracle.svm.core.thread.Safepoint$Statistics, caller: requestSafepoint, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: initTryAdvance, java.util.stream.Nodes$InternalNodeSpliterator, caller: tryAdvance, java.util.stream.Nodes$InternalNodeSpliterator$OfRef
Method to inline: <init>, java.math.BigDecimal, caller: zeroValueOf, java.math.BigDecimal
Method to inline: <init>, java.util.stream.Streams$1, caller: composeWithExceptions, java.util.stream.Streams
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: implClose, sun.nio.cs.StreamEncoder
Method to inline: getMessage, java.lang.Throwable, caller: getReason, java.net.URISyntaxException
Method to inline: <init>, java.util.stream.Streams$2, caller: composedClose, java.util.stream.Streams
Method to inline: lineSeparator, java.lang.System, caller: getMessage, java.util.regex.PatternSyntaxException
Method to inline: position, java.nio.Buffer, caller: implClose, sun.nio.cs.StreamEncoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: lineSeparator, java.lang.System, caller: getMessage, java.util.regex.PatternSyntaxException
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: implClose, sun.nio.cs.StreamEncoder
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: signum, java.lang.Long, caller: signum, java.math.BigDecimal
Method to inline: isLeaf, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator, caller: <init>, java.util.stream.StreamSpliterators$WrappingSpliterator
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: doNotLoopTooLong, com.oracle.svm.core.thread.Safepoint$Master
Method to inline: setLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.WhileOps$DropWhileTask
Method to inline: onCompletion, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.WhileOps$DropWhileTask
Method to inline: isNativeMethod, java.lang.StackTraceElement, caller: toString, java.lang.StackTraceElement
Method to inline: bitCount, java.lang.Integer, caller: bitLength, java.math.BigInteger
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: toString, java.lang.module.ModuleDescriptor$Requires
Method to inline: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, caller: tryAdvance, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: toString, java.lang.module.ModuleDescriptor$Requires
Method to inline: <init>, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameImpl, caller: tryAdvance, com.oracle.svm.core.jdk.Target_java_lang_StackWalker$StackFrameSpliterator
Method to inline: <init>, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: <init>, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: <init>, java.util.stream.Nodes$SpinedNodeBuilder, caller: builder, java.util.stream.Nodes
Method to inline: <init>, java.util.stream.AbstractSpinedBuffer, caller: <init>, java.util.stream.SpinedBuffer
Method to inline: constructorModifiers, java.lang.reflect.Modifier, caller: toString, java.lang.reflect.Constructor
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: smallToString, java.math.BigInteger
Method to inline: incrementCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: scrubLists, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hashCode, java.lang.Byte, caller: hashCode, java.lang.Byte
Method to inline: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hashCode, java.lang.Character, caller: hashCode, java.lang.Character
Method to inline: <init>, java.util.stream.Streams$StreamBuilderImpl, caller: of, java.util.stream.Stream
Method to inline: finishCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hashCode, java.lang.Double, caller: hashCode, java.lang.Double
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hashCode, java.lang.Float, caller: hashCode, java.lang.Float
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectOperation, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.stream.ReferencePipeline$3, caller: map, java.util.stream.ReferencePipeline
Method to inline: hashCode, java.lang.Integer, caller: hashCode, java.lang.Integer
Method to inline: hashCode, java.lang.Long, caller: hashCode, java.lang.Long
Method to inline: hashCode, java.lang.Short, caller: hashCode, java.lang.Short
Method to inline: <init>, java.util.stream.PipelineHelper, caller: <init>, java.util.stream.AbstractPipeline
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: printGCSummary, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getReturnType, java.lang.reflect.Method, caller: specificToStringHeader, java.lang.reflect.Method
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: printGCSummary, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: specificToStringHeader, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: equals, java.lang.reflect.Constructor
Method to inline: getName, java.lang.reflect.Method, caller: specificToStringHeader, java.lang.reflect.Method
Method to inline: addSuppressed, java.lang.Throwable, caller: close, java.io.FilterOutputStream
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: equals, java.lang.reflect.Constructor
Method to inline: addSuppressed, java.lang.Throwable, caller: close, java.io.FilterOutputStream
Method to inline: <init>, java.util.Spliterators$IteratorSpliterator, caller: spliterator, java.util.Spliterators
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getName, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getName, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getType, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: getType, java.lang.reflect.Field, caller: equals, java.lang.reflect.Field
Method to inline: methodModifiers, java.lang.reflect.Modifier, caller: toString, java.lang.reflect.Method
Method to inline: <init>, java.io.FileOutputStream$1, caller: close, java.io.FileOutputStream
Method to inline: getModifiers, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getName, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: printGCAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getName, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: getType, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: printGCAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: getName, java.lang.reflect.Field, caller: toString, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: hashCode, java.lang.reflect.Constructor
Method to inline: addSuppressed, java.lang.Throwable, caller: close, java.io.BufferedWriter
Method to inline: getDeclaringClass, java.lang.reflect.Field, caller: hashCode, java.lang.reflect.Field
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: specificToStringHeader, java.lang.reflect.Constructor
Method to inline: getModifiers, java.lang.reflect.Method, caller: isDefault, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: isDefault, java.lang.reflect.Method
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: toString, java.math.MutableBigInteger
Method to inline: toString, java.lang.Enum, caller: toString, java.math.MathContext
Method to inline: <init>, java.util.stream.Nodes$LongSpinedNodeBuilder, caller: longBuilder, java.util.stream.Nodes
Method to inline: <init>, java.util.stream.SpinedBuffer$OfPrimitive, caller: <init>, java.util.stream.SpinedBuffer$OfLong
Method to inline: holder, java.net.InetAddress, caller: toString, java.net.InetAddress
Method to inline: <init>, java.util.stream.Nodes$LongArrayNode, caller: <init>, java.util.stream.Nodes$LongFixedNodeBuilder
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: rightInplaceSub, jdk.internal.math.FDBigInteger
Method to inline: getName, java.net.NetworkInterface, caller: getHostAddress, java.net.Inet6Address$Inet6AddressHolder
Method to inline: setPendingCount, java.util.concurrent.CountedCompleter, caller: compute, java.util.stream.AbstractShortCircuitTask
Method to inline: isOpaque, java.net.URI, caller: defineString, java.net.URI
Method to inline: setPendingCount, java.util.concurrent.CountedCompleter, caller: compute, java.util.stream.AbstractTask
Method to inline: setLocalResult, java.util.stream.AbstractShortCircuitTask, caller: compute, java.util.stream.AbstractShortCircuitTask
Method to inline: getName, java.lang.reflect.Field, caller: hashCode, java.lang.reflect.Field
Method to inline: getReturnType, java.lang.reflect.Method, caller: equals, java.lang.reflect.Method
Method to inline: equals, java.lang.Object, caller: equals, java.lang.reflect.Method
Method to inline: getDeclaringClass, java.lang.reflect.Method, caller: hashCode, java.lang.reflect.Method
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: leftInplaceSub, jdk.internal.math.FDBigInteger
Method to inline: getName, java.lang.reflect.Method, caller: hashCode, java.lang.reflect.Method
Method to inline: <init>, java.util.stream.Nodes$IntSpinedNodeBuilder, caller: intBuilder, java.util.stream.Nodes
Method to inline: <init>, java.util.stream.SpinedBuffer$OfPrimitive, caller: <init>, java.util.stream.SpinedBuffer$OfInt
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: <init>, java.util.stream.Nodes$IntArrayNode, caller: <init>, java.util.stream.Nodes$IntFixedNodeBuilder
Method to inline: isPreserved, java.util.stream.StreamOpFlag, caller: doLeaf, java.util.stream.WhileOps$DropWhileTask
Method to inline: ordinal, java.lang.Enum, caller: emptyNode, java.util.stream.Nodes
Method to inline: <init>, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: holder, java.net.InetAddress, caller: hashCode, java.net.Inet4Address
Method to inline: <init>, java.text.DigitList, caller: <init>, java.text.DecimalFormat
Method to inline: <init>, java.util.stream.WhileOps$1Op$1OpSink, caller: opWrapSink, java.util.stream.WhileOps$1Op
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: multByPow52, jdk.internal.math.FDBigInteger
Method to inline: holder, java.net.InetAddress, caller: equals, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: equals, java.net.Inet4Address
Method to inline: size, jdk.internal.math.FDBigInteger, caller: multByPow52, jdk.internal.math.FDBigInteger
Method to inline: getCompleter, java.util.concurrent.CountedCompleter, caller: getParent, java.util.stream.AbstractTask
Method to inline: isPreserved, java.util.stream.StreamOpFlag, caller: doLeaf, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachOrderedTask
Method to inline: <init>, jdk.internal.math.FDBigInteger, caller: multByPow52, jdk.internal.math.FDBigInteger
Method to inline: isOpaque, java.net.URI, caller: hashCode, java.net.URI
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: doLeaf, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.util.stream.Nodes$DoubleSpinedNodeBuilder, caller: doubleBuilder, java.util.stream.Nodes
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: doLeaf, java.util.stream.SliceOps$SliceTask
Method to inline: <init>, java.util.stream.SpinedBuffer$OfPrimitive, caller: <init>, java.util.stream.SpinedBuffer$OfDouble
Method to inline: spread, java.util.concurrent.ConcurrentHashMap, caller: replaceNode, java.util.concurrent.ConcurrentHashMap
Method to inline: <init>, java.util.stream.StreamSpliterators$ArrayBuffer$OfRef, caller: forEachRemaining, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef
Method to inline: <init>, java.util.stream.Nodes$DoubleArrayNode, caller: <init>, java.util.stream.Nodes$DoubleFixedNodeBuilder
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: holder, java.net.InetAddress, caller: getAddress, java.net.Inet4Address
Method to inline: canEncode, java.lang.StringLatin1, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: truncate, java.util.stream.Nodes$ConcNode
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: appendChars, java.lang.AbstractStringBuilder
Method to inline: getShape, java.util.stream.Node, caller: truncate, java.util.stream.Nodes$ConcNode
Method to inline: ordinal, java.lang.Enum, caller: conc, java.util.stream.Nodes
Method to inline: <init>, java.util.stream.Sink$ChainedReference, caller: <init>, java.util.stream.SliceOps$1$1
Method to inline: setLength, java.lang.AbstractStringBuilder, caller: setLength, java.lang.StringBuilder
Method to inline: getProtocol, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: isOpaque, java.net.URI, caller: equals, java.net.URI
Method to inline: getAuthority, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: isOpaque, java.net.URI, caller: equals, java.net.URI
Method to inline: isOpaque, java.net.URI, caller: equals, java.net.URI
Method to inline: getPath, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getQuery, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer, caller: readJavaFormatString, jdk.internal.math.FloatingDecimal
Method to inline: getRef, java.net.URL, caller: toExternalForm, java.net.URLStreamHandler
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.AbstractTask
Method to inline: isLatin1, java.lang.String, caller: toCharArray, java.lang.String
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: lockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: merge, java.util.stream.WhileOps$DropWhileTask
Method to inline: <init>, java.util.stream.AbstractShortCircuitTask, caller: <init>, java.util.stream.SliceOps$SliceTask
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: position, java.nio.Buffer, caller: toString, java.nio.ByteBuffer
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: <init>, java.text.DecimalFormat
Method to inline: <init>, java.util.stream.ReduceOps$ReduceTask, caller: makeChild, java.util.stream.ReduceOps$ReduceTask
Method to inline: isLeaf, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.SliceOps$SliceTask
Method to inline: getProtocol, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: exactOutputSizeIfKnown, java.util.stream.AbstractPipeline
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: exactOutputSizeIfKnown, java.util.stream.AbstractPipeline
Method to inline: getFile, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: limit, java.nio.Buffer, caller: toString, java.nio.ByteBuffer
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: getPort, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: unlockRoot, java.util.concurrent.ConcurrentHashMap$TreeBin, caller: removeTreeNode, java.util.concurrent.ConcurrentHashMap$TreeBin
Method to inline: capacity, java.nio.Buffer, caller: toString, java.nio.ByteBuffer
Method to inline: getPort, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: getRef, java.net.URL, caller: hashCode, java.net.URLStreamHandler
Method to inline: setLocalResult, java.util.stream.AbstractShortCircuitTask, caller: onCompletion, java.util.stream.SliceOps$SliceTask
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: onCompletion, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.SliceOps$SliceTask
Method to inline: getHost, java.net.URL, caller: getHostAddress, java.net.URLStreamHandler
Method to inline: isLeaf, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: forEach, java.util.stream.Nodes$EmptyNode, caller: forEach, java.util.stream.Nodes$EmptyNode$OfRef
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: setLocalResult, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: getRef, java.net.URL, caller: equals, java.net.URLStreamHandler
Method to inline: cancel, java.util.stream.AbstractShortCircuitTask, caller: cancel, java.util.stream.SliceOps$SliceTask
Method to inline: onCompletion, java.util.stream.AbstractTask, caller: onCompletion, java.util.stream.ReduceOps$ReduceTask
Method to inline: getRef, java.net.URL, caller: equals, java.net.URLStreamHandler
Method to inline: setLocalResult, java.util.stream.AbstractShortCircuitTask, caller: cancel, java.util.stream.SliceOps$SliceTask
Method to inline: setMaximumFractionDigits, java.text.DecimalFormat, caller: applyPattern, java.text.DecimalFormat
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getProtocol, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: setDecimalSeparatorAlwaysShown, java.text.DecimalFormat, caller: applyPattern, java.text.DecimalFormat
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getFile, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: <init>, java.net.Inet6Address, caller: getAllByName, java.net.InetAddress
Method to inline: getLocalResult, java.util.stream.AbstractTask, caller: getLocalResult, java.util.stream.AbstractShortCircuitTask
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: log, com.oracle.svm.core.thread.VMOperationControl, caller: access$100, com.oracle.svm.core.thread.VMOperationControl
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: sameFile, java.net.URLStreamHandler
Method to inline: <init>, jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer, caller: parseHexString, jdk.internal.math.FloatingDecimal
Method to inline: getFirstAllocationTime, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: getTimeSinceFirstAllocation, com.oracle.svm.core.genscavenge.GCImpl$Timer
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: hasWork, com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: hasWork, com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation
Method to inline: getChars, java.lang.String, caller: getChars, java.util.StringJoiner
Method to inline: <init>, java.net.Inet4AddressImpl, caller: loopbackAddress, java.net.Inet6AddressImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getHost, java.net.URL, caller: hostsEqual, sun.net.www.protocol.file.Handler
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.net.Inet6Address, caller: loopbackAddress, java.net.Inet6AddressImpl
Method to inline: getHost, java.net.URL, caller: hostsEqual, sun.net.www.protocol.file.Handler
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: name, java.nio.charset.Charset, caller: toString, java.nio.charset.Charset
Method to inline: position, java.nio.Buffer, caller: toString, java.nio.CharBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: limit, java.nio.Buffer, caller: toString, java.nio.CharBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.ByteBuffer
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: getHost, java.net.URL, caller: hostsEqual, java.net.URLStreamHandler
Method to inline: addSuppressed, java.lang.Throwable, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getStringBuffer, java.text.DigitList, caller: toString, java.text.DigitList
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersAfter, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: resetTimers, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setLength, java.lang.AbstractStringBuilder, caller: setLength, java.lang.StringBuffer
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isSet, java.security.Policy, caller: toString, java.security.ProtectionDomain
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: seeAllp, java.security.ProtectionDomain, caller: toString, java.security.ProtectionDomain
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: getExactSizeIfKnown, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: resetTimers, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: getExactSizeIfKnown, java.util.stream.StreamSpliterators$AbstractWrappingSpliterator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: resetTimers, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.lang.AbstractStringBuilder, caller: <init>, java.lang.StringBuffer
Method to inline: <init>, java.time.format.DateTimePrintContext, caller: formatTo, java.time.format.DateTimeFormatter
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.CharBuffer
Method to inline: <init>, java.net.NetworkInterface$2, caller: enumerationFromArray, java.net.NetworkInterface
Method to inline: ix, java.nio.DirectByteBuffer, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: <init>, java.util.stream.ReferencePipeline$3$1, caller: opWrapSink, java.util.stream.ReferencePipeline$3
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: <init>, java.util.stream.ReferencePipeline$2$1, caller: opWrapSink, java.util.stream.ReferencePipeline$2
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: printGCBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: startOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: <init>, java.util.stream.ReduceOps$3ReducingSink, caller: makeSink, java.util.stream.ReduceOps$3
Method to inline: setMaximumFractionDigits, java.text.DecimalFormat, caller: applyPattern, java.text.DecimalFormat
Method to inline: position, java.nio.Buffer, caller: subSequence, java.nio.HeapCharBuffer
Method to inline: deleteCharAt, java.lang.AbstractStringBuilder, caller: deleteCharAt, java.lang.StringBuilder
Method to inline: capacity, java.nio.Buffer, caller: subSequence, java.nio.HeapCharBuffer
Method to inline: <init>, java.nio.HeapCharBuffer, caller: subSequence, java.nio.HeapCharBuffer
Method to inline: endOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: endOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: endOptional, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$CompositePrinterParser
Method to inline: nativeOrder, java.nio.ByteOrder, caller: order, java.nio.HeapCharBuffer
Method to inline: <init>, java.util.stream.ReduceOps$ReduceTask, caller: evaluateParallel, java.util.stream.ReduceOps$ReduceOp
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: substring, java.lang.AbstractStringBuilder
Method to inline: <init>, java.net.InetAddress$NameServiceAddresses, caller: getAllByName0, java.net.InetAddress
Method to inline: name, java.nio.charset.Charset, caller: equals, java.nio.charset.Charset
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.security.ProtectionDomain$1, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: getTemporal, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$InstantPrinterParser
Method to inline: addSuppressed, java.lang.Throwable, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getTemporal, java.time.format.DateTimePrintContext, caller: format, java.time.format.DateTimeFormatterBuilder$InstantPrinterParser
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: printGCBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setSoftReferencesAreWeak, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hasMoreElements, java.security.PermissionsEnumerator, caller: nextElement, java.security.PermissionsEnumerator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getCollectionEpoch, com.oracle.svm.core.genscavenge.GCImpl, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: toString, java.time.ZoneOffset, caller: toString, java.time.ZonedDateTime
Method to inline: position, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: equals, java.nio.StringCharBuffer
Method to inline: addSuppressed, java.lang.Throwable, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$XGrapheme
Method to inline: toString, java.time.ZoneOffset, caller: toString, java.time.ZonedDateTime
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$XGrapheme
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: set, java.util.concurrent.atomic.AtomicReference, caller: scrub, com.oracle.svm.core.heap.AllocationFreeList
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: postcondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: postcondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: doInvoke, java.util.concurrent.ForkJoinTask
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: verbosePostCondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: verbosePostCondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: insert, java.lang.AbstractStringBuilder, caller: insert, java.lang.StringBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: ordinal, java.lang.Enum, caller: toString, java.time.format.DateTimeFormatterBuilder$SettingsParser
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYear, java.time.LocalDate, caller: getYear, java.time.LocalDateTime
Method to inline: getSecond, java.time.LocalTime, caller: getSecond, java.time.LocalDateTime
Method to inline: toCodePoint, java.lang.Character, caller: codePointAt, java.lang.Character
Method to inline: beforeGarbageCollection, com.oracle.svm.core.os.CommittedMemoryProvider, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: ofEpochSecond, java.time.LocalDateTime
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.time.LocalDateTime, caller: ofEpochSecond, java.time.LocalDateTime
Method to inline: <init>, java.security.PermissionsEnumerator, caller: elements, java.security.Permissions
Method to inline: <init>, java.net.InetAddress$CachedAddresses, caller: get, java.net.InetAddress$NameServiceAddresses
Method to inline: <init>, java.security.Permissions, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: addSuppressed, java.lang.Throwable, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: tryExternalHelp, java.util.concurrent.ForkJoinTask
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: get, com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor, caller: tryExternalHelp, java.util.concurrent.ForkJoinTask
Method to inline: afterGarbageCollection, com.oracle.svm.core.os.CommittedMemoryProvider, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.time.LocalTime, caller: create, java.time.LocalTime
Method to inline: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: tryExternalHelp, java.util.concurrent.ForkJoinTask
Method to inline: add, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: equals, java.lang.Object, caller: equals, java.text.AttributedCharacterIterator$Attribute
Method to inline: afterCollection, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: doCollectImpl, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getString, java.text.AttributedString$AttributedStringIterator, caller: equals, java.text.AttributedString$AttributedStringIterator
Method to inline: add, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: <init>, java.time.LocalDate, caller: ofEpochDay, java.time.LocalDate
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: range, java.time.temporal.ChronoField, caller: checkValidValue, java.time.temporal.ChronoField
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$CollectionView, caller: <init>, java.util.concurrent.ConcurrentHashMap$ValuesView
Method to inline: divideNanosToMillis, com.oracle.svm.core.util.TimeUtils, caller: updateSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.security.AllPermissionCollection$1, caller: elements, java.security.AllPermissionCollection
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: getChunkUsedBytesAfterCollection, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, caller: getChunkUsedBytesAfterCollection, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: equals, java.lang.Object, caller: containsAllLimits, java.security.AccessControlContext
Method to inline: getName, java.security.Permission, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: size, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: expandAffixes, java.text.DecimalFormat, caller: applyPattern, java.text.DecimalFormat
Method to inline: addSuppressed, java.lang.Throwable, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getName, java.security.Permission, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: size, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: afterIncrementalCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: size, java.util.ArrayList, caller: mergePermissions, java.security.ProtectionDomain
Method to inline: equals, java.lang.Object, caller: containsAllPDs, java.security.AccessControlContext
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: visitWatchersBefore, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: afterCollectionCommon, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: afterCollectionCommon, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: afterCollectionCommon, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$SliceS
Method to inline: <init>, java.io.File, caller: lookupAllHostAddr, java.net.InetAddress$HostsFileNameService
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: precondition, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$SliceIS
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: isUpper, java.util.regex.ASCII, caller: toLower, java.util.regex.ASCII
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: helpCC, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: verifyBeforeGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: add, java.util.ArrayList, caller: lookupAllHostAddr, java.net.InetAddress$HostsFileNameService
Method to inline: getMinimum, java.time.temporal.ValueRange, caller: isValidValue, java.time.temporal.ValueRange
Method to inline: getMaximum, java.time.temporal.ValueRange, caller: isValidValue, java.time.temporal.ValueRange
Method to inline: addSuppressed, java.lang.Throwable, caller: lookupAllHostAddr, java.net.InetAddress$HostsFileNameService
Method to inline: range, java.time.temporal.ChronoField, caller: checkValidIntValue, java.time.temporal.ChronoField
Method to inline: size, java.util.ArrayList, caller: lookupAllHostAddr, java.net.InetAddress$HostsFileNameService
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayName, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: getMinimum, java.time.temporal.ValueRange, caller: isIntValue, java.time.temporal.ValueRange
Method to inline: getMaximum, java.time.temporal.ValueRange, caller: isIntValue, java.time.temporal.ValueRange
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: ordinal, java.lang.Enum, caller: match, java.util.regex.Pattern$Ques
Method to inline: nextSecondarySeed, java.util.concurrent.ThreadLocalRandom, caller: awaitJoin, java.util.concurrent.ForkJoinPool
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: ordinal, java.lang.Enum, caller: getLong, java.time.ZonedDateTime
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: getOffset, java.time.ZonedDateTime, caller: getLong, java.time.ZonedDateTime
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getLong, java.time.ZonedDateTime
Method to inline: valueOf, java.util.Formatter$Flags, caller: remove, java.util.Formatter$Flags
Method to inline: <init>, java.util.Formatter$Flags, caller: dup, java.util.Formatter$Flags
Method to inline: <init>, java.util.regex.IntHashSet, caller: matchInit, java.util.regex.Pattern$Loop
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: awaitJoin, java.util.concurrent.ForkJoinPool
Method to inline: getCurrencyCode, java.util.Currency, caller: initializeCurrency, java.text.DecimalFormatSymbols
Method to inline: ordinal, java.lang.Enum, caller: getValue, java.time.Month
Method to inline: internalWait, java.util.concurrent.ForkJoinTask, caller: awaitJoin, java.util.concurrent.ForkJoinPool
Method to inline: nonNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: isNull, java.util.Objects, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: <init>, java.lang.ref.SoftReference, caller: retrieveDisplayNamesImpl, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: <init>, java.net.Inet6Address, caller: getByAddress, java.net.InetAddress
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getScript, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: <init>, java.lang.ref.SoftReference, caller: getZoneStrings, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: getScript, sun.util.locale.BaseLocale, caller: toString, java.util.Locale
Method to inline: <init>, java.util.Currency, caller: getInstance, java.util.Currency
Method to inline: <init>, java.util.Hashtable$Entry, caller: addEntry, java.util.Hashtable
Method to inline: <init>, java.util.LinkedList, caller: loadZoneStrings, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: getEdenObjectBytes, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: size, java.util.LinkedList, caller: loadZoneStrings, sun.util.locale.provider.TimeZoneNameUtility
Method to inline: size, java.util.ArrayList, caller: findEntry, java.util.Currency$OtherCurrencyEntry
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: size, java.util.ArrayList, caller: findEntry, java.util.Currency$SpecialCaseEntry
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: afterCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: toNanoOfDay, java.time.LocalTime, caller: getLong, java.time.LocalTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: beforeCollection, com.oracle.svm.core.genscavenge.GCImpl$Accounting
Method to inline: toNanoOfDay, java.time.LocalTime, caller: getLong, java.time.LocalTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: collectCompletely, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: ordinal, java.lang.Enum, caller: get0, java.time.LocalTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: toSecondOfDay, java.time.LocalTime, caller: get0, java.time.LocalTime
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: getAccounting, com.oracle.svm.core.genscavenge.CollectionPolicy
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: toNanoOfDay, java.time.LocalTime, caller: get0, java.time.LocalTime
Method to inline: <init>, java.util.ArrayList, caller: split, java.lang.String
Method to inline: get, java.lang.ref.Reference, caller: get, java.lang.ref.SoftReference
Method to inline: ordinal, java.lang.Enum, caller: isTimeBased, java.time.temporal.ChronoField
Method to inline: ordinal, java.lang.Enum, caller: isTimeBased, java.time.temporal.ChronoField
Method to inline: toEpochDay, java.time.LocalDate, caller: getLong, java.time.LocalDate
Method to inline: createWorker, java.util.concurrent.ForkJoinPool, caller: tryCompensate, java.util.concurrent.ForkJoinPool
Method to inline: getProlepticMonth, java.time.LocalDate, caller: getLong, java.time.LocalDate
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$NFCCharProperty
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$NFCCharProperty
Method to inline: ordinal, java.lang.Enum, caller: get0, java.time.LocalDate
Method to inline: getChars, java.lang.String, caller: mapEntryToString, java.util.concurrent.Helpers
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$NFCCharProperty
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: toString, java.util.concurrent.ConcurrentHashMap
Method to inline: getChars, java.lang.String, caller: mapEntryToString, java.util.concurrent.Helpers
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getDecimalFormatSymbolsData, sun.util.locale.provider.LocaleResources
Method to inline: ordinal, java.lang.Enum, caller: getValue, java.time.DayOfWeek
Method to inline: toEpochDay, java.time.LocalDate, caller: getDayOfWeek, java.time.LocalDate
Method to inline: toCodePoint, java.lang.Character, caller: codePointBefore, java.lang.Character
Method to inline: getComponentType, java.lang.Class, caller: toArray, java.util.LinkedList
Method to inline: isLatin1, java.lang.String, caller: codePointCount, java.lang.String
Method to inline: hasExtensions, java.util.Locale, caller: getUnicodeLocaleType, java.util.Locale
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.AbstractSequentialList
Method to inline: releaseFence, java.lang.invoke.VarHandle, caller: tryRemoveAndExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: ordinal, java.lang.Enum, caller: firstDayOfYear, java.time.Month
Method to inline: doExec, java.util.concurrent.ForkJoinTask, caller: tryRemoveAndExec, java.util.concurrent.ForkJoinPool$WorkQueue
Method to inline: getExclusiveOwnerThread, java.util.concurrent.locks.AbstractOwnableSynchronizer, caller: getOwner, java.util.concurrent.locks.ReentrantLock$Sync
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getZoneIDs, sun.util.locale.provider.LocaleResources
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: toString, java.util.stream.Nodes$ConcNode$OfPrimitive
Method to inline: pattern, java.util.regex.Matcher, caller: toString, java.util.regex.Matcher
Method to inline: regionStart, java.util.regex.Matcher, caller: toString, java.util.regex.Matcher
Method to inline: regionEnd, java.util.regex.Matcher, caller: toString, java.util.regex.Matcher
Method to inline: ordinal, java.lang.Enum, caller: getLong, java.time.Instant
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: toString, java.util.stream.Nodes$ConcNode$OfPrimitive
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: toString, java.util.stream.Nodes$ConcNode
Method to inline: count, java.util.stream.Nodes$AbstractConcNode, caller: toString, java.util.stream.Nodes$ConcNode
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.AbstractTask
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getAccounting, com.oracle.svm.core.genscavenge.GCImpl, caller: getAccounting, com.oracle.svm.core.genscavenge.CollectionPolicy
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: addToReferencePendingList, com.oracle.svm.core.genscavenge.HeapImpl, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: weightedNanos, com.oracle.svm.core.util.TimeUtils, caller: collectCompletelyBasedOnTime, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: nanoTimeLessThan, com.oracle.svm.core.util.TimeUtils, caller: collectCompletelyBasedOnTime, com.oracle.svm.core.genscavenge.CollectionPolicy$ByTime
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getTextResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getNumberFormatData, sun.util.resources.LocaleData
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isSurrogate, sun.text.normalizer.UTF16, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, sun.util.resources.LocaleData$1, caller: getBundle, sun.util.resources.LocaleData
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: toCodePoint, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: size, java.util.ArrayList, caller: split, java.lang.String
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: evaluateParallel, java.util.stream.ForEachOps$ForEachOp, caller: evaluateParallel, java.util.stream.ForEachOps$ForEachOp$OfRef
Method to inline: <init>, java.util.HashSet, caller: <init>, java.util.LinkedHashSet
Method to inline: add, java.util.ArrayList, caller: split, java.lang.String
Method to inline: toCodePoint, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: position, java.nio.Buffer, caller: hashCode, java.nio.ByteBuffer
Method to inline: limit, java.nio.Buffer, caller: hashCode, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: hashCode, java.nio.CharBuffer
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachTask
Method to inline: limit, java.nio.Buffer, caller: hashCode, java.nio.CharBuffer
Method to inline: <init>, java.util.concurrent.CountedCompleter, caller: <init>, java.util.stream.ForEachOps$ForEachOrderedTask
Method to inline: name, java.nio.charset.Charset, caller: hashCode, java.nio.charset.Charset
Method to inline: toIndex, java.util.Currency$SpecialCaseEntry, caller: getInstance, java.util.Currency
Method to inline: charCount, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.AbstractMap, caller: <init>, java.util.HashMap
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: sourceSpliterator, java.util.stream.AbstractPipeline
Method to inline: add, java.util.ArrayList, caller: split, java.lang.String
Method to inline: isNaN, java.lang.Float, caller: <init>, java.util.HashMap
Method to inline: size, java.util.ArrayList, caller: split, java.lang.String
Method to inline: add, java.util.ArrayList, caller: split, java.lang.String
Method to inline: size, java.util.ArrayList, caller: split, java.lang.String
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: getCCFromYesOrMaybe, sun.text.normalizer.NormalizerImpl
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: opEvaluateParallelLazy, java.util.stream.WhileOps$1Op
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: opEvaluateParallelLazy, java.util.stream.WhileOps$1Op
Method to inline: castingArray, java.util.stream.Nodes, caller: opEvaluateParallelLazy, java.util.stream.WhileOps$1Op
Method to inline: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getTimeZoneNames, sun.util.resources.LocaleData
Method to inline: <init>, java.util.ArrayList, caller: toString, java.util.stream.SpinedBuffer
Method to inline: <init>, java.util.regex.Pattern$Start, caller: <init>, java.util.regex.Pattern
Method to inline: getComponentType, java.lang.Class, caller: deepHashCode, java.util.Arrays
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: <init>, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator$OfRef$Dropping
Method to inline: ordinal, java.lang.Enum, caller: isDateBased, java.time.temporal.ChronoField
Method to inline: <init>, java.util.concurrent.atomic.AtomicBoolean, caller: <init>, java.util.stream.WhileOps$UnorderedWhileSpliterator
Method to inline: <init>, java.util.stream.WhileOps$DropWhileTask, caller: opEvaluateParallel, java.util.stream.WhileOps$1Op
Method to inline: getJavaName, jdk.vm.ci.meta.JavaKind, caller: toString, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: getChronology, java.time.format.DateTimeFormatter, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigInteger
Method to inline: getZone, java.time.format.DateTimeFormatter, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: size, org.graalvm.collections.EconomicMapImpl, caller: toString, org.graalvm.collections.EconomicMapImpl
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: getStreamAndOpFlags, java.util.stream.AbstractPipeline, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: add, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: ordinal, java.lang.Enum, caller: asBoxedPrimitive, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: castingArray, java.util.stream.Nodes, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: add, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: <init>, java.util.stream.SliceOps$SliceTask, caller: opEvaluateParallelLazy, java.util.stream.SliceOps$1
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getComponentType, java.lang.Class, caller: toArray, java.util.AbstractCollection
Method to inline: isHangulLV, sun.text.normalizer.NormalizerImpl, caller: decompose, sun.text.normalizer.NormalizerImpl
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$GroupCurly
Method to inline: <init>, org.graalvm.compiler.options.OptionValues$1, caller: toString, org.graalvm.compiler.options.OptionValues
Method to inline: <init>, java.util.TreeMap, caller: toString, org.graalvm.compiler.options.OptionValues
Method to inline: hashCode, java.text.NumberFormat, caller: hashCode, java.text.DecimalFormat
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$Curly
Method to inline: getName, sun.util.calendar.Era, caller: toString, sun.util.calendar.Era
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: toString, sun.util.calendar.Era
Method to inline: getSinceDate, sun.util.calendar.Era, caller: toString, sun.util.calendar.Era
Method to inline: <init>, java.time.format.DateTimePrintContext$1, caller: adjust, java.time.format.DateTimePrintContext
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: toString, sun.util.calendar.JulianCalendar$Date
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: toString, sun.util.calendar.ZoneInfo
Method to inline: hashCode, java.time.LocalDate, caller: hashCode, java.time.LocalDateTime
Method to inline: <init>, java.util.ImmutableCollections$ListItr, caller: listIterator, java.util.ImmutableCollections$AbstractImmutableList
Method to inline: toNanoOfDay, java.time.LocalTime, caller: hashCode, java.time.LocalTime
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuffer
Method to inline: hashCode, java.time.ZoneOffset, caller: hashCode, java.time.ZonedDateTime
Method to inline: hashCode, java.time.ZoneOffset, caller: hashCode, java.time.ZonedDateTime
Method to inline: rotateLeft, java.lang.Integer, caller: hashCode, java.time.ZonedDateTime
Method to inline: <init>, java.util.ArrayList$Itr, caller: iterator, java.util.ArrayList
Method to inline: <init>, java.util.Arrays$ArrayItr, caller: iterator, java.util.Arrays$ArrayList
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$Branch
Method to inline: emptyIterator, java.util.Collections, caller: iterator, java.util.Collections$EmptyList
Method to inline: <init>, java.util.ImmutableCollections$ListItr, caller: iterator, java.util.ImmutableCollections$AbstractImmutableList
Method to inline: <init>, java.util.Vector$Itr, caller: iterator, java.util.Vector
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: study, java.util.regex.Pattern$Branch
Method to inline: <init>, java.util.ArrayList$ListItr, caller: listIterator, java.util.ArrayList
Method to inline: <init>, java.util.stream.AbstractTask, caller: <init>, java.util.stream.AbstractShortCircuitTask
Method to inline: add, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.concurrent.atomic.AtomicReference, caller: <init>, java.util.stream.AbstractShortCircuitTask
Method to inline: size, java.util.ArrayList, caller: split, java.util.regex.Pattern
Method to inline: addSuppressed, java.lang.Throwable, caller: scavenge, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.concurrent.ForkJoinTask, caller: <init>, java.util.concurrent.CountedCompleter
Method to inline: reset, java.util.regex.Pattern$TreeInfo, caller: <init>, java.util.regex.Pattern$TreeInfo
Method to inline: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator, caller: <init>, java.util.stream.StreamSpliterators$UnorderedSliceSpliterator$OfRef
Method to inline: <init>, java.lang.Number, caller: <init>, java.util.concurrent.atomic.AtomicLong
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry, caller: next, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: swapSpaces, com.oracle.svm.core.genscavenge.YoungGeneration, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.AbstractList$ListItr, caller: listIterator, java.util.AbstractList
Method to inline: getTimeInMillis, java.util.Calendar, caller: getMillisOf, java.util.Calendar
Method to inline: getID, sun.util.locale.Extension, caller: getID, sun.util.locale.UnicodeLocaleExtension
Method to inline: <init>, java.util.stream.ReferencePipeline$2, caller: filter, java.util.stream.ReferencePipeline
Method to inline: charCount, java.lang.Character, caller: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: <init>, java.util.ImmutableCollections$List12, caller: of, java.util.List
Method to inline: charCount, java.lang.Character, caller: append, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: <init>, java.util.ImmutableCollections$List12, caller: of, java.util.List
Method to inline: <init>, java.util.Formatter, caller: <init>, java.util.Formatter
Method to inline: <init>, java.util.IdentityHashMap$EntryIterator$Entry, caller: next, java.util.IdentityHashMap$EntryIterator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: swapSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.Vector$ListItr, caller: listIterator, java.util.Vector
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: swapSpaces, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: <init>, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: setIterator, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: insert, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: <init>, java.util.ImmutableCollections$Set12, caller: of, java.util.Set
Method to inline: <init>, java.util.stream.ReduceOps$3, caller: makeRef, java.util.stream.ReduceOps
Method to inline: skipPrevious, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: insert, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: emptySet, java.util.ImmutableCollections, caller: of, java.util.Set
Method to inline: emptyListIterator, java.util.Collections, caller: listIterator, java.util.Collections$EmptyList
Method to inline: <init>, java.util.Formatter$FixedString, caller: parse, java.util.Formatter
Method to inline: <init>, java.util.ArrayList$ListItr, caller: listIterator, java.util.ArrayList
Method to inline: add, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: getDefaultRef, java.util.TimeZone, caller: getCalendarSystem, java.util.Date
Method to inline: <init>, java.util.AbstractCollection, caller: <init>, java.util.ImmutableCollections$AbstractImmutableCollection
Method to inline: add, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: <init>, java.util.stream.ForEachOps$ForEachOp$OfRef, caller: makeRef, java.util.stream.ForEachOps
Method to inline: insert, java.lang.AbstractStringBuilder, caller: insert, java.lang.StringBuilder
Method to inline: <init>, java.util.Formatter$FixedString, caller: parse, java.util.Formatter
Method to inline: add, java.util.ArrayList, caller: parse, java.util.Formatter
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: putCharsAt, java.lang.AbstractStringBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: canEncode, java.lang.StringLatin1, caller: putCharsAt, java.lang.AbstractStringBuilder
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: putCharsAt, java.lang.AbstractStringBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: javaHome, jdk.internal.util.StaticProperty, caller: setDefaultZone, java.util.TimeZone
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: getComponentType, java.lang.Class, caller: copyOfRange, java.util.Arrays
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: unnoteAlignedHeapChunk, com.oracle.svm.core.genscavenge.Space$Accounting
Method to inline: <init>, java.util.ArrayList$SubList, caller: subList, java.util.ArrayList
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, sun.util.calendar.ZoneInfo, caller: <init>, sun.util.calendar.ZoneInfo
Method to inline: <init>, java.util.regex.PatternSyntaxException, caller: error, java.util.regex.Pattern
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: releaseSpaces, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: charCount, java.lang.Character, caller: previousCC, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: index, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: getTable, java.util.WeakHashMap, caller: getEntry, java.util.WeakHashMap
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: releaseSpaces, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: indexFor, java.util.WeakHashMap, caller: getEntry, java.util.WeakHashMap
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: codePointBefore, java.lang.AbstractStringBuilder
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: isLatin1, java.lang.String, caller: indexOf, java.lang.String
Method to inline: getCodeSource, java.security.ProtectionDomain, caller: codeSource, jdk.internal.module.IllegalAccessLogger
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: getLocation, java.security.CodeSource, caller: codeSource, jdk.internal.module.IllegalAccessLogger
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: coder, java.lang.String, caller: indexOf, java.lang.String
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetUnalignedHeapChunk, com.oracle.svm.core.genscavenge.Space
Method to inline: <init>, java.io.ByteArrayInputStream, caller: getZoneInfo0, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.io.DataInputStream, caller: getZoneInfo0, sun.util.calendar.ZoneInfoFile
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: getDeclaringClass, java.lang.reflect.Constructor, caller: toShortString, java.lang.reflect.Constructor
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: hangulLVT, sun.text.normalizer.NormalizerImpl, caller: isHangulLVT, sun.text.normalizer.NormalizerImpl
Method to inline: emptyList, java.util.ImmutableCollections, caller: of, java.util.List
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: flags, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: isBmpCodePoint, java.lang.Character, caller: appendCodePoint, java.lang.AbstractStringBuilder
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetAlignedHeapChunks, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: append, java.lang.AbstractStringBuilder, caller: append, java.lang.StringBuilder
Method to inline: add, java.util.Formatter$Flags, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: getTable, com.oracle.svm.core.WeakIdentityHashMap, caller: getEntry, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: isGeneral, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: indexFor, com.oracle.svm.core.WeakIdentityHashMap, caller: getEntry, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: locale, java.util.Formatter, caller: printString, java.util.Formatter$FormatSpecifier
Method to inline: isCharacter, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: eq, com.oracle.svm.core.WeakIdentityHashMap, caller: getEntry, com.oracle.svm.core.WeakIdentityHashMap
Method to inline: isInteger, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: getCoder, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: checkInteger, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: getCoder, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: append, java.lang.AbstractStringBuilder
Method to inline: charCount, java.lang.Character, caller: compile, java.util.regex.Pattern
Method to inline: isFloat, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: out, java.util.Formatter, caller: printString, java.util.Formatter$FormatSpecifier
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: has, java.util.regex.Pattern, caller: compile, java.util.regex.Pattern
Method to inline: valueOf, java.util.Formatter$Flags, caller: printString, java.util.Formatter$FormatSpecifier
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cleanRememberedSetOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: memoryOffsetToIndex, com.oracle.svm.core.genscavenge.CardTable, caller: indexLimitForMemorySize, com.oracle.svm.core.genscavenge.CardTable
Method to inline: isSurrogate, sun.text.normalizer.UTF16, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.regex.Pattern$Start, caller: compile, java.util.regex.Pattern
Method to inline: toCodePoint, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.FormatFlagsConversionMismatchException, caller: failMismatch, java.util.Formatter$FormatSpecifier
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isDecompNoAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: log, com.oracle.svm.core.genscavenge.HeapChunkProvider, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isJamoVT, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: isValidCodePoint, java.lang.Character, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: consumeUnalignedChunk, com.oracle.svm.core.genscavenge.HeapChunkProvider
Method to inline: <init>, java.util.IllegalFormatCodePointException, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: isValidCodePoint, java.lang.Character, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: linePattern, java.util.Scanner, caller: nextLine, java.util.Scanner
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: getCachedResult, java.util.Scanner, caller: nextLine, java.util.Scanner
Method to inline: getTimeInMillis, java.util.Calendar, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: getEden, com.oracle.svm.core.genscavenge.YoungGeneration, caller: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: getComponentType, java.lang.Class, caller: computePackageName, java.lang.Class
Method to inline: <init>, java.util.IllegalFormatCodePointException, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.regex.Pattern$Start, caller: compile, java.util.regex.Pattern
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: isCompleteCollection, com.oracle.svm.core.genscavenge.GCImpl, caller: releaseSpaces, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: isValidCodePoint, java.lang.Character, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatCodePointException, caller: printCharacter, java.util.Formatter$FormatSpecifier
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: getTimeInMillis, java.util.Calendar, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.security.Permissions, caller: lambda$static$0, java.lang.Class
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.io.File, caller: lambda$static$0, java.lang.Class
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: toLocalTime, java.time.LocalDateTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: equals, java.lang.Object, caller: equals, java.util.IdentityHashMap$EntryIterator$Entry
Method to inline: toSecondOfDay, java.time.LocalTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: toLocalTime, java.time.LocalDateTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: toSecondOfDay, java.time.LocalTime, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: <init>, java.util.regex.Pattern$Start, caller: <init>, java.util.regex.Pattern$StartS
Method to inline: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: <init>, java.security.ProtectionDomain$Key, caller: <init>, java.security.ProtectionDomain
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: checkFloat, java.util.Formatter$FormatSpecifier, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: charCount, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: clearCaches, java.util.Scanner, caller: nextLine, java.util.Scanner
Method to inline: <init>, java.util.regex.Pattern$BnM, caller: optimize, java.util.regex.Pattern$BnM
Method to inline: charCount, java.lang.Character, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: popRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing, caller: processRememberedReferences, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: isText, java.util.Formatter$Conversion, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: getProtocol, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: <init>, java.util.Formatter$FormatSpecifier
Method to inline: getHost, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: getPort, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: <init>, java.util.regex.Pattern$BnM, caller: <init>, java.util.regex.Pattern$BnMS
Method to inline: getReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, caller: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getFile, java.net.URL, caller: urlNoFragString, sun.net.util.URLUtil
Method to inline: charCount, java.lang.Character, caller: <init>, java.util.regex.Pattern$BnMS
Method to inline: decomposeShort, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: has, java.util.regex.Pattern, caller: peek, java.util.regex.Pattern
Method to inline: decomposeShort, sun.text.normalizer.NormalizerImpl, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: isAbsolute, java.net.URI, caller: fromURI, java.net.URL
Method to inline: getValue, java.util.zip.CRC32, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: clear, com.oracle.svm.core.heap.ReferenceInternals, caller: processRememberedRef, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: <init>, sun.util.calendar.ZoneInfo, caller: getZoneInfo, sun.util.calendar.ZoneInfoFile
Method to inline: remove, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: compose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.regex.Matcher$ImmutableMatchResult, caller: toMatchResult, java.util.regex.Matcher
Method to inline: setReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, caller: maybeUpdateForwardedReference, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: has, java.util.regex.Pattern, caller: isLineSeparator, java.util.regex.Pattern
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: maybeUpdateForwardedReference, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: clearCaches, java.util.Scanner, caller: findWithinHorizon, java.util.Scanner
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: limit, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: capacity, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: limit, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: has, java.util.regex.Pattern, caller: next, java.util.regex.Pattern
Method to inline: reset, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: scale, java.math.BigDecimal, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Branch
Method to inline: <init>, java.text.DateFormatSymbols, caller: getInstance, sun.util.locale.provider.DateFormatSymbolsProviderImpl
Method to inline: scale, java.math.BigDecimal, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: mantissa, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: hasDot, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.text.DateFormatSymbols, caller: initializeData, java.text.DateFormatSymbols
Method to inline: exponent, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: canEncode, java.lang.StringLatin1, caller: valueOf, java.lang.String
Method to inline: <init>, java.lang.String, caller: valueOf, java.lang.String
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$BranchConn
Method to inline: <init>, java.lang.String, caller: valueOf, java.lang.String
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: scale, java.math.BigDecimal, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: ALL, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: scale, java.math.BigDecimal, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: isJamoVT, sun.text.normalizer.NormalizerImpl, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: UNIXDOT, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: mantissa, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatWidthException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: scale, java.util.Formatter$FormatSpecifier$BigDecimalLayout, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: charCount, java.lang.Character, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: DOT, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Traverser, caller: equals, java.util.concurrent.ConcurrentHashMap
Method to inline: getLeadSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: getTrailSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: scale, java.math.BigDecimal, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: getLeadSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: getScheme, java.net.URI, caller: fromURI, java.net.URL
Method to inline: <init>, java.util.regex.Pattern$UnixDollar, caller: sequence, java.util.regex.Pattern
Method to inline: getTrailSurrogate, sun.text.normalizer.UTF16, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Dollar, caller: sequence, java.util.regex.Pattern
Method to inline: locale, java.util.Formatter, caller: getZero, java.util.Formatter$FormatSpecifier
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: getCompositionsListForDecompYes, sun.text.normalizer.NormalizerImpl, caller: recompose, sun.text.normalizer.NormalizerImpl
Method to inline: unread, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: isOpaque, java.net.URI, caller: fromURI, java.net.URL
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: getRawFragment, java.net.URI, caller: fromURI, java.net.URL
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.lang.ref.SoftReference, caller: initializeData, java.text.DateFormatSymbols
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: capacity, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatFlagsException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.text.DecimalFormatSymbols, caller: getInstance, sun.util.locale.provider.DecimalFormatSymbolsProviderImpl
Method to inline: position, java.nio.Buffer, caller: readInput, java.util.Scanner
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: valueOf, java.util.Formatter$Flags, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatFlagsException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: remaining, java.nio.Buffer, caller: read, java.io.Reader
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkText, java.util.Formatter$FormatSpecifier
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: getRawQuery, java.net.URI, caller: fromURI, java.net.URL
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: getRawPath, java.net.URI, caller: fromURI, java.net.URL
Method to inline: <init>, java.util.zip.CRC32, caller: <init>, sun.util.calendar.ZoneInfoFile$Checksum
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: getDayOfMonth, java.time.LocalDate, caller: getDayOfMonth, java.time.LocalDateTime
Method to inline: getHost, java.net.URI, caller: fromURI, java.net.URL
Method to inline: getMonthValue, java.time.LocalDate, caller: getMonthValue, java.time.LocalDateTime
Method to inline: getPort, java.net.URI, caller: fromURI, java.net.URL
Method to inline: toString, java.net.URI, caller: fromURI, java.net.URL
Method to inline: toNanoOfDay, java.time.LocalTime, caller: plusWithOverflow, java.time.LocalDateTime
Method to inline: delete, java.lang.AbstractStringBuilder, caller: delete, java.lang.StringBuilder
Method to inline: <init>, java.util.IllegalFormatWidthException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: canEncode, java.lang.StringLatin1, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: equals, java.lang.Enum, caller: equals, jdk.vm.ci.code.TargetDescription
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: inflate, java.lang.AbstractStringBuilder, caller: setCharAt, java.lang.AbstractStringBuilder
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: <init>, java.util.IllegalFormatFlagsException, caller: checkNumeric, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: toEpochDay, java.time.LocalDate, caller: plusDays, java.time.LocalDate
Method to inline: equals, java.lang.Enum, caller: equals, jdk.vm.ci.meta.PrimitiveConstant
Method to inline: getTextResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getDateFormatData, sun.util.resources.LocaleData
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkCharacter, java.util.Formatter$FormatSpecifier
Method to inline: <init>, sun.util.resources.LocaleData, caller: getLocaleData, sun.util.locale.provider.JRELocaleProviderAdapter
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: codePointAt, java.lang.AbstractStringBuilder
Method to inline: <init>, java.time.LocalDateTime, caller: with, java.time.LocalDateTime
Method to inline: <init>, java.time.ZoneOffset, caller: ofTotalSeconds, java.time.ZoneOffset
Method to inline: getId, java.time.ZoneOffset, caller: ofTotalSeconds, java.time.ZoneOffset
Method to inline: <init>, java.time.ZoneOffset, caller: ofTotalSeconds, java.time.ZoneOffset
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: getCCFromNormalYesOrMaybe, sun.text.normalizer.NormalizerImpl, caller: getFCD16FromNormData, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.regex.Pattern$NFCCharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: mapAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: getFCD16FromNormData, sun.text.normalizer.NormalizerImpl
Method to inline: hasRemaining, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: has, java.util.regex.Pattern, caller: sequence, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: <init>, java.util.regex.Pattern$NFCCharProperty, caller: sequence, java.util.regex.Pattern
Method to inline: hasRemaining, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: equals, sun.util.calendar.ZoneInfo
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: getLastRawOffset, sun.util.calendar.ZoneInfo, caller: equals, sun.util.calendar.ZoneInfo
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: position, java.nio.Buffer, caller: implRead, sun.nio.cs.StreamDecoder
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getScript, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getScript, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: equals, sun.util.locale.BaseLocale$Key
Method to inline: setMaximumFractionDigits, java.text.DecimalFormat, caller: getInstance, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: limit, java.nio.Buffer, caller: readBytes, sun.nio.cs.StreamDecoder
Method to inline: isInert, sun.text.normalizer.NormalizerImpl, caller: isTrailCC01ForCompBoundaryAfter, sun.text.normalizer.NormalizerImpl
Method to inline: position, java.nio.Buffer, caller: readBytes, sun.nio.cs.StreamDecoder
Method to inline: isDecompNoAlgorithmic, sun.text.normalizer.NormalizerImpl, caller: isTrailCC01ForCompBoundaryAfter, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkCharacter, java.util.Formatter$FormatSpecifier
Method to inline: setDecimalSeparatorAlwaysShown, java.text.DecimalFormat, caller: getInstance, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: unread, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: addFlag, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: remaining, java.nio.Buffer, caller: readBytes, sun.nio.cs.StreamDecoder
Method to inline: setIterator, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: <init>, sun.text.normalizer.NormalizerImpl$ReorderingBuffer
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkGeneral, java.util.Formatter$FormatSpecifier
Method to inline: namedGroups, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: ensureCapacityInternal, java.lang.AbstractStringBuilder, caller: ensureCapacity, java.lang.AbstractStringBuilder
Method to inline: beginBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: isValid, java.util.Formatter$DateTime, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: namedGroups, java.util.regex.Pattern, caller: group0, java.util.regex.Pattern
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: normalize, sun.nio.ch.IOStatus, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: compare, java.lang.Byte, caller: compareTo, java.lang.Byte
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: read, sun.nio.ch.FileChannelImpl
Method to inline: addSuppressed, java.lang.Throwable, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$Behind, caller: group0, java.util.regex.Pattern
Method to inline: zone, java.time.temporal.TemporalQueries, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.MissingFormatWidthException, caller: checkDateTime, java.util.Formatter$FormatSpecifier
Method to inline: compare, java.lang.Character, caller: compareTo, java.lang.Character
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$NotBehind, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigDecimal
Method to inline: getSuperclass, java.lang.Class, caller: getDeclaringClass, java.lang.Enum
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: group0, java.util.regex.Pattern
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: conversion, java.util.Formatter$FormatSpecifier
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: read, sun.nio.ch.IOUtil
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: compare, java.lang.Short, caller: compareTo, java.lang.Short
Method to inline: <init>, java.util.regex.Pattern$Pos, caller: group0, java.util.regex.Pattern
Method to inline: add, java.util.Formatter$Flags, caller: conversion, java.util.Formatter$FormatSpecifier
Method to inline: <init>, java.util.regex.Pattern$Neg, caller: group0, java.util.regex.Pattern
Method to inline: needsStringSpanUTF16, sun.text.normalizer.UnicodeSetStringSpan, caller: span, sun.text.normalizer.UnicodeSet
Method to inline: isText, java.util.Formatter$Conversion, caller: conversion, java.util.Formatter$FormatSpecifier
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: compareTo, java.lang.AbstractStringBuilder
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Exports, caller: compareTo, java.lang.module.ModuleDescriptor$Exports
Method to inline: isLatin1, java.lang.AbstractStringBuilder, caller: compareTo, java.lang.AbstractStringBuilder
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Exports, caller: compareTo, java.lang.module.ModuleDescriptor$Exports
Method to inline: of, java.lang.CharacterData, caller: isUpperCase, java.lang.Character
Method to inline: charCount, java.lang.Character, caller: spanCodePointsAndCount, sun.text.normalizer.UnicodeSet
Method to inline: of, java.lang.CharacterData, caller: isUpperCase, java.lang.Character
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: getMessage, java.lang.Throwable, caller: read, java.util.zip.InflaterInputStream
Method to inline: capacity, java.nio.Buffer, caller: isBufferTooLarge, sun.nio.ch.Util
Method to inline: setParseIntegerOnly, java.text.NumberFormat, caller: getInstance, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: isBufferTooLarge, sun.nio.ch.Util, caller: isBufferTooLarge, sun.nio.ch.Util
Method to inline: <init>, java.util.regex.Pattern$GroupCurly, caller: group0, java.util.regex.Pattern
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: <init>, java.util.regex.Pattern$Loop, caller: group0, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: <init>, java.util.regex.Pattern$Prolog, caller: group0, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: replace, java.lang.String, caller: parseURL, sun.net.www.protocol.file.Handler
Method to inline: getDefaultFractionDigits, java.util.Currency, caller: adjustForCurrencyDefaultFractionDigits, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.IllegalFormatConversionException, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: setMaximumFractionDigits, java.text.DecimalFormat, caller: adjustForCurrencyDefaultFractionDigits, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: addSuppressed, java.lang.Throwable, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getId, java.time.ZoneOffset, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapByteBuffer
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setMaximumFractionDigits, java.text.DecimalFormat, caller: adjustForCurrencyDefaultFractionDigits, sun.util.locale.provider.NumberFormatProviderImpl
Method to inline: getId, java.time.ZoneOffset, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: hasRemaining, java.nio.Buffer, caller: needsInput, java.util.zip.Inflater
Method to inline: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Opens, caller: compareTo, java.lang.module.ModuleDescriptor$Opens
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Opens, caller: compareTo, java.lang.module.ModuleDescriptor$Opens
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.ByteBuffer
Method to inline: isGeneral, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: isInteger, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: getGreyToBlackObjectVisitor, com.oracle.svm.core.genscavenge.GCImpl, caller: walkUnalignedGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: isFloat, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: isText, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: position, java.nio.Buffer, caller: inflate, java.util.zip.Inflater
Method to inline: limit, java.nio.Buffer, caller: inflate, java.util.zip.Inflater
Method to inline: position, java.nio.Buffer, caller: get, java.nio.DirectByteBuffer
Method to inline: limit, java.nio.Buffer, caller: get, java.nio.DirectByteBuffer
Method to inline: ix, java.nio.DirectByteBuffer, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: inflate, java.util.zip.Inflater
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: inflate, java.util.zip.Inflater
Method to inline: reachabilityFence, java.lang.ref.Reference, caller: get, java.nio.DirectByteBuffer
Method to inline: ensureCapacity, java.util.ComparableTimSort, caller: mergeHi, java.util.ComparableTimSort
Method to inline: isCharacter, java.util.Formatter$Conversion, caller: isValid, java.util.Formatter$Conversion
Method to inline: remaining, java.nio.Buffer, caller: get, java.nio.ByteBuffer
Method to inline: isObjectArray, com.oracle.svm.core.hub.LayoutEncoding, caller: walkObjectInline, com.oracle.svm.core.hub.InteriorObjRefWalker
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: <init>, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: <init>, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: name, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: size, java.util.ArrayList, caller: <init>, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: modifiers, java.lang.module.ModuleDescriptor$Requires, caller: compareTo, java.lang.module.ModuleDescriptor$Requires
Method to inline: getReferenceMapIndex, java.lang.Class, caller: walkObjectInline, com.oracle.svm.core.hub.InteriorObjRefWalker
Method to inline: <init>, java.util.IllegalFormatPrecisionException, caller: precision, java.util.Formatter$FormatSpecifier
Method to inline: isBufferTooLarge, sun.nio.ch.Util, caller: getTemporaryDirectBuffer, sun.nio.ch.Util
Method to inline: getS4, com.oracle.svm.core.util.TypedMemoryReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.InstanceReferenceMapDecoder
Method to inline: <init>, java.util.IllegalFormatWidthException, caller: width, java.util.Formatter$FormatSpecifier
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getNumberPatterns, sun.util.locale.provider.LocaleResources
Method to inline: <init>, java.util.IllegalFormatConversionException, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: getS4, com.oracle.svm.core.util.TypedMemoryReader, caller: walkOffsetsFromPointer, com.oracle.svm.core.heap.InstanceReferenceMapDecoder
Method to inline: <init>, java.nio.MappedByteBuffer, caller: <init>, java.nio.DirectByteBuffer
Method to inline: isDirectMemoryPageAligned, jdk.internal.misc.VM, caller: <init>, java.nio.DirectByteBuffer
Method to inline: pageSize, java.nio.Bits, caller: <init>, java.nio.DirectByteBuffer
Method to inline: getS4, com.oracle.svm.core.util.TypedMemoryReader, caller: getU4, com.oracle.svm.core.util.TypedMemoryReader
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: <init>, java.util.Formatter$Flags, caller: parse, java.util.Formatter$Flags
Method to inline: isZero, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: add, java.util.Formatter$Flags, caller: parse, java.util.Formatter$Flags
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setMinimumIntegerDigits, java.text.NumberFormat, caller: setMinimumIntegerDigits, java.text.DecimalFormat
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: <init>, java.util.DuplicateFormatFlagsException, caller: parse, java.util.Formatter$Flags
Method to inline: setMaximumIntegerDigits, java.text.NumberFormat, caller: setMinimumIntegerDigits, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getReferentPointer, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setMaximumIntegerDigits, java.text.NumberFormat, caller: setMaximumIntegerDigits, java.text.DecimalFormat
Method to inline: <init>, java.util.UnknownFormatFlagsException, caller: parse, java.util.Formatter$Flags
Method to inline: <init>, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setMinimumIntegerDigits, java.text.NumberFormat, caller: setMaximumIntegerDigits, java.text.DecimalFormat
Method to inline: toBigInteger, java.math.MutableBigInteger, caller: divideAndRound, java.math.BigDecimal
Method to inline: getProtocol, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getAuthority, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: toUnsignedInt, java.lang.Byte, caller: read, java.util.zip.InflaterInputStream
Method to inline: getUserInfo, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: ensureCapacity, java.util.ComparableTimSort, caller: mergeLo, java.util.ComparableTimSort
Method to inline: <init>, java.nio.DirectByteBuffer$Deallocator, caller: <init>, java.nio.DirectByteBuffer
Method to inline: <init>, java.io.InputStream, caller: <init>, java.io.FilterInputStream
Method to inline: setMinimumFractionDigits, java.text.NumberFormat, caller: setMinimumFractionDigits, java.text.DecimalFormat
Method to inline: isOpaque, java.net.URI, caller: compareTo, java.net.URI
Method to inline: <init>, jdk.internal.ref.Cleaner, caller: create, jdk.internal.ref.Cleaner
Method to inline: isOpaque, java.net.URI, caller: compareTo, java.net.URI
Method to inline: setMaximumFractionDigits, java.text.NumberFormat, caller: setMinimumFractionDigits, java.text.DecimalFormat
Method to inline: isOpaque, java.net.URI, caller: compareTo, java.net.URI
Method to inline: <init>, java.util.regex.Pattern$Loop, caller: <init>, java.util.regex.Pattern$LazyLoop
Method to inline: getProperties, com.oracle.svm.core.jdk.SystemPropertiesSupport, caller: getProperties, java.lang.System
Method to inline: has, java.util.regex.Pattern, caller: accept, java.util.regex.Pattern
Method to inline: <init>, java.math.BigDecimal, caller: negate, java.math.BigDecimal
Method to inline: maxDirectMemory, jdk.internal.misc.VM, caller: reserveMemory, java.nio.Bits
Method to inline: getJavaLangRefAccess, jdk.internal.misc.SharedSecrets, caller: reserveMemory, java.nio.Bits
Method to inline: <init>, java.math.BigDecimal, caller: valueOf, java.math.BigDecimal
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: hasExtensions, java.util.Locale, caller: retrieveFirstDayOfWeek, sun.util.locale.provider.CalendarDataUtility
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: isNaN, java.lang.Double, caller: print, java.util.Formatter$FormatSpecifier
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: dirtyCardIfNecessary, com.oracle.svm.core.genscavenge.HeapImpl, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.ByteBuffer
Method to inline: equals, java.lang.Object, caller: addAll, java.util.TreeSet
Method to inline: compare, java.lang.Byte, caller: compare, java.nio.ByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: getSoftReferenceClock, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: getReferentFieldAddress, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setGroupingUsed, java.text.NumberFormat, caller: setGroupingUsed, java.text.DecimalFormat
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: buildFromSorted, java.util.TreeMap, caller: addAllForTreeSet, java.util.TreeMap
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: setNextDiscovered, com.oracle.svm.core.heap.ReferenceInternals, caller: discover, com.oracle.svm.core.genscavenge.ReferenceObjectProcessing
Method to inline: <init>, java.util.regex.Pattern$NotBehind, caller: <init>, java.util.regex.Pattern$NotBehindS
Method to inline: <init>, java.util.regex.Pattern$Behind, caller: <init>, java.util.regex.Pattern$BehindS
Method to inline: <init>, java.time.Instant, caller: create, java.time.Instant
Method to inline: <init>, java.util.TreeMap$Entry, caller: buildFromSorted, java.util.TreeMap
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.format.DateTimePrintContext$1
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.format.DateTimePrintContext$1
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.format.DateTimePrintContext$1
Method to inline: getValue, com.oracle.svm.core.hub.HubType, caller: isReferenceInstance, com.oracle.svm.core.hub.HubType
Method to inline: <init>, java.util.UnknownFormatConversionException, caller: checkText, java.util.Formatter
Method to inline: isAscii, java.util.regex.ASCII, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: getGreyToBlackObjectVisitor, com.oracle.svm.core.genscavenge.GCImpl, caller: walkAlignedGreyObjects, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: <init>, java.util.regex.Pattern$GroupHead, caller: createGroup, java.util.regex.Pattern
Method to inline: charCount, java.lang.Character, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: <init>, java.util.TreeMap, caller: <init>, java.util.TreeSet
Method to inline: <init>, java.util.TreeSet, caller: <init>, java.util.TreeSet
Method to inline: <init>, java.util.TreeMap, caller: <init>, java.util.TreeSet
Method to inline: <init>, java.util.TreeSet, caller: <init>, java.util.TreeSet
Method to inline: getHost, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getPort, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: getPath, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.ZonedDateTime
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: needsStringSpanUTF16, sun.text.normalizer.UnicodeSetStringSpan, caller: spanBack, sun.text.normalizer.UnicodeSet
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjectsLoop, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: isAscii, java.util.regex.ASCII, caller: RemoveQEQuoting, java.util.regex.Pattern
Method to inline: charCount, java.lang.Character, caller: spanBack, sun.text.normalizer.UnicodeSet
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: signed, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: scanGreyObjects, com.oracle.svm.core.genscavenge.YoungGeneration
Method to inline: isFinite, java.lang.Double, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: setMaxLength, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: getExponent, java.lang.Math, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: size, java.util.ArrayList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: scalb, java.lang.Math, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: getExponent, java.lang.Math, caller: hexDouble, java.util.Formatter$FormatSpecifier
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenImageHeapRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: charCount, java.lang.Character, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$GroupTail, caller: createGroup, java.util.regex.Pattern
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: sleep, com.oracle.svm.core.thread.JavaThreads
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.CharBuffer
Method to inline: charCount, java.lang.Character, caller: normalizeSlice, java.util.regex.Pattern
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitNativeImageHeapRegion, com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor
Method to inline: compare, java.lang.Character, caller: compare, java.nio.CharBuffer
Method to inline: has, java.util.regex.Pattern, caller: read, java.util.regex.Pattern
Method to inline: isFinite, java.lang.Double, caller: toHexString, java.lang.Double
Method to inline: <init>, java.util.Locale$Builder, caller: findRegionOverride, sun.util.locale.provider.CalendarDataUtility
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: isDigit, java.util.regex.ASCII, caller: RemoveQEQuoting, java.util.regex.Pattern
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: getOffset, java.time.ZonedDateTime, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: sleep, com.oracle.svm.core.thread.JavaThreads
Method to inline: getQuery, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: getRef, java.net.URL, caller: parseURL, java.net.URLStreamHandler
Method to inline: setThreadStatus, com.oracle.svm.core.thread.JavaThreads, caller: sleep, com.oracle.svm.core.thread.JavaThreads
Method to inline: position, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: ordinal, java.lang.Enum, caller: modsValue, java.lang.module.ModuleDescriptor
Method to inline: compare, java.lang.Character, caller: compareTo, java.nio.StringCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: compareTo, java.nio.StringCharBuffer
Method to inline: isDigit, java.util.regex.ASCII, caller: closure, java.util.regex.Pattern
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: name, java.nio.charset.Charset, caller: compareTo, java.nio.charset.Charset
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: isDigit, java.util.regex.ASCII, caller: closure, java.util.regex.Pattern
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitNativeImageHeapRegion, com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: isDigit, java.util.regex.ASCII, caller: closure, java.util.regex.Pattern
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoZonedDateTime
Method to inline: addSuppressed, java.lang.Throwable, caller: visitNativeImageHeapRegion, com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: visitNativeImageHeapRegion, com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor
Method to inline: has, java.util.regex.Pattern, caller: newSlice, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: newSlice, java.util.regex.Pattern
Method to inline: toEpochDay, java.time.LocalDate, caller: compareTo, java.time.chrono.ChronoLocalDate
Method to inline: copySign, java.lang.Math, caller: toHexString, java.lang.Double
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: closure, java.util.regex.Pattern
Method to inline: getChronology, java.time.LocalDate, caller: getChronology, java.time.LocalDate
Method to inline: toEpochDay, java.time.LocalDate, caller: compareTo, java.time.chrono.ChronoLocalDate
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: closure, java.util.regex.Pattern
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.ZoneOffset
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.ZoneOffset
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: closure, java.util.regex.Pattern
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.temporal.TemporalAccessor
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.temporal.TemporalAccessor
Method to inline: isLeadSurrogate, sun.text.normalizer.UTF16, caller: spanOneBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.temporal.TemporalAccessor
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: closure, java.util.regex.Pattern
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanOneBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$Slice
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: closure, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$Ques, caller: closure, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$SliceI
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$SliceIS
Method to inline: getScript, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: name, java.nio.charset.Charset, caller: compareTo, java.nio.charset.Charset
Method to inline: getExponent, java.lang.Math, caller: toHexString, java.lang.Double
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: <init>, java.util.regex.Pattern$SliceNode, caller: <init>, java.util.regex.Pattern$SliceU
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: build, java.util.Locale$Builder
Method to inline: unread, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: curly, java.util.regex.Pattern
Method to inline: getRuntime, java.lang.Runtime, caller: gc, java.lang.System
Method to inline: unread, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: curly, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: atom, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CharPropertyGreedy, caller: curly, java.util.regex.Pattern
Method to inline: coder, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: <init>, java.util.regex.Pattern$NFCCharProperty, caller: atom, java.util.regex.Pattern
Method to inline: coder, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: <init>, java.util.regex.Pattern$Curly, caller: curly, java.util.regex.Pattern
Method to inline: isLatin1, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isLatin1, java.lang.String, caller: compare, java.lang.String$CaseInsensitiveComparator
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$CharPropertyGreedy, caller: <init>, java.util.regex.Pattern$BmpCharPropertyGreedy
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.Month
Method to inline: addSuppressed, java.lang.Throwable, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: size, java.util.ArrayList, caller: spanNotBack, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.Month
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: has, java.util.regex.Pattern, caller: single, java.util.regex.Pattern
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: has, java.util.regex.Pattern, caller: single, java.util.regex.Pattern
Method to inline: isAscii, java.util.regex.ASCII, caller: single, java.util.regex.Pattern
Method to inline: isNotContinuation, java.lang.StringCoding, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: <init>, sun.util.locale.LocaleObjectCache$CacheEntry, caller: get, sun.util.locale.LocaleObjectCache
Method to inline: getHeapPolicy, com.oracle.svm.core.genscavenge.HeapImpl, caller: gc, java.lang.Runtime
Method to inline: unread, java.util.regex.Pattern, caller: clazz, java.util.regex.Pattern
Method to inline: getUserRequestedGCPolicy, com.oracle.svm.core.genscavenge.HeapPolicy, caller: gc, java.lang.Runtime
Method to inline: unread, java.util.regex.Pattern, caller: clazz, java.util.regex.Pattern
Method to inline: getPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanBack, sun.text.normalizer.BMPSet
Method to inline: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: setPolicy, com.oracle.svm.core.genscavenge.GCImpl, caller: collectCompletely, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getGCImpl, com.oracle.svm.core.genscavenge.HeapImpl, caller: getGC, com.oracle.svm.core.genscavenge.HeapImpl
Method to inline: isNotContinuation, java.lang.StringCoding, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: getScript, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanBack, sun.text.normalizer.BMPSet
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: <init>, sun.util.locale.BaseLocale$Key, caller: normalize, sun.util.locale.BaseLocale$Key
Method to inline: isLower, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: isUpper, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: isDigit, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: isDigit, java.util.regex.ASCII, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: namedGroups, java.util.regex.Pattern, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: namedGroups, java.util.regex.Pattern, caller: appendExpandedReplacement, java.util.regex.Matcher
Method to inline: capacity, java.nio.Buffer, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: next, sun.nio.ch.Util$BufferCache, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: charCount, java.lang.Character, caller: producePermutations, java.util.regex.Pattern
Method to inline: capacity, java.nio.Buffer, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: getProtocol, java.net.URL, caller: setURL, java.net.URLStreamHandler
Method to inline: highSurrogate, java.lang.Character, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: next, sun.nio.ch.Util$BufferCache, caller: get, sun.nio.ch.Util$BufferCache
Method to inline: charCount, java.lang.Character, caller: producePermutations, java.util.regex.Pattern
Method to inline: lowSurrogate, java.lang.Character, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: unread, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: onMalformedInput, java.nio.charset.CharsetDecoder, caller: <init>, java.lang.StringCoding$StringDecoder
Method to inline: needsStringSpanUTF16, sun.text.normalizer.UnicodeSetStringSpan, caller: freeze, sun.text.normalizer.UnicodeSet
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetDecoder, caller: <init>, java.lang.StringCoding$StringDecoder
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: <init>, java.lang.StringCoding$Result, caller: <init>, java.lang.StringCoding$StringDecoder
Method to inline: has, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: isMalformed4_3, java.lang.StringCoding, caller: decodeUTF8_0, java.lang.StringCoding
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkThreadLocals, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: has, java.util.regex.Pattern, caller: range, java.util.regex.Pattern
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.LocalTime
Method to inline: <init>, java.lang.ref.SoftReference, caller: set, java.lang.StringCoding
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.LocalDateTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: match, sun.net.util.IPAddressUtil, caller: scan, sun.net.util.IPAddressUtil
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: toLocalTime, java.time.LocalDateTime, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getScript, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: rewind, java.nio.Buffer, caller: rewind, java.nio.ByteBuffer
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isBufferTooLarge, sun.nio.ch.Util, caller: getTemporaryAlignedDirectBuffer, sun.nio.ch.Util
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$UnixCaret
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Caret
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: hashCode, sun.util.locale.BaseLocale$Key
Method to inline: isLower, java.util.regex.ASCII, caller: toUpper, java.util.regex.ASCII
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: alignedSlice, java.nio.ByteBuffer
Method to inline: limit, java.nio.Buffer, caller: alignedSlice, java.nio.ByteBuffer
Method to inline: addSuppressed, java.lang.Throwable, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.nio.DirectByteBuffer, caller: slice, java.nio.DirectByteBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenStackRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: ASCII_WORD, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: bitsOrSingle, java.util.regex.Pattern
Method to inline: VertWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isNotContinuation, java.lang.StringCoding, caller: malformedN, java.lang.StringCoding
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: ordinal, java.lang.Enum, caller: <init>, jdk.internal.math.FormattedFloatingDecimal
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$Begin
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: <init>, java.nio.HeapByteBuffer, caller: wrap, java.nio.ByteBuffer
Method to inline: ASCII_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDateTime
Method to inline: position, java.nio.Buffer, caller: readIntoNativeBuffer, sun.nio.ch.IOUtil
Method to inline: limit, java.nio.Buffer, caller: readIntoNativeBuffer, sun.nio.ch.IOUtil
Method to inline: <init>, java.lang.String, caller: family, java.util.regex.Pattern
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.LocalDate
Method to inline: ensureBufferCapacity, sun.text.normalizer.UnicodeSet, caller: retain, sun.text.normalizer.UnicodeSet
Method to inline: namedGroups, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: <init>, java.util.Locale, caller: createObject, java.util.Locale$Cache
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: <init>, java.util.Locale, caller: createObject, java.util.Locale$Cache
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: <init>, java.lang.String, caller: family, java.util.regex.Pattern
Method to inline: namedGroups, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.chrono.ChronoLocalDate
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CIBackRef, caller: escape, java.util.regex.Pattern
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: namedGroups, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: chronology, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: zoneId, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: zone, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: <init>, java.util.regex.Pattern$BackRef, caller: escape, java.util.regex.Pattern
Method to inline: offset, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: localDate, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: HorizWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: localTime, java.time.temporal.TemporalQueries, caller: query, java.time.Instant
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: precision, java.time.temporal.TemporalQueries, caller: query, java.time.DayOfWeek
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: addSuppressed, java.lang.Throwable, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getJavaLangAccess, jdk.internal.misc.SharedSecrets, caller: blockedOn, java.nio.channels.spi.AbstractInterruptibleChannel
Method to inline: ASCII_DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promoteIndividualPinnedObjects, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isNotContinuation, java.lang.StringCoding, caller: malformedN, java.lang.StringCoding
Method to inline: isNotContinuation, java.lang.StringCoding, caller: malformedN, java.lang.StringCoding
Method to inline: unread, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: unread, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: <init>, java.util.regex.Pattern$Bound, caller: escape, java.util.regex.Pattern
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$UnixDollar, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: bitsOrSingle, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$Dollar, caller: escape, java.util.regex.Pattern
Method to inline: <init>, java.nio.charset.MalformedInputException, caller: throwMalformed, java.lang.StringCoding
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: ASCII_WORD, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: isAscii, java.util.regex.ASCII, caller: add, java.util.regex.Pattern$BitClass
Method to inline: emptyMap, java.util.Collections, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: <init>, java.util.TreeMap, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: <init>, java.nio.channels.spi.AbstractInterruptibleChannel$1, caller: begin, java.nio.channels.spi.AbstractInterruptibleChannel
Method to inline: position, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: VertWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: <init>, sun.util.locale.Extension, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: getUserInfo, java.net.URL, caller: checkExternalForm, sun.net.util.IPAddressUtil
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: range, java.time.temporal.ChronoField, caller: range, java.time.ZonedDateTime
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: ensureBufferCapacity, sun.text.normalizer.UnicodeSet, caller: xor, sun.text.normalizer.UnicodeSet
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: promotePinnedObject, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: beginBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: range, java.time.temporal.ChronoField, caller: range, java.time.temporal.TemporalAccessor
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: getHost, java.net.URL, caller: checkExternalForm, sun.net.util.IPAddressUtil
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: <init>, java.util.TreeMap, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: normalize, sun.nio.ch.IOStatus, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: range, java.time.temporal.ChronoField, caller: range, java.time.Month
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.US_ASCII$Decoder
Method to inline: ASCII_SPACE, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: endBlocking, sun.nio.ch.FileChannelImpl, caller: position, sun.nio.ch.FileChannelImpl
Method to inline: emptyMap, java.util.Collections, caller: <init>, sun.util.locale.LocaleExtensions
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.ArrayList
Method to inline: match, sun.net.util.IPAddressUtil, caller: scan, sun.net.util.IPAddressUtil
Method to inline: HorizWS, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: ordinal, java.lang.Enum, caller: range, java.time.LocalDate
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: range, java.time.temporal.ChronoField, caller: range, java.time.LocalDate
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: getYear, java.time.LocalDate, caller: range, java.time.LocalDate
Method to inline: getPinHead, com.oracle.svm.core.genscavenge.HeapImpl, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: claimPinnedObjectList, com.oracle.svm.core.genscavenge.PinnedObjectImpl
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: has, java.util.regex.Pattern, caller: family, java.util.regex.Pattern
Method to inline: ASCII_DIGIT, java.util.regex.CharPredicates, caller: escape, java.util.regex.Pattern
Method to inline: setMaxLength, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: size, java.util.ArrayList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: getValue, java.util.TreeMap$Entry, caller: toID, sun.util.locale.LocaleExtensions
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: <init>, java.net.URI, caller: <init>, java.net.URI
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: position, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: has, java.util.regex.Pattern, caller: escape, java.util.regex.Pattern
Method to inline: limit, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: capacity, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: <init>, java.util.regex.Pattern$Bound, caller: escape, java.util.regex.Pattern
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: discardMark, java.nio.Buffer, caller: compact, java.nio.HeapByteBuffer
Method to inline: <init>, java.time.temporal.ValueRange, caller: of, java.time.temporal.ValueRange
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: newCharProperty, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: range, java.time.temporal.ChronoField, caller: range, java.time.DayOfWeek
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: remaining, java.nio.Buffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: <init>, sun.util.locale.Extension, caller: <init>, sun.util.locale.UnicodeLocaleExtension
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: remaining, java.nio.Buffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: emptySet, java.util.Collections, caller: <init>, sun.util.locale.UnicodeLocaleExtension
Method to inline: <init>, java.nio.HeapCharBuffer, caller: slice, java.nio.HeapCharBuffer
Method to inline: <init>, java.util.regex.Pattern$BitClass, caller: <init>, java.util.regex.Pattern$BitClass
Method to inline: remaining, java.nio.Buffer, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: emptyMap, java.util.Collections, caller: <init>, sun.util.locale.UnicodeLocaleExtension
Method to inline: <init>, java.util.regex.Pattern$CharProperty, caller: <init>, java.util.regex.Pattern$BmpCharProperty
Method to inline: isEmpty, sun.text.normalizer.UnicodeSetStringSpan$OffsetList, caller: spanWithStrings, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: highSurrogate, java.lang.Character, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: lowSurrogate, java.lang.Character, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getYoungGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: prepareForPromotion, com.oracle.svm.core.genscavenge.YoungGeneration, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: hasRemaining, java.nio.Buffer, caller: implReady, sun.nio.cs.StreamDecoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isMalformed4_3, sun.nio.cs.UTF_8$Decoder, caller: decodeBufferLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: position, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: clearCaches, java.util.Scanner, caller: makeSpace, java.util.Scanner
Method to inline: unread, java.util.regex.Pattern, caller: o, java.util.regex.Pattern
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: unread, java.util.regex.Pattern, caller: o, java.util.regex.Pattern
Method to inline: ordinal, java.lang.Enum, caller: get, java.time.ZonedDateTime
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.ISO_8859_1$Decoder
Method to inline: translateSavedIndexes, java.util.Scanner, caller: makeSpace, java.util.Scanner
Method to inline: capacity, java.nio.Buffer, caller: makeSpace, java.util.Scanner
Method to inline: isTrailSurrogate, sun.text.normalizer.UTF16, caller: spanOne, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: has, java.util.regex.Pattern, caller: ref, java.util.regex.Pattern
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: spanOne, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: translateSavedIndexes, java.util.Scanner, caller: makeSpace, java.util.Scanner
Method to inline: has, java.util.regex.Pattern, caller: ref, java.util.regex.Pattern
Method to inline: <init>, java.util.regex.Pattern$CIBackRef, caller: ref, java.util.regex.Pattern
Method to inline: getOffset, java.time.ZonedDateTime, caller: get, java.time.ZonedDateTime
Method to inline: <init>, java.util.regex.Pattern$BackRef, caller: ref, java.util.regex.Pattern
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: get, java.time.ZonedDateTime
Method to inline: scan, java.net.URI$Parser, caller: parseAuthority, java.net.URI$Parser
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getCurrencyName, sun.util.locale.provider.LocaleResources
Method to inline: size, java.util.ArrayList, caller: spanNot, sun.text.normalizer.UnicodeSetStringSpan
Method to inline: scan, java.net.URI$Parser, caller: parseAuthority, java.net.URI$Parser
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$LastMatch
Method to inline: ordinal, java.lang.Enum, caller: get, java.time.chrono.ChronoZonedDateTime
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: scan, java.net.URI$Parser, caller: parseAuthority, java.net.URI$Parser
Method to inline: <init>, java.lang.String, caller: N, java.util.regex.Pattern
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getCurrencyNames, sun.util.resources.LocaleData
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: position, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: remaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: remaining, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: limit, java.nio.Buffer, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: decode, sun.nio.cs.UnicodeDecoder, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: getOffset, java.time.ZonedDateTime, caller: get, java.time.chrono.ChronoZonedDateTime
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: malformedN, sun.nio.cs.UTF_8$Decoder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: getTotalSeconds, java.time.ZoneOffset, caller: get, java.time.chrono.ChronoZonedDateTime
Method to inline: current, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: span, sun.text.normalizer.BMPSet
Method to inline: remaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: decode, sun.nio.cs.UnicodeDecoder, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: isValidCodePoint, java.lang.Character, caller: codePointOf, java.lang.Character
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: setScanStart, com.oracle.svm.core.genscavenge.GreyObjectsWalker
Method to inline: remaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: getToGreyObjectsWalker, com.oracle.svm.core.genscavenge.OldGeneration, caller: prepareForPromotion, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: hasRemaining, java.nio.Buffer, caller: decodeLoop, sun.nio.cs.UnicodeDecoder
Method to inline: getRawSupplementary, sun.text.normalizer.UCharacterProperty, caller: span, sun.text.normalizer.BMPSet
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: parseIPv6Reference, java.net.URI$Parser, caller: parseServer, java.net.URI$Parser
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: put, java.nio.HeapCharBuffer
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: reset, com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: position, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: parseIPv6Reference, java.net.URI$Parser, caller: parseServer, java.net.URI$Parser
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: ordinal, java.lang.Enum, caller: get, java.time.Instant
Method to inline: addSuppressed, java.lang.Throwable, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: remaining, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: capacity, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: discardMark, java.nio.Buffer, caller: compact, java.nio.HeapCharBuffer
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: cheneyScanFromDirtyRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: limit, java.nio.Buffer, caller: findPatternInBuffer, java.util.Scanner
Method to inline: <init>, java.util.concurrent.ConcurrentHashMap$Node, caller: <init>, java.util.concurrent.ConcurrentHashMap$ReservationNode
Method to inline: hitEnd, java.util.regex.Matcher, caller: findPatternInBuffer, java.util.Scanner
Method to inline: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: requireEnd, java.util.regex.Matcher, caller: findPatternInBuffer, java.util.Scanner
Method to inline: getName, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: open, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: getName, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getAbbreviation, sun.util.calendar.Era, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: <init>, java.util.GregorianCalendar, caller: createCalendar, java.util.Calendar
Method to inline: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, caller: getDisplayNameImpl, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: getCC, sun.text.normalizer.NormalizerImpl, caller: decomposeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: decomposeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: getCC, sun.text.normalizer.NormalizerImpl, caller: decomposeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: GRAPH, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: scan, java.net.URI$Parser, caller: parseHostname, java.net.URI$Parser
Method to inline: <init>, java.nio.charset.CoderResult, caller: lambda$malformedForLength$0, java.nio.charset.CoderResult
Method to inline: BLANK, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: scan, java.net.URI$Parser, caller: parseHostname, java.net.URI$Parser
Method to inline: <init>, java.nio.charset.CoderResult, caller: lambda$unmappableForLength$1, java.nio.charset.CoderResult
Method to inline: highSurrogate, java.lang.Character, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: removePrivateuseVariant, sun.util.locale.InternalLocaleBuilder
Method to inline: lowSurrogate, java.lang.Character, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: malformedN, sun.nio.cs.UTF_8$Decoder
Method to inline: isPresent, java.util.Optional, caller: map, java.util.Optional
Method to inline: scan, java.net.URI$Parser, caller: parseHostname, java.net.URI$Parser
Method to inline: findNextCompBoundary, sun.text.normalizer.NormalizerImpl, caller: composeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: getBaseStyle, sun.util.locale.provider.CalendarNameProviderImpl, caller: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: isNotContinuation, sun.nio.cs.UTF_8$Decoder, caller: malformedN, sun.nio.cs.UTF_8$Decoder
Method to inline: saveState, java.util.Scanner, caller: hasNextLine, java.util.Scanner
Method to inline: linePattern, java.util.Scanner, caller: hasNextLine, java.util.Scanner
Method to inline: <init>, java.security.PermissionsHash, caller: apply, java.security.Permissions$1
Method to inline: match, java.net.URI, caller: parseHostname, java.net.URI$Parser
Method to inline: isMalformed4_3, sun.nio.cs.UTF_8$Decoder, caller: decodeArrayLoop, sun.nio.cs.UTF_8$Decoder
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: revertState, java.util.Scanner, caller: hasNextLine, java.util.Scanner
Method to inline: <init>, java.security.AllPermissionCollection, caller: newPermissionCollection, java.security.AllPermission
Method to inline: remaining, java.nio.Buffer, caller: xflow, sun.nio.cs.UTF_8$Decoder
Method to inline: CONTROL, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: getSigners, java.lang.Class, caller: getUnresolvedPermissions, java.security.Permissions
Method to inline: toStyleName, sun.util.locale.provider.CalendarNameProviderImpl, caller: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: pattern, java.util.regex.Matcher, caller: cacheResult, java.util.Scanner
Method to inline: <init>, java.security.PermissionsHash, caller: getUnresolvedPermissions, java.security.Permissions
Method to inline: PUNCTUATION, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: pattern, java.util.regex.Matcher, caller: cacheResult, java.util.Scanner
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: <init>, java.util.LinkedHashMap, caller: <init>, jdk.internal.module.IllegalAccessLogger$Usages
Method to inline: <init>, java.util.Scanner, caller: <init>, java.util.Scanner
Method to inline: toStyleName, sun.util.locale.provider.CalendarNameProviderImpl, caller: getResourceKeyFor, sun.util.locale.provider.CalendarNameProviderImpl
Method to inline: UPPERCASE, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: <init>, java.util.stream.WhileOps$1Op, caller: makeDropWhileRef, java.util.stream.WhileOps
Method to inline: <init>, java.util.Scanner$PatternLRUCache, caller: <init>, java.util.Scanner
Method to inline: LOWERCASE, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: <init>, java.util.stream.SliceOps$1, caller: makeRef, java.util.stream.SliceOps
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: getPosixPredicate, java.util.regex.CharPredicates
Method to inline: getOldGeneration, com.oracle.svm.core.genscavenge.HeapImpl, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: isValidCodePoint, java.lang.Character, caller: getName, java.lang.Character
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: next, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: addSuppressed, java.lang.Throwable, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: close, com.oracle.svm.core.genscavenge.GCImpl$Timer, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: toString, java.lang.Character$Subset, caller: getName, java.lang.Character
Method to inline: replace, java.lang.String, caller: getName, java.lang.Character
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: getBaseLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: scan, java.net.URI$Parser, caller: scanIPv4Address, java.net.URI$Parser
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: castingIdentity, java.util.stream.Collectors, caller: <init>, java.util.stream.Collectors$CollectorImpl
Method to inline: <init>, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry, caller: contains, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet
Method to inline: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: composeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: empty, java.util.Optional, caller: map, java.util.Optional
Method to inline: getStringBuilder, sun.text.normalizer.NormalizerImpl$ReorderingBuffer, caller: composeAndAppend, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, java.util.stream.Collectors$CollectorImpl, caller: <init>, java.util.stream.Collectors$CollectorImpl
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getCalendarNames, sun.util.locale.provider.LocaleResources
Method to inline: empty, java.util.Optional, caller: ofNullable, java.util.Optional
Method to inline: scan, java.net.URI$Parser, caller: scanByte, java.net.URI$Parser
Method to inline: isValidCodePoint, java.lang.Character, caller: of, java.lang.Character$UnicodeBlock
Method to inline: <init>, java.util.Optional, caller: of, java.util.Optional
Method to inline: getDefaultRef, java.util.TimeZone, caller: getDefault, java.util.TimeZone
Method to inline: getSuperclass, java.lang.Class, caller: contains, java.util.JumboEnumSet
Method to inline: ordinal, java.lang.Enum, caller: contains, java.util.JumboEnumSet
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getJavaTimeNames, sun.util.locale.provider.LocaleResources
Method to inline: charCount, java.lang.Character, caller: findPreviousCompBoundary, sun.text.normalizer.NormalizerImpl
Method to inline: scanHexSeq, java.net.URI$Parser, caller: scanHexPost, java.net.URI$Parser
Method to inline: getSuperclass, java.lang.Class, caller: contains, java.util.RegularEnumSet
Method to inline: getValue, java.util.TreeMap$Entry, caller: contains, java.util.TreeMap$EntrySet
Method to inline: ordinal, java.lang.Enum, caller: contains, java.util.RegularEnumSet
Method to inline: isKnown, java.util.stream.StreamOpFlag, caller: isOrdered, java.util.stream.AbstractPipeline
Method to inline: match, java.net.URI, caller: scan, java.net.URI$Parser
Method to inline: isInvalid, java.io.File, caller: isDirectory, java.io.File
Method to inline: <init>, java.io.File, caller: getAbsoluteFile, java.io.File
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: HEX_DIGIT, java.util.regex.CharPredicates
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: blackenDirtyCardRoots, com.oracle.svm.core.genscavenge.GCImpl
Method to inline: useTransparentBounds, java.util.regex.Matcher, caller: <init>, java.util.Scanner
Method to inline: getFromSpace, com.oracle.svm.core.genscavenge.OldGeneration, caller: emptyFromSpaceIntoToSpace, com.oracle.svm.core.genscavenge.OldGeneration
Method to inline: <init>, sun.util.locale.BaseLocale$Key, caller: getInstance, sun.util.locale.BaseLocale
Method to inline: useAnchoringBounds, java.util.regex.Matcher, caller: <init>, java.util.Scanner
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: coder, java.lang.String, caller: getBytes, java.lang.String
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: getMessage, java.lang.Throwable, caller: setRegion, java.util.Locale$Builder
Method to inline: match, java.net.URI, caller: quote, java.net.URI
Method to inline: maxBytesPerChar, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: scan, java.net.URI$Parser, caller: scanHexSeq, java.net.URI$Parser
Method to inline: scan, java.net.URI$Parser, caller: checkChars, java.net.URI$Parser
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isSurrogate, sun.text.normalizer.UTF16, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: match, java.net.URI, caller: scanEscape, java.net.URI$Parser
Method to inline: addSuppressed, java.lang.Throwable, caller: realpath, com.oracle.svm.core.posix.PosixProcessPropertiesSupport
Method to inline: isSurrogateLead, sun.text.normalizer.NormalizerImpl$UTF16Plus, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: scan, java.net.URI$Parser, caller: scanHexSeq, java.net.URI$Parser
Method to inline: match, java.net.URI, caller: scanEscape, java.net.URI$Parser
Method to inline: toCodePoint, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: toCodePoint, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: <init>, sun.util.locale.LocaleSyntaxException, caller: setRegion, sun.util.locale.InternalLocaleBuilder
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: nonNull, java.util.Objects, caller: getGenericDisplayName, sun.util.locale.provider.TimeZoneNameProviderImpl
Method to inline: charCount, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: hasRemaining, java.nio.Buffer, caller: appendEncoded, java.net.URI
Method to inline: getMessage, java.lang.Throwable, caller: setLocale, java.util.Locale$Builder
Method to inline: isMaybeOrNonZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: charCount, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: isCompYesAndZeroCC, sun.text.normalizer.NormalizerImpl, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: scale, java.lang.StringCoding, caller: encode, java.lang.StringCoding
Method to inline: charCount, java.lang.Character, caller: composeQuickCheck, sun.text.normalizer.NormalizerImpl
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: getScript, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: onMalformedInput, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: onUnmappableCharacter, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: empty, java.util.Optional, caller: retrieveInteger, sun.util.cldr.CLDRCalendarDataProviderImpl
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: ALNUM, java.util.regex.CharPredicates
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: DIGIT, java.util.regex.CharPredicates, caller: ALNUM, java.util.regex.CharPredicates
Method to inline: nonNull, java.util.Objects, caller: exists, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: getClassLoader0, java.lang.Class, caller: encode, java.lang.StringCoding
Method to inline: tzCanonicalIDs, sun.util.cldr.CLDRBaseLocaleDataMetaInfo, caller: canonicalTZID, sun.util.cldr.CLDRLocaleProviderAdapter
Method to inline: nonNull, java.util.Objects, caller: exists, sun.util.cldr.CLDRTimeZoneNameProviderImpl
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getCalendarData, sun.util.locale.provider.LocaleResources
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: getCountry, java.util.Locale
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: encode, java.lang.StringCoding
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder, caller: forLanguageTag, java.util.Locale
Method to inline: averageBytesPerChar, java.nio.charset.CharsetEncoder, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: remaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: position, java.nio.Buffer, caller: encode, java.lang.StringCoding
Method to inline: getUtilResourcesPackage, sun.util.locale.provider.LocaleProviderAdapter$Type, caller: getCalendarData, sun.util.resources.LocaleData
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: <init>, java.net.InetAddress$InetAddressHolder, caller: <init>, java.net.InetAddress
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: reset, java.nio.charset.CharsetDecoder, caller: newReader, java.nio.channels.Channels
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: holder, java.net.InetAddress, caller: <init>, java.net.Inet4Address
Method to inline: ordinal, java.lang.Enum, caller: toMode, sun.text.normalizer.NormalizerBase
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: <init>, java.io.Reader, caller: <init>, sun.nio.cs.StreamDecoder
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjects, com.oracle.svm.core.genscavenge.Space
Method to inline: charset, java.nio.charset.CharsetDecoder, caller: <init>, sun.nio.cs.StreamDecoder
Method to inline: <init>, java.net.InetAddress, caller: <init>, java.net.Inet6Address
Method to inline: <init>, java.lang.ref.ReferenceQueue, caller: <init>, sun.util.locale.provider.LocaleResources
Method to inline: <init>, java.net.Inet6Address$Inet6AddressHolder, caller: <init>, java.net.Inet6Address
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: <init>, java.lang.ref.SoftReference, caller: getInstance, java.lang.CharacterName
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: <init>, java.util.Formatter, caller: <init>, java.util.Formatter
Method to inline: <init>, java.lang.CharacterName$1, caller: <init>, java.lang.CharacterName
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: <init>, sun.nio.ch.NativeThreadSet, caller: <init>, sun.nio.ch.FileChannelImpl
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: <init>, java.util.zip.InflaterInputStream, caller: <init>, java.lang.CharacterName
Method to inline: isNull, java.util.Objects, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: getObjectIndex, com.oracle.svm.core.genscavenge.UnalignedHeapChunk, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: isNull, java.util.Objects, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: <init>, java.io.DataInputStream, caller: <init>, java.lang.CharacterName
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: <init>, sun.nio.ch.FileChannelImpl
Method to inline: <init>, sun.nio.ch.FileChannelImpl$Closer, caller: <init>, sun.nio.ch.FileChannelImpl
Method to inline: trace, sun.util.locale.provider.LocaleResources, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: toString, java.lang.Enum, caller: forType, sun.util.locale.provider.LocaleProviderAdapter
Method to inline: getLanguage, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfUnalignedHeapChunk, com.oracle.svm.core.genscavenge.UnalignedHeapChunk
Method to inline: getScript, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: addCount, java.util.concurrent.ConcurrentSkipListMap, caller: doRemove, java.util.concurrent.ConcurrentSkipListMap
Method to inline: getRegion, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: trace, sun.util.locale.provider.LocaleResources, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: hasRemaining, java.nio.Buffer, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getTimeZoneNames, sun.util.locale.provider.LocaleResources
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: flush, java.nio.charset.CharsetEncoder, caller: encode, java.nio.charset.CharsetEncoder
Method to inline: GRAPH, java.util.regex.CharPredicates, caller: PRINT, java.util.regex.CharPredicates
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: <init>, java.nio.channels.spi.AbstractInterruptibleChannel, caller: <init>, java.nio.channels.FileChannel
Method to inline: getVariant, sun.util.locale.BaseLocale, caller: forLanguageTag, java.util.Locale
Method to inline: <init>, sun.nio.ch.NativeDispatcher, caller: <init>, sun.nio.ch.FileDispatcher
Method to inline: BLANK, java.util.regex.CharPredicates, caller: PRINT, java.util.regex.CharPredicates
Method to inline: CONTROL, java.util.regex.CharPredicates, caller: PRINT, java.util.regex.CharPredicates
Method to inline: <init>, java.util.Date, caller: format, java.text.DateFormat
Method to inline: isAscii, java.util.regex.ASCII, caller: lambda$CIRange$13, java.util.regex.Pattern
Method to inline: close, java.io.FilterInputStream, caller: <init>, java.lang.CharacterName
Method to inline: <init>, sun.util.locale.LanguageTag, caller: parse, sun.util.locale.LanguageTag
Method to inline: addSuppressed, java.lang.Throwable, caller: <init>, java.lang.CharacterName
Method to inline: close, java.io.FilterInputStream, caller: <init>, java.lang.CharacterName
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parse, sun.util.locale.LanguageTag
Method to inline: canEncode, java.lang.StringLatin1, caller: toBytes, java.lang.StringLatin1
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parse, sun.util.locale.LanguageTag
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: parse, sun.util.locale.LanguageTag
Method to inline: isBmpCodePoint, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: isValidCodePoint, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: <init>, sun.util.locale.LocaleSyntaxException, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: isBmpCodePoint, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: highSurrogate, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: lowSurrogate, java.lang.Character, caller: toBytes, java.lang.StringUTF16
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: <init>, java.util.HashSet, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, java.util.HashSet, caller: setExtensions, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: <init>, java.io.FilterInputStream, caller: <init>, java.util.zip.InflaterInputStream
Method to inline: value, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: setExtensions, sun.util.locale.InternalLocaleBuilder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: of, java.lang.CharacterData, caller: isUnicodeIdentifierStart, java.lang.Character
Method to inline: <init>, java.util.zip.Inflater, caller: <init>, java.util.zip.Inflater
Method to inline: <init>, jdk.internal.ref.CleanerImpl$PhantomCleanableRef, caller: register, java.lang.ref.Cleaner
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: bool, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parsePrivateuse, sun.util.locale.LanguageTag
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: setLocale, sun.util.locale.InternalLocaleBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: <init>, java.util.zip.Inflater$InflaterZStreamRef$FinalizableZStreamRef, caller: get, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: getSuperclass, java.lang.Class, caller: get, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: <init>, java.util.zip.Inflater$InflaterZStreamRef, caller: get, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: isValidCodePoint, java.lang.Character, caller: of, java.lang.Character$UnicodeScript
Method to inline: indexToMemoryPointer, com.oracle.svm.core.genscavenge.CardTable, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: cleaner, jdk.internal.ref.CleanerFactory, caller: <init>, java.util.zip.Inflater$InflaterZStreamRef
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: setBeginIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: setEndIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$LineEnding
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$XGrapheme
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: <init>, java.nio.CharBuffer, caller: <init>, java.nio.CharBuffer
Method to inline: reset, java.nio.charset.CharsetEncoder, caller: encoderFor, sun.nio.cs.ThreadLocalCoders
Method to inline: of, java.lang.CharacterData, caller: isUnicodeIdentifierPart, java.lang.Character
Method to inline: getNegativePrefixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: getPositivePrefixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: <init>, java.util.HashSet, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: emptySet, java.util.Collections, caller: getUnicodeLocaleKeys, sun.util.locale.UnicodeLocaleExtension
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: of, java.lang.CharacterData, caller: isLowerCase, java.lang.Character
Method to inline: next, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: of, java.lang.CharacterData, caller: isLowerCase, java.lang.Character
Method to inline: initializeCalendar, java.text.SimpleDateFormat, caller: <init>, java.text.SimpleDateFormat
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: charset, java.nio.charset.CharsetEncoder, caller: hasName, sun.nio.cs.ThreadLocalCoders$2
Method to inline: name, java.nio.charset.Charset, caller: hasName, sun.nio.cs.ThreadLocalCoders$2
Method to inline: emptySet, java.util.Collections, caller: getKeys, sun.util.locale.LocaleExtensions
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: current, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: setBeginIndex, java.text.FieldPosition, caller: formatted, java.text.FieldPosition$Delegate
Method to inline: setEndIndex, java.text.FieldPosition, caller: formatted, java.text.FieldPosition$Delegate
Method to inline: charset, java.nio.charset.CharsetEncoder, caller: hasName, sun.nio.cs.ThreadLocalCoders$2
Method to inline: of, java.lang.CharacterData, caller: isMirrored, java.lang.Character
Method to inline: size, java.util.ArrayList, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: getTimeInMillis, java.util.Calendar, caller: getTime, java.util.Calendar
Method to inline: <init>, java.util.Date, caller: getTime, java.util.Calendar
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$GraphemeBound
Method to inline: next, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, java.text.AttributedString, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: checkVariants, sun.util.locale.InternalLocaleBuilder
Method to inline: cursor, java.util.regex.Pattern, caller: u, java.util.regex.Pattern
Method to inline: of, java.lang.CharacterData, caller: isIdeographic, java.lang.Character
Method to inline: toCodePoint, java.lang.Character, caller: u, java.util.regex.Pattern
Method to inline: setcursor, java.util.regex.Pattern, caller: u, java.util.regex.Pattern
Method to inline: toDigit, java.util.regex.ASCII, caller: uxxxx, java.util.regex.Pattern
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: WORD, java.util.regex.CharPredicates
Method to inline: <init>, sun.util.locale.LocaleSyntaxException, caller: <init>, sun.util.locale.LocaleSyntaxException
Method to inline: getNegativeSuffixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: of, java.lang.CharacterData, caller: isIdentifierIgnorable, java.lang.Character
Method to inline: <init>, java.text.FieldPosition$Delegate, caller: getFieldDelegate, java.text.FieldPosition
Method to inline: getPositiveSuffixFieldPositions, java.text.DecimalFormat, caller: subformat, java.text.DecimalFormat
Method to inline: JOIN_CONTROL, java.util.regex.CharPredicates, caller: WORD, java.util.regex.CharPredicates
Method to inline: isStandaloneStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isNarrowFormatStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isNarrowFormatStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: toStandaloneStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isStandaloneStyle, java.util.Calendar, caller: getDisplayName, java.util.Calendar
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseLanguage, sun.util.locale.LanguageTag
Method to inline: getChars, java.lang.AbstractStringBuilder, caller: getChars, java.lang.StringBuilder
Method to inline: toDigit, java.util.regex.ASCII, caller: x, java.util.regex.Pattern
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseLanguage, sun.util.locale.LanguageTag
Method to inline: toDigit, java.util.regex.ASCII, caller: x, java.util.regex.Pattern
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parseLanguage, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseLanguage, sun.util.locale.LanguageTag
Method to inline: toDigit, java.util.regex.ASCII, caller: x, java.util.regex.Pattern
Method to inline: of, java.lang.CharacterData, caller: isJavaIdentifierPart, java.lang.Character
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseExtlangs, sun.util.locale.LanguageTag
Method to inline: <init>, java.text.Format, caller: <init>, java.text.DateFormat
Method to inline: <init>, java.util.regex.Pattern$Node, caller: <init>, java.util.regex.Pattern$End
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseExtlangs, sun.util.locale.LanguageTag
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseExtlangs, sun.util.locale.LanguageTag
Method to inline: of, java.lang.CharacterData, caller: isWhitespace, java.lang.Character
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parseExtlangs, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseExtlangs, sun.util.locale.LanguageTag
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: object, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: currentStart, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: current, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: getCalendar, java.text.DateFormat, caller: getInstance, sun.util.locale.provider.DateFormatProviderImpl
Method to inline: of, java.lang.CharacterData, caller: isAlphabetic, java.lang.Character
Method to inline: next, sun.util.locale.StringTokenIterator, caller: setUnicodeLocaleExtension, sun.util.locale.InternalLocaleBuilder
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseScript, sun.util.locale.LanguageTag
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseScript, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseExtensions, sun.util.locale.LanguageTag
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parseScript, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseScript, sun.util.locale.LanguageTag
Method to inline: setBeginIndex, java.text.FieldPosition, caller: formatted, java.text.FieldPosition$Delegate
Method to inline: setEndIndex, java.text.FieldPosition, caller: formatted, java.text.FieldPosition$Delegate
Method to inline: setTimeZone, java.text.DateFormat, caller: getInstance, sun.util.locale.provider.DateFormatProviderImpl
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseRegion, sun.util.locale.LanguageTag
Method to inline: isFieldSet, java.util.Calendar, caller: checkDisplayNameParams, java.util.Calendar
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseRegion, sun.util.locale.LanguageTag
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parseRegion, sun.util.locale.LanguageTag
Method to inline: <init>, java.text.NumberFormat, caller: <init>, java.text.ChoiceFormat
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseRegion, sun.util.locale.LanguageTag
Method to inline: isDigit, java.util.regex.ASCII, caller: lambda$ASCII_DIGIT$15, java.util.regex.CharPredicates
Method to inline: add, java.util.ArrayList, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: applyPatternImpl, java.text.SimpleDateFormat, caller: applyPattern, java.text.SimpleDateFormat
Method to inline: of, java.lang.CharacterData, caller: isDigit, java.lang.Character
Method to inline: <init>, java.text.AttributedString, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseVariants, sun.util.locale.LanguageTag
Method to inline: isDone, sun.util.locale.StringTokenIterator, caller: parseVariants, sun.util.locale.LanguageTag
Method to inline: add, java.util.ArrayList, caller: formatted, java.text.CharacterIteratorFieldDelegate
Method to inline: current, sun.util.locale.StringTokenIterator, caller: parseVariants, sun.util.locale.LanguageTag
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: walkDirtyObjectsOfAlignedHeapChunk, com.oracle.svm.core.genscavenge.AlignedHeapChunk
Method to inline: currentEnd, sun.util.locale.StringTokenIterator, caller: parseVariants, sun.util.locale.LanguageTag
Method to inline: next, sun.util.locale.StringTokenIterator, caller: parseVariants, sun.util.locale.LanguageTag
Method to inline: emptyList, java.util.Collections, caller: getExtlangs, sun.util.locale.LanguageTag
Method to inline: <init>, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: <init>, java.util.Collections$UnmodifiableList, caller: unmodifiableList, java.util.Collections
Method to inline: setBeginIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: setEndIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: createRunAttributeDataVectors, java.text.AttributedString, caller: addAttributeImpl, java.text.AttributedString
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: add, java.util.ArrayList, caller: expandAffix, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: <init>, java.util.Collections$UnmodifiableList, caller: <init>, java.util.Collections$UnmodifiableRandomAccessList
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: emptyList, java.util.Collections, caller: getVariants, sun.util.locale.LanguageTag
Method to inline: setBeginIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: emptyList, java.util.Collections, caller: getExtensions, sun.util.locale.LanguageTag
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getImpreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: indexToMemoryPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: unsigned, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: isEnabled, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: setEndIndex, java.text.FieldPosition, caller: expandAffix, java.text.DecimalFormat
Method to inline: unbiasExponent, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: add, java.util.ArrayList, caller: expandAffix, java.text.DecimalFormat
Method to inline: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar, caller: <init>, sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar
Method to inline: exponentToOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexMinusDelta, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: hex, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: setBeginIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: string, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: setEndIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: newline, com.oracle.svm.core.log.Log$NoopLog, caller: getPreciseFirstObjectPointer, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: indexToMemoryOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getPointerAtOffset, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: getBigDecimalMultiplier, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: <init>, java.text.FieldPosition, caller: <init>, java.text.FieldPosition
Method to inline: <init>, java.text.MessageFormat, caller: subformat, java.text.MessageFormat
Method to inline: indexToTableOffset, com.oracle.svm.core.genscavenge.FirstObjectTable, caller: getEntryAtIndex, com.oracle.svm.core.genscavenge.FirstObjectTable
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.Vector
Method to inline: JOIN_CONTROL, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: <init>, sun.util.locale.provider.LocaleResources$ResourceReference, caller: getDateTimePattern, sun.util.locale.provider.LocaleResources
Method to inline: extendDigits, java.text.DigitList, caller: set, java.text.DigitList
Method to inline: NONCHARACTER_CODE_POINT, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: getDataChars, java.text.DigitList, caller: set, java.text.DigitList
Method to inline: getChars, java.lang.String, caller: set, java.text.DigitList
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: <init>, java.util.AbstractList, caller: <init>, java.util.Vector
Method to inline: WHITE_SPACE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: ordinal, java.lang.Enum, caller: shouldRoundUp, java.text.DigitList
Method to inline: UPPERCASE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: PUNCTUATION, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: isNaN, java.lang.Double, caller: nextDouble, java.text.ChoiceFormat
Method to inline: <init>, java.lang.Number, caller: <init>, java.math.BigDecimal
Method to inline: TITLECASE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: NONCHARACTER_CODE_POINT, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: setBeginIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: setEndIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: setBeginIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: setEndIndex, java.text.FieldPosition, caller: format, java.text.DecimalFormat
Method to inline: getBigIntegerMultiplier, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: <init>, java.math.BigDecimal, caller: multiply, java.math.BigDecimal
Method to inline: <init>, java.math.BigDecimal, caller: multiply, java.math.BigDecimal
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: <init>, java.math.BigDecimal, caller: multiply, java.math.BigDecimal
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: isNaN, java.lang.Double, caller: format, java.text.DecimalFormat
Method to inline: getNegativePrefixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$BnMS
Method to inline: getPositivePrefixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: extendDigits, java.text.DigitList, caller: set, java.text.DigitList
Method to inline: setBeginIndex, java.text.FieldPosition, caller: subformat, java.text.MessageFormat
Method to inline: getChars, java.lang.String, caller: set, java.text.DigitList
Method to inline: LOWERCASE, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: getNegativeSuffixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CIBackRef
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CIBackRef
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CharProperty
Method to inline: setEndIndex, java.text.FieldPosition, caller: subformat, java.text.MessageFormat
Method to inline: getPositiveSuffixFieldPositions, java.text.DecimalFormat, caller: format, java.text.DecimalFormat
Method to inline: LETTER, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CharPropertyGreedy
Method to inline: JOIN_CONTROL, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: charCount, java.lang.Character, caller: match, java.util.regex.Pattern$CharPropertyGreedy
Method to inline: getMaximumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumIntegerDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMaximumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: getMinimumFractionDigits, java.text.NumberFormat, caller: format, java.text.DecimalFormat
Method to inline: IDEOGRAPHIC, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: checkAndSetFastPathStatus, java.text.DecimalFormat, caller: fastFormat, java.text.DecimalFormat
Method to inline: CONTROL, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: ASSIGNED, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: isFinite, java.lang.Double, caller: fastFormat, java.text.DecimalFormat
Method to inline: copySign, java.lang.Math, caller: fastFormat, java.text.DecimalFormat
Method to inline: ALPHABETIC, java.util.regex.CharPredicates, caller: getUnicodePredicate, java.util.regex.CharPredicates
Method to inline: <init>, java.text.DecimalFormat$FastPathData, caller: resetFastPathData, java.text.DecimalFormat
Method to inline: exactRoundUp, java.text.DecimalFormat, caller: fastDoubleFormat, java.text.DecimalFormat
Method to inline: <init>, java.text.CharacterIteratorFieldDelegate, caller: formatToCharacterIterator, java.text.DecimalFormat
Method to inline: <init>, java.text.AttributedString, caller: createAttributedCharacterIterator, java.text.Format
Method to inline: <init>, java.util.ArrayList, caller: formatToCharacterIterator, java.text.MessageFormat
Method to inline: <init>, java.text.CharacterIteratorFieldDelegate, caller: formatToCharacterIterator, java.text.SimpleDateFormat
Method to inline: size, java.util.ArrayList, caller: formatToCharacterIterator, java.text.MessageFormat
Method to inline: size, java.util.ArrayList, caller: formatToCharacterIterator, java.text.MessageFormat
Method to inline: <init>, java.util.Date, caller: formatToCharacterIterator, java.text.SimpleDateFormat
Method to inline: <init>, java.text.AttributedString, caller: getIterator, java.text.CharacterIteratorFieldDelegate
Method to inline: add, java.util.ArrayList, caller: getIterator, java.text.CharacterIteratorFieldDelegate
Method to inline: <init>, java.util.HashSet, caller: <init>, java.text.AttributedString
Method to inline: size, java.util.ArrayList, caller: getIterator, java.text.CharacterIteratorFieldDelegate
Method to inline: <init>, java.text.AttributedString, caller: createAttributedCharacterIterator, java.text.Format
Method to inline: createRunAttributeDataVectors, java.text.AttributedString, caller: setAttributes, java.text.AttributedString
Method to inline: <init>, java.text.AttributedString$AttributeMap, caller: getAttributes, java.text.AttributedString$AttributedStringIterator
Method to inline: <init>, java.util.Dictionary, caller: <init>, java.util.Hashtable
Method to inline: <init>, java.util.HashSet, caller: getAllAttributeKeys, java.text.AttributedString$AttributedStringIterator
Method to inline: isNaN, java.lang.Float, caller: <init>, java.util.Hashtable
Method to inline: <init>, java.util.HashSet, caller: getAllAttributeKeys, java.text.AttributedString$AttributedStringIterator
Method to inline: ALL, java.util.regex.Pattern, caller: forProperty, java.util.regex.CharPredicates
[simplemethods:3268]      (parse):     826.12 ms,  1.71 GB
[simplemethods:3268]     (inline):   1,950.99 ms,  1.71 GB
[simplemethods:3268]    (compile):   5,849.49 ms,  3.19 GB
[simplemethods:3268]      compile:   9,054.56 ms,  3.19 GB
[simplemethods:3268]        image:   1,162.38 ms,  3.19 GB
[simplemethods:3268]        write:     155.08 ms,  3.19 GB
[simplemethods:3268]      [total]:  26,951.44 ms,  3.19 GB
